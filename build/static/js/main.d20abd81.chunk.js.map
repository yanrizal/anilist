{"version":3,"sources":["components/Layout/Tagline.js","components/Layout/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Tagline","children","className","Topbar","React","lazy","Footer","FooterWithoutMenuLightSocialOnly","CustomDot","Fragment","icon","CryptoTagline","Layout","tagLineContent","this","props","location","pathname","fallback","id","tagline","hasDarkTopBar","isLight","ContainerClassName","style","height","width","TransitionClassName","Component","withRouter","Home","routes","path","component","isWithoutLayout","exact","map","route","idx","WrappedComponent","isTopbarDark","Boolean","window","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d20abd81.chunk.js","sourcesContent":["import React from 'react';\n\nconst Tagline = ({ children }) => {\n    return <>\n        <div className=\"tagline bg-light\">\n            {children}\n        </div>\n    </>\n}\n\nexport default Tagline;","import React, { Component, Suspense } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport Tagline from \"./Tagline\";\n\n// Scroll up button\nimport ScrollUpButton from \"react-scroll-up-button\";\n\n\n//Import Icons\nimport FeatherIcon from \"feather-icons-react\";\n\n// Layout Components\nconst Topbar = React.lazy(() => import(\"./Topbar\"));\nconst Footer = React.lazy(() => import(\"./Footer\"));\nconst FooterWithoutMenuLightSocialOnly = React.lazy(() =>\n  import(\"./FooterWithoutMenuLightSocialOnly\")\n);\n\nconst CustomDot = () => {\n  return (\n    <React.Fragment>\n      <FeatherIcon icon=\"arrow-up\" className=\"icons\" />\n    </React.Fragment>\n  );\n};\n\nconst CryptoTagline = () => {\n  return <div className=\"container-fluid\">\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <div className=\"text-slider\">\n          <ul className=\"list-inline mb-0 move-text\">\n            <li className=\"list-inline-item px-2 mb-0\"><b>EOG</b> $ 55.88 <span className=\"text-success\">+$ 4.62 ( +9.01% )</span></li>\n            <li className=\"list-inline-item px-2 mb-0\"><b>CHKP</b> $ 120.03 <span className=\"text-danger\">-$ 14.07 ( -10.49% )</span></li>\n            <li className=\"list-inline-item px-2 mb-0\"><b>FANG</b> $ 63.58 <span className=\"text-success\">+$ 5.17 ( +8.84% )</span></li>\n            <li className=\"list-inline-item px-2 mb-0\"><b>M</b> $ 14.75 <span className=\"text-success\">+$ 1.05 ( +7.66% )</span></li>\n            <li className=\"list-inline-item px-2 mb-0\"><b>PKI</b> $ 139.72 <span className=\"text-danger\">-$ 11.41 ( -7.55% )</span></li>\n            <li className=\"list-inline-item px-2 mb-0\"><b>ABMD</b> $ 326.23 <span className=\"text-danger\">-$ 21.61 ( -6.21% )</span></li>\n            <li className=\"list-inline-item px-2 mb-0\"><b>BITCOIN</b> $ 37,471.47 <span className=\"text-danger\">+$ 492.60 ( +1.33% )</span></li>\n            <li className=\"list-inline-item px-2 mb-0\"><b>XRP</b> <span> $ 0.39</span><span className=\"text-muted\"> UNCH</span></li>\n            <li className=\"list-inline-item px-2 mb-0\"><b>LITECOIN</b> <span> $ 148.67</span><span className=\"text-danger\">-$ 5.58 ( -3.62% )</span></li>\n            <li className=\"list-inline-item px-2 mb-0\"><b>BITCOIN CASH</b> <span> $ 427.37</span><span className=\"text-danger\">-$ 15.98 ( -3.60% )</span></li>\n            <li className=\"list-inline-item px-2 mb-0\"><b>ETHEREUM</b> $ 1,647.87 <span className=\"text-danger\">+$ 14.51 ( +0.89% )</span></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n\n}\n\nconst Loader = () => {\n  return (\n    <div id=\"preloader\">\n      <div id=\"status\">\n        <div className=\"spinner\">\n          <div className=\"double-bounce1\"></div>\n          <div className=\"double-bounce2\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\nclass Layout extends Component {\n\n  render() {\n    const tagLineContent = this.props.location.pathname === \"/index-crypto-two\" ? <Tagline><CryptoTagline /></Tagline> : null;\n    return (\n      <React.Fragment>\n        <Suspense fallback={Loader()}>\n            <Topbar tagline={tagLineContent} hasDarkTopBar={this.props.hasDarkTopBar} />\n          \n\n          {this.props.children}\n          {(() => {\n            if (\n              this.props.location.pathname === \"/index-marketing\" ||\n              this.props.location.pathname === \"/index-digital-agency\" ||\n              this.props.location.pathname === \"/index-modern-business\" ||\n              this.props.location.pathname === \"/index-services\" ||\n              this.props.location.pathname === \"/index-job\" ||\n              this.props.location.pathname === \"index-freelancer\"\n            ) {\n              return <Footer isLight={true} />;\n            } else if (\n              this.props.location.pathname === \"/index-portfolio\"\n            ) {\n              return (\n                <FooterWithoutMenuLightSocialOnly className=\"border-0 bg-light text-dark\" />\n              );\n            } else if (\n              this.props.location.pathname === \"/index-personal\" ||\n              this.props.location.pathname === \"/helpcenter-overview\" ||\n              this.props.location.pathname === '/helpcenter-guides' ||\n              this.props.location.pathname === '/helpcenter-support-request' ||\n              this.props.location.pathname === \"/page-invoice\"\n            ) {\n              return <FooterWithoutMenuLightSocialOnly className=\"\" />;\n            } else {\n              return <Footer />;\n            }\n          })()}\n\n          {/* <div className=\"btn btn-icon btn-soft-primary back-to-top\"> */}\n          {/* scrollup button */}\n          <ScrollUpButton\n            ContainerClassName=\"classForContainer\"\n            style={{ height: 36, width: 36 }}\n            TransitionClassName=\"classForTransition\"\n          >\n            <CustomDot />\n          </ScrollUpButton>\n          {/* </div> */}\n        </Suspense>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Layout);\n","import React from \"react\";\r\n\r\nconst Home = React.lazy(() =>\r\n  import(\"./pages/Pages\")\r\n);\r\nconst PageDetail = React.lazy(() =>\r\n  import(\"./pages/Pages/PageDetail\")\r\n);\r\nconst PageError = React.lazy(() => import(\"./pages/Pages/PageError\"));\r\n\r\nconst routes = [\r\n\r\n  //Index root\r\n  { path: \"/anime/:id\", component: PageDetail},\r\n  { path: \"/\", component: Home, isWithoutLayout: true, exact: true },\r\n  { component: PageError, isWithoutLayout: true, exact: false },\r\n];\r\n\r\nexport default routes;\r\n","import React, { Suspense } from \"react\";\nimport Layout from \"./components/Layout/\";\nimport {\n  Route,\n  Switch,\n  BrowserRouter as Router,\n  withRouter,\n} from \"react-router-dom\";\n\n// Import Css\nimport \"./assets/css/materialdesignicons.min.css\";\nimport \"./Apps.scss\";\n\nimport \"./assets/css/colors/default.css\";\n\n// Include Routes\nimport routes from \"./routes\";\n\nfunction withLayout(WrappedComponent, hasDarkTopBar) {\n  // ...and returns another component...\n  return class extends React.Component {\n    render() {\n      return (\n        <Layout hasDarkTopBar={hasDarkTopBar}>\n          <WrappedComponent></WrappedComponent>\n        </Layout>\n      );\n    }\n  };\n}\n\nconst App = () => {\n\n  const Loader = () => {\n    return (\n      <div id=\"preloader\">\n        <div id=\"status\">\n          <div className=\"spinner\">\n            <div className=\"double-bounce1\"></div>\n            <div className=\"double-bounce2\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Router>\n        <Suspense fallback={Loader()}>\n          <Switch>\n            {routes.map((route, idx) =>\n              route.isWithoutLayout ? (\n                <Route\n                  path={route.path}\n                  exact={route.exact}\n                  component={route.component}\n                  key={idx}\n                />\n              ) : (\n                <Route\n                  path={route.path}\n                  exact\n                  component={withLayout(route.component, route.isTopbarDark)}\n                  key={idx}\n                />\n              )\n            )}\n          </Switch>\n        </Suspense>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}