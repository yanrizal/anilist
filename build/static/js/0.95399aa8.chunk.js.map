{"version":3,"sources":["../node_modules/reactstrap/es/utils.js","../node_modules/classnames/index.js","../node_modules/tslib/tslib.es6.js","../../src/storeUtils.ts","../../src/directives.ts","../../src/fragments.ts","../../src/util/assign.ts","../../src/getFromAST.ts","../../src/util/filterInPlace.ts","../../src/transform.ts","../../src/util/canUse.ts","../../src/util/cloneDeep.ts","../../src/util/environment.ts","../../src/util/errorHandling.ts","../../src/util/maybeDeepFreeze.ts","../../src/util/mergeDeep.ts","../../src/util/warnOnce.ts","../../src/invariant.ts","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/reactstrap/es/Container.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/process/browser.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/graphql/language/visitor.mjs","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/graphql/language/ast.mjs","../node_modules/graphql/jsutils/inspect.mjs","../../src/zenObservable.ts","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/language/blockString.mjs","../node_modules/graphql/language/characterClasses.mjs","../../src/linkUtils.ts","../../src/link.ts","../../src/equality.ts","../../src/core/networkStatus.ts","../../src/util/Observable.ts","../../src/util/arrays.ts","../../src/errors/ApolloError.ts","../../src/core/types.ts","../../src/core/ObservableQuery.ts","../../src/data/mutations.ts","../../src/data/queries.ts","../../src/core/LocalState.ts","../../src/util/capitalizeFirstLetter.ts","../../src/util/observables.ts","../../src/core/QueryManager.ts","../../src/data/store.ts","../../src/ApolloClient.ts","../../src/version.ts","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/mobx-state-tree/dist/mobx-state-tree.module.js","../node_modules/react-lazyload/lib/index.js","../node_modules/graphql-tag/node_modules/tslib/tslib.es6.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/jsutils/invariant.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/jsutils/instanceOf.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/parser.mjs","../../src/index.ts","../node_modules/graphql/language/printString.mjs","../node_modules/graphql/language/printer.mjs","../../src/httpLink.ts","../../src/utils.ts","../../src/types/Cache.ts","../../src/cache.ts","../../src/slot.ts","../../src/context.ts","../../src/entry.ts","../../src/key-trie.ts","../../src/fragmentMatcher.ts","../../src/depTrackingCache.ts","../../src/readFromStore.ts","../../src/objectCache.ts","../../src/writeToStore.ts","../../src/inMemoryCache.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/zen-observable/index.js","../node_modules/zen-observable/lib/Observable.js","../node_modules/fast-json-stable-stringify/index.js","../node_modules/symbol-observable/es/index.js","../node_modules/webpack/buildin/harmony-module.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/timers-browserify/main.js","../node_modules/setimmediate/setImmediate.js","../../src/errors.ts","../../src/utils/global.ts","../../src/utils/utils.ts","../../src/api/decorators.ts","../../src/types/overrideannotation.ts","../../src/core/atom.ts","../../src/api/become-observed.ts","../../src/utils/comparer.ts","../../src/types/modifiers.ts","../../src/types/actionannotation.ts","../../src/types/flowannotation.ts","../../src/types/computedannotation.ts","../../src/types/observableannotation.ts","../../src/types/autoannotation.ts","../../src/api/observable.ts","../../src/types/dynamicobject.ts","../../src/api/computed.ts","../../src/core/action.ts","../../src/types/observablevalue.ts","../../src/core/derivation.ts","../../src/core/computedvalue.ts","../../src/core/observable.ts","../../src/core/globalstate.ts","../../src/core/reaction.ts","../../src/api/trace.ts","../../src/api/action.ts","../../src/api/autorun.ts","../../src/api/extendobservable.ts","../../src/api/flow.ts","../../src/api/intercept-read.ts","../../src/api/intercept.ts","../../src/api/iscomputed.ts","../../src/api/isobservable.ts","../../src/api/object-api.ts","../../src/api/observe.ts","../../src/api/transaction.ts","../../src/types/intercept-utils.ts","../../src/types/listen-utils.ts","../../src/api/makeObservable.ts","../../src/types/observablearray.ts","../../src/core/spy.ts","../../src/types/observablemap.ts","../../src/types/observableset.ts","../../src/types/observableobject.ts","../../src/types/legacyobservablearray.ts","../../src/types/type-utils.ts","../../src/utils/eq.ts","../../src/utils/iterable.ts","../../src/mobx.ts","../node_modules/react-lazyload/lib/utils/event.js","../node_modules/react-lazyload/lib/utils/scrollParent.js","../node_modules/react-lazyload/lib/utils/debounce.js","../node_modules/react-lazyload/lib/utils/throttle.js","../node_modules/reactstrap/es/Spinner.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js"],"names":["globalCssModule","setScrollbarWidth","padding","document","body","style","paddingRight","getOriginalBodyPadding","window","getComputedStyle","parseInt","getPropertyValue","conditionallyUpdateScrollbar","scrollbarWidth","scrollDiv","createElement","position","top","width","height","overflow","appendChild","offsetWidth","clientWidth","removeChild","getScrollbarWidth","fixedContent","querySelectorAll","bodyPadding","innerWidth","mapToCssModules","className","cssModule","split","map","c","join","omit","obj","omitKeys","result","Object","keys","forEach","key","indexOf","pick","pickKeys","Array","isArray","length","warned","warnOnce","message","console","error","Element","targetPropType","PropTypes","oneOfType","string","func","props","propName","componentName","Error","shape","current","any","tagPropType","$$typeof","symbol","render","arrayOf","TransitionTimeouts","Fade","Collapse","Modal","Carousel","TransitionPropTypeKeys","keyCodes","esc","space","enter","tab","up","down","home","end","n","p","canUseDOM","getTag","value","undefined","prototype","toString","call","isObject","type","findDOMElements","target","isReactRefObj","tag","isFunction","selection","isArrayOrNodeList","els","getTarget","allElements","focusableElements","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","inner","apply","module","exports","default","extendStatics","d","b","setPrototypeOf","__proto__","__extends","__","this","constructor","create","__assign","assign","t","s","__rest","e","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","__generator","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","__spreadArrays","il","r","k","a","j","jl","valueToObjectRepresentation","argObj","name","variables","kind","isIntValue","isFloatValue","Number","isBooleanValue","isStringValue","isObjectValue","fields","isVariable","variableValue","isListValue","values","listValue","nestedArgArrayObj","isEnumValue","isNullValue","storeKeyNameFromField","field","directivesObj","directives","directive","getStoreKeyName","KNOWN_DIRECTIVES","fieldName","args","filterKeys","sort","JSON","stringify","completeFieldName","stringifiedArgs","argumentsObjectFromField","resultKeyNameFromField","alias","isField","isInlineFragment","isIdValue","idObject","generated","toIdValue","idConfig","id","typename","isJsonValue","jsonObject","getDirectiveInfoFromField","shouldInclude","filter","isInclusionDirective","directiveArguments","ifArgument","ifValue","every","evaledValue","hasDirectives","names","doc","Directive","node","getDirectiveNames","some","hasClientExports","getFragmentQueryDocument","fragmentName","actualFragmentName","fragments","definitions","definition","operation","selectionSet","selections","sources","source","checkDocument","operations","getOperationDefinition","getOperationName","x","getFragmentDefinitions","getQueryDefinition","queryDef","getMainDefinition","queryDoc","fragmentDefinition","createFragmentMap","symTable","fragment","getDefaultValues","variableDefinitions","defaultValues","defaultValue","variable","defaultValueObj","filterInPlace","array","test","context","elem","TYPENAME_FIELD","isEmpty","nullIfDocIsEmpty","fragmentDef","getFragmentDefinition","getDirectiveMatcher","dir","removeDirectivesFromDocument","variablesInUse","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","Variable","_key","parent","Field","remove","getAllFragmentSpreadsFromSelectionSet","frag","FragmentSpread","config","argMatcher","argument","aConfig","getArgumentMatcher","OperationDefinition","varDef","argConfig","Argument","removeArgumentsFromDocument","fs","def","FragmentDefinition","removeFragmentSpreadFromDocument","addTypenameToDocument","SelectionSet","lastIndexOf","connectionRemoveConfig","willRemove","removeConnectionDirectiveFromDocument","allFragments","buildQueryFromSelectionSet","removeClientSetsFromDocument","canUseWeakMap","WeakMap","navigator","product","cloneDeep","cloneDeepHelper","Map","val","seen","has","get","slice","set","child","getPrototypeOf","isEnv","env","process","isProduction","isTest","tryFunctionOrLogError","graphQLResultHasError","errors","deepFreeze","o","freeze","getOwnPropertyNames","prop","isFrozen","maybeDeepFreeze","mergeDeep","mergeDeepArray","count","pastCopies","shallowCopyForMerge","mergeHelper","isExtensible","sourceKey","sourceValue","targetValue","genericMessage","framesToPop","InvariantError","invariant","condition","wrapConsoleMethod","method","warn","processStub","Function","atLeastWeTried","_slicedToArray","arr","_i","_s","_e","_arr","_n","_d","err","unsupportedIterableToArray","_excluded","propTypes","fluid","bool","object","Container","Tag","attributes","_objectWithoutPropertiesLoose","containerClass","React","_extends","defaultProps","rowColsPropType","number","noGutters","form","xs","sm","md","lg","xl","widths","Row","colClasses","colWidth","colSize","isXs","stringOrNumberProp","columnProps","size","order","offset","getColumnSizeClass","Col","columnProp","_classNames","colSizeInterfix","colClass","_colClass","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","_unsupportedIterableToArray","minLen","from","BREAK","visit","root","visitor","visitorKeys","QueryDocumentKeys","enterLeaveMap","Kind","getEnterLeaveForKind","stack","inArray","index","edits","path","ancestors","isLeaving","isEdited","editOffset","editKey","editValue","arrayKey","splice","defineProperties","getOwnPropertyDescriptors","prev","_node$kind","_enterLeaveMap$get","_enterLeaveMap$get2","isNode","devAssert","inspect","visitFn","leave","kindVisitor","_createForOfIteratorHelper","allowArrayLike","it","F","normalCompletion","didErr","_e2","OperationTypeNode","Location","startToken","endToken","start","toStringTag","Token","line","column","Name","Document","VariableDefinition","InlineFragment","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","kindValues","Set","maybeNode","maybeKind","formatValue","seenValues","previouslySeenValues","includes","toJSON","isJSONable","jsonValue","Math","min","remaining","items","formatArray","entries","replace","getObjectTag","properties","formatObject","formatObjectValue","String","Observable","asyncGeneratorStep","gen","_next","_throw","info","_asyncToGenerator","fn","self","_arrayLikeToArray","arr2","Boolean","dedentBlockStringLines","lines","_firstNonEmptyLine2","commonIndent","MAX_SAFE_INTEGER","firstNonEmptyLine","lastNonEmptyLine","_firstNonEmptyLine","indent","leadingWhitespace","str","isWhiteSpace","charCodeAt","printBlockString","options","escapedValue","isSingleLine","forceLeadingNewLine","hasTrailingTripleQuotes","endsWith","hasTrailingQuote","hasTrailingSlash","forceTrailingNewline","printAsMultipleLines","minimize","skipLeadingNewLine","code","isDigit","isLetter","isNameStart","isNameContinue","link","isTerminating","request","fromError","errorValue","observer","createOperation","starting","defineProperty","enumerable","query","operationName","getKey","passthrough","forward","of","toLink","handler","ApolloLink","empty","links","reduce","left","right","leftLink","rightLink","first","second","firstLink","nextLink","execute","transformedOperation","extensions","transformOperation","OPERATION_FIELDS","validateOperation","previousComparisons","equal","check","clear","aTag","previouslyCompared","aKeys","bKeys","keyCount","aIterator","isMap","aKey","aValue","bSet","add","NetworkStatus","isNetworkRequestInFlight","networkStatus","LinkObservable","isNonEmptyArray","FetchType","graphQLErrors","networkError","errorMessage","extraInfo","graphQLError","generateErrorMessage","ApolloError","queryManager","shouldSubscribe","onSubscribe","observers","subscriptions","isTornDown","queryId","generateQueryId","opDef","queryName","delete","removeQuery","subscription","unsubscribe","subscribe","currentResult","getCurrentResult","data","lastResult","lastError","loading","storeValue","policy","partial","queryStoreValue","queryStore","fetchPolicy","isNetworkFetchPolicy","errorPolicy","ready","updateLastResult","stale","isDifferentFromLastResult","newResult","lastResultSnapshot","snapshot","getLastResult","getLastError","resetLastResults","resetQueryStoreErrors","refetch","fetchQuery","fetchMore","fetchMoreOptions","combinedOptions","qid","normal","fetchMoreResult","updateQuery","previousResult","stopQuery","subscribeToMore","startGraphQLSubscription","subscriptionData","previous","onError","setOptions","opts","pollInterval","startPolling","stopPolling","setVariables","oldFetchPolicy","fetchResults","tryFetch","mapFn","dataStore","markUpdateQueryResult","broadcastQueries","stopPollingQuery","assertNotCacheFirstOrOnly","startPollingQuery","assumeImmutableResults","subObserver","_subscription","_observer","defaultSubscriptionObserverErrorCallback","setUpQuery","tearDownQuery","addObservableQuery","iterateObserversSafely","observeQuery","transform","getLocalState","addExportedVariables","previousVariables","serverQuery","catch","sub","removeObservableQuery","observersWithMethod","obs","obsQuery","store","getStore","mutationId","initMutation","mutation","markMutationError","markMutationResult","reset","initQuery","previousQuery","cache","client","resolvers","fragmentMatcher","addResolvers","setFragmentMatcher","resolverGroup","setResolvers","getResolvers","runResolvers","remoteResult","onlyRunForcedResolvers","resolveDocument","localResult","getFragmentMatcher","clientQuery","prepareContext","getCacheKey","dataIdFromObject","buildRootValueFromCache","exportedVariables","shouldForceResolvers","forceResolvers","diff","returnPartialData","optimistic","rootValue","mainDefinition","fragmentMap","definitionOperation","defaultOperationType","charAt","toUpperCase","execContext","resolveSelectionSet","resultsToMerge","resolveField","fieldResult","typeCondition","fragmentResult","all","aliasedFieldName","aliasUsed","defaultResult","resultPromise","resolverType","__typename","resolverMap","resolveSubSelectedArray","item","multiplex","complete","queryDeduplication","onBroadcast","ssrMode","clientAwareness","localState","mutationStore","MutationStore","QueryStore","idCounter","queries","fetchQueryRejectFns","transformCache","inFlightLinkObservables","pollingInfoByQueryId","LocalState","getCache","stop","_info","stopQueryNoBroadcast","mutate","optimisticResponse","updateQueries","refetchQueries","awaitRefetchQueries","update","setQuery","getVariables","generateUpdateQueriesInfo","ret","updateQueriesByName","observableQuery","updater","markMutationInit","updateWithProxyFn","storeResult","getObservableFromLink","markMutationComplete","refetchQueryPromises","refetchQuery","queryOptions","fetchType","fetchMoreForQueryId","metadata","needToFetch","isNetworkOnly","shouldFetch","requestId","cancel","updateQueryWatch","lastRequestId","invalidated","invalidate","storePreviousVariables","isPoll","poll","isRefetch","networkResult","fetchRequest","getQuery","markQueryError","markQueryResultClient","hasForcedResolvers","markQueryResult","newData","queryListenerForObserver","invoke","networkStatusChanged","shouldNotifyIfLoading","notifyOnNetworkStatusChange","hasGraphQLErrors","isMissing","errorStatusChanged","diffResult","resultFromStore","transformed","transformDocument","forLink","transformForLink","defaultVars","watchQuery","transformedOptions","ObservableQuery","watchedQuery","stopQueryInStore","stopQueryInStoreNoBroadcast","addQueryListener","listener","watch","callback","clearStore","resetIds","resetStore","reFetchObservableQueries","includeStandby","observableQueryPromises","startQuery","makeObservable","markSubscriptionResult","observable","getCurrentQueryResult","getQueryWithPreviousResult","queryIdOrObservable","foundObserveableQuery","deduplication","forceFetch","cleanup","activeNextCount","completed","asyncMap","errorsFromStore","fqrfId","newInfo","newContext","checkInFlight","interval","initialCache","ignoreErrors","writeWithErrors","write","dataId","recordOptimisticTransaction","orig","nextQueryResult","currentQueryResult","mutationResult","queryVariables","performTransaction","removeOptimistic","defaultOptions","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","typeDefs","DataStore","disableNetworkFetches","bind","__APOLLO_CLIENT__","QueryManager","clientAwarenessName","clientAwarenessVersion","devToolsHookCb","action","state","mutations","dataWithOptimisticResults","extract","readQuery","readFragment","writeQuery","writeFragment","writeData","__actionHookForDevTools","cb","__requestRaw","payload","initQueryManager","onResetStore","onClearStore","restore","serializedState","setLocalStateFragmentMatcher","_taggedTemplateLiteral","strings","raw","Hook","livelinessChecking","getLivelinessChecking","__values","m","__read","ar","__spread","getType","assertIsStateTreeNode","getStateTreeNode","applyPatch","patch","assertArg","applyPatches","asArray","getSnapshot","applyPostProcess","getRoot","storedValue","BaseNode","subpath","environment","configurable","writable","NodeLifeCycle","INITIALIZING","baseSetParent","_subpath","_subpathUponDeath","_pathUponDeath","getValue","_state","wasAlive","isAlive","aliveAtom","reportChanged","_hookSubscribers","hook","hookHandler","EventHandlers","register","_parent","_escapedSubpath","pathAtom","getEscapedPath","reportObserved","createAtom","escapeJsonPath","DEAD","DETACHING","whenFinalized","CREATED","FINALIZED","fireHook","afterAttach","clearAll","beforeDestroy","ScalarNode","_super","simpleType","initialSnapshot","_this","createNewInstance","finalizeCreation","fail$1","newParent","parentChanged","subpathChanged","pathUponDeath","aboutToDie","finalizeDeath","baseFinalizeCreation","baseAboutToDie","baseFinalizeDeath","fireInternalHook","die","_a","TypeFlags","nextNodeId","snapshotReactionOptions","ObjectNode","complexType","initialValue","_snapshotComputed","computed","unbox","_initialSnapshot","identifierAttribute","identifierCache","IdentifierCache","_childNodes","initializeChildNodes","identifier","unnormalizedIdentifier","childNode","normalizeIdentifier","addNodeToCache","patches","createObservableInstanceIfNeeded","_applyPatches","_applySnapshot","_observableInstanceState","createObservableInstance","e_1","parentChain","unshift","parentChain_1","parentChain_1_1","e_1_1","return","preboot","_isRunningAction","finalizeNewInstance","trackAndCompute","isRoot","_addSnapshotReaction","EMPTY_OBJECT","afterCreate","beforeDetach","previousState","newEnv","newIdCache","splitCache","mergeCache","_allowStateChangesInsideComputed","_getActualSnapshot","_getCachedInitialSnapshot","_snapshotUponDeath","_cachedInitialSnapshotCreated","childNodes","_cachedInitialSnapshot","processInitialSnapshot","isRunningAction","_getAssertAliveError","warnError","escapedPath","actionContext","getCurrentActionContext","parentActionEvent","actionFullPath","assertAlive","_autoUnbox","getChildNode","getChildren","convertChildNodesToArray","propertyName","getChildType","isProtectionEnabled","isProtected","subpathUponDeath","e_2","_b","_c","e_2_1","afterCreationFinalization","clearParent","createActionInvoker","parts","splitJsonPath","resolveNodeByPathParts","applyPatchLocally","applySnapshot","addHiddenFinalProp","_internalEventsEmit","_internalEventsClear","notifyDied","_internalEventsClearAll","onChange","_internalEventsRegister","basePatch","_internalEventsHasSubscribers","localizedPatch","extend","substr","stripPatch","invertPatch","splitPatch","reversePatch","emitPatch","disposer","_internalEventsHas","hasDisposer","_internalEventsUnregister","middleware","middlewares","includeHooks","removeMiddleware","assertWritable","_hasSnapshotReaction","snapshotDisposer","reaction","emitSnapshot","addDisposer","event","_internalEvents","hasSubscribers","eventHandler","atTheBeginning","unregister","detach","cannotDetermineSubtype","$type","BaseType","typecheckInternal","instantiate","getStateTreeNodeSafe","valueType","isAssignableFrom","typeCheckSuccess","typeCheckFailure","isValidSnapshot","thing","validate","ComplexType","getDefaultSnapshot","newValue","isDetaching","isStateTreeNode","isMutable","isMatchingSnapshotId","tryToReconcileNode","setParent","newNode","SimpleType","res","isType","assertIsType","argNumber","RunningAction","hooks","onStart","running","onFinish","flowsPending","currentActionContext","nextActionId","getNextActionId","runWithActionContext","baseIsRunningAction","previousContext","baseCall","originalFn","CollectedMiddlewares","runNextMiddleware","getNextMiddleware","call2","abort","runMiddleWares","getParentActionContext","parentContext","parentActionContext","argsToArray","tree","rootId","parentId","allParentIds","parentEvent","_isMSTAction","$mst_middleware","arrayIndex","inArrayIndex","prettyPrintValue","safeStringify","toErrorString","fullPath","pathPrefix","currentTypename","isPrimitive","isSnapshotCompatible","is","flags","Integer","Date","isPrimitiveType","describe","getContextForPath","EMPTY_ARRAY","flattenTypeErrors","ENABLE_TYPE_CHECK","valueInString","substring","validationErrorsToString","typecheck","identifierCacheId","lcm","lastCacheModificationPerId","modificationId","cacheId","lastCacheUpdate","mobxShallow","updateLastCacheModificationPerId","nodes","basePath","modified","candidate","matches","createObjectNode","existingNode","createScalarNode","$treenode","base","pathParts","failIfResolveFails","part","joinJsonPath","plainObjectString","_getGlobalState","useProxies","deep","proxy","identity","isInteger","isFinite","floor","isObservableArray","isPlainObject","proto","RegExp","includeDate","descriptor","isObservableObject","defineProperty$1","EventHandler","handlers","eventHandlers","stringStartsWith","beginning","deprecated","msg","typeName","assertIsFunction","assertIsString","canBeEmpty","setImmediateWithFallback","queueMicrotask","setImmediate","flow","spawner","runId","contextBase","wrap","init","onFulfilled","onRejected","throw","createFlowSpawner","oldValue","unescapeJsonPath","getPathStr","shift","ids","$preProcessorFailed","SnapshotProcessor","_subtype","_processors","sn","preProcessor","preProcessSnapshot","postProcessor","nodeType","snapshotProcessorType","methods","methods_1","methods_1_1","proxyNodeTypeMethods","oldGetSnapshot","postProcessSnapshot","getReconciliationType","processedInitialValue","_fixNode","reconcile","processedSn","preProcessSnapshotSafe","MapIdentifierMode","needsIdentifierError","tryCollectModelTypes","modelTypes","subtypes","getSubTypes","subtypesArray","subtypesArray_1","subtypesArray_1_1","ModelType","MSTMap","initialData","ref","enhancer","mapNode","mapType","identifierMode","YES","mapIdentifierAttribute","isValidIdentifier","put","ObservableMap","MapType","_subType","hookInitializers","UNKNOWN","_determineIdentifierMode","NO","objNode","subType","instance","_interceptReads","initializer","actionInvoker","intercept","willChange","observe","didChange","change","processIdentifier","expected","processed","oldSnapshot","currentKeys","ArrayType","_getAdministration","dehancer","updatedNodes","reconcileArrayChildren","index_1","removedCount","added","addedNodes","removed","addedCount","childType","oldNodes","newValues","newPaths","nothingChanged","hasNewNode","oldNode","newPath","areSame","valueAsNode","oldMatch","getNewNode","oldNodeType","PRE_PROCESS_SNAPSHOT","POST_PROCESS_SNAPSHOT","objectTypeToString","defaultObjectOptions","initializers","toPropertiesObject","declaredProps","getOwnPropertyDescriptor","optional","boolean","DatePrimitive","getPrimitiveFactoryFromValue","cloneAndEnhance","currentPreprocessor","currentPostprocessor","propertyNames","_getIdentifierAttribute","forAllProps","propType","Identifier","instantiateActions","actions","action2","baseAction","specializedAction_1","boundAction","instantiateVolatileState","views","rest","instantiateViews","applySnapshotPreProcessor","chg","oldChildValue","getAtom","applySnapshotPostProcessor","preProcessedSnapshot","processor","isModelType","CoreType","checker","integer","nullType","Null","undefinedType","Undefined","_DatePrimitive","getTime","Literal","literal","Refinement","_predicate","_message","subtypeErrors","Union","_types","eager","dispatcher","_dispatcher","_eager","factory","determineType","reconcileCurrentType","find","allErrors","applicableTypes","union","optionsOrType","otherTypes","types","OptionalValue","_defaultValue","optionalValues","Optional","defaultInstanceOrSnapshot","getDefaultInstanceOrSnapshot","defaultValueOrFunction","checkOptionalPreconditions","undefinedAsOptionalValues","optionalUndefinedType","optionalNullType","maybe","Late","_definition","mustSucceed","ReferenceError","getSubType","subtype","Frozen","isSerializable","untypedFrozenInstance","StoredReference","targetType","targetNode","normalizedId","lastCacheModification","getLastCacheModificationPerId","resolvedReference","InvalidReferenceError","updateResolvedReference","BaseReferenceType","onInvalidated","Reference","cause","storedRefNode","referenceId","refTargetNode","storedRefParentNode","storedRefParentValue","invalidTarget","invalidId","replaceRef","newRef","removeRef","refTargetValue","refTargetNodeHook","getInvalidationCause","fireInvalidated","refTargetDetachHookDisposer","registerHook","refTargetDestroyHookDisposer","customGetSet","onRefTargetDestroyedHookDisposer","startWatching","sync","addTargetNodeWatcher","IdentifierReferenceType","resolvedValue","storedRef","watchTargetNodeForInvalidations","compareByValue","CustomReferenceType","newIdentifier","reference","getSetOptions","BaseIdentifierType","validType","IdentifierType","IdentifierNumberType","identifierNumber","CustomType","Custom","isTargetType","typeError","getValidationMessage","toSnapshot","fromSnapshot","isSnapshot","valueToStore","enumeration","realOptions","option","model","compose","hasTypename","cur","named","custom","safeReference","refType","ev","acceptsUndefined","maybeNull","refinement","predicate","frozen","late","nameOrType","maybeType","null","snapshotProcessor","processors","forceVisible","forceCheck","lazyload","_createClass","Constructor","protoProps","staticProps","_react","require","_react2","_interopRequireDefault","_propTypes2","_event","_scrollParent2","_debounce2","_throttle2","__esModule","_classCallCheck","_possibleConstructorReturn","_inherits","subClass","superClass","defaultBoundingClientRect","LISTEN_FLAG","pending","passiveEventSupported","addEventListener","passiveEvent","capture","passive","checkVisible","component","HTMLElement","visible","ownerDocument","documentElement","parentTop","parentLeft","parentHeight","parentWidth","_parent$getBoundingCl","getBoundingClientRect","windowInnerHeight","innerHeight","clientHeight","windowInnerWidth","intersectionTop","max","intersectionLeft","intersectionHeight","intersectionWidth","_node$getBoundingClie","offsetTop","offsetLeft","offsets","checkOverflowVisible","offsetHeight","getClientRects","elementHeight","_node$getBoundingClie2","checkNormalVisible","forceUpdate","unmountIfInvisible","purgePending","lazyLoadHandler","delayType","finalLazyLoadHandler","LazyLoad","_Component","setRef","scrollport","scrollContainer","querySelector","needResetFinalLazyLoadHandler","debounce","throttle","getAttribute","listenerCount","setAttribute","_props","scroll","resize","removeEventListener","removeAttribute","element","_props2","children","placeholder","classNamePrefix","Component","getDisplayName","WrappedComponent","displayName","_Component2","LazyLoadDecorated","_this2","Parent","Class","isNativeReflectConstruct","Reflect","construct","_cache","Wrapper","isObjectLike","LineRegExp","getLocation","lastLineStart","matchAll","match","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","padStart","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","locationLine","subLineIndex","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","padLen","prefix","toNormalizedArgs","firstArg","positions","originalError","GraphQLError","_this$nodes","_nodeLocations$","_ref","rawArgs","undefinedIfEmpty","nodeLocations","loc","locations","pos","originalExtensions","captureStackTrace","output","formattedError","syntaxError","description","DirectiveLocation","TokenKind","Lexer","startOfFileToken","SOF","lastToken","token","lineStart","lookahead","EOF","nextToken","readNextToken","COMMENT","isUnicodeScalarValue","isSupplementaryCodePoint","isLeadingSurrogate","isTrailingSurrogate","printCodePointAt","lexer","codePointAt","char","fromCodePoint","createToken","col","bodyLength","readComment","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","readBlockString","readString","readNumber","readName","firstCode","isFloat","readDigits","FLOAT","INT","chunkStart","STRING","escape","readEscapedUnicodeVariableWidth","readEscapedUnicodeFixedWidth","readEscapedCharacter","point","readHexDigit","read16BitHexCode","trailingCode","currentLine","blockLines","BLOCK_STRING","NAME","instanceOf","Source","Parser","sourceObj","isSource","_lexer","_options","expectToken","DOCUMENT","many","parseDefinition","peek","parseOperationDefinition","hasDescription","peekDescription","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseFragmentDefinition","parseTypeSystemExtension","unexpected","OPERATION_DEFINITION","QUERY","parseSelectionSet","parseOperationType","parseName","parseVariableDefinitions","parseDirectives","operationToken","MUTATION","SUBSCRIPTION","optionalMany","parseVariableDefinition","VARIABLE_DEFINITION","parseVariable","parseTypeReference","expectOptionalToken","parseConstValueLiteral","parseConstDirectives","VARIABLE","SELECTION_SET","parseSelection","parseFragment","parseField","nameOrAlias","FIELD","parseArguments","isConst","parseConstArgument","parseArgument","ARGUMENT","parseValueLiteral","hasTypeCondition","expectOptionalKeyword","FRAGMENT_SPREAD","parseFragmentName","INLINE_FRAGMENT","parseNamedType","_this$_options","expectKeyword","allowLegacyFragmentVariables","FRAGMENT_DEFINITION","parseList","parseObject","advance","parseStringLiteral","BOOLEAN","NULL","ENUM","varName","block","LIST","OBJECT","parseObjectField","OBJECT_FIELD","parseDirective","DIRECTIVE","innerType","LIST_TYPE","NON_NULL_TYPE","NAMED_TYPE","parseDescription","operationTypes","parseOperationTypeDefinition","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","interfaces","parseImplementsInterfaces","parseFieldsDefinition","OBJECT_TYPE_DEFINITION","delimitedMany","parseFieldDefinition","parseArgumentDefs","FIELD_DEFINITION","parseInputValueDef","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","parseUnionMemberTypes","UNION_TYPE_DEFINITION","parseEnumValuesDefinition","ENUM_TYPE_DEFINITION","parseEnumValueDefinition","parseEnumValueName","ENUM_VALUE_DEFINITION","getTokenDesc","parseInputFieldsDefinition","INPUT_OBJECT_TYPE_DEFINITION","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","repeatable","parseDirectiveLocations","DIRECTIVE_DEFINITION","parseDirectiveLocation","_this$_options2","noLocation","getTokenKindDesc","atToken","openKind","parseFn","closeKind","delimiterKind","isPunctuatorTokenKind","parseDocument","escapedRegExp","escapedReplacer","escapeSequences","print","ast","printDocASTReducer","varDefs","argsLine","hasMultilineItems","maybeArray","_maybeArray$filter$jo","separator","maybeString","_maybeArray$some","linkOptions","uri","fetch","includeExtensions","useGETForQueries","fetcher","linkConfig","http","requestOptions","fetchOptions","credentials","headers","chosenURI","selectURI","getContext","clientAwarenessHeaders","controller","contextHeaders","contextConfig","signal","_controller","queryParams","addQueryParam","encodeURIComponent","serializedVariables","parseError","serializedExtensions","preFragment","fragmentStart","queryParamsPrefix","newURI","response","setContext","queryFromPojo","selectionSetFromObj","Cache","justTypenameQuery","currentContext","MISSING_VALUE","globalKey","host","Slot","now","random","hasValue","slots","withValue","saved","noContext","defaultDispose","dispose","newest","oldest","entry","getEntry","older","newer","clean","parentEntrySlot","reusableEmptyArray","emptySetPool","assert","optionalMessage","valueGet","parents","childValues","dirtyChildren","dirty","recomputing","Entry","recompute","mightBeDirty","reportDirtyChild","reportCleanChild","rememberParent","maybeReportOrphan","originalChildren","forgetChildren","recomputeNewValue","maybeUnsubscribe","setDirty","maybeSubscribe","reportClean","setClean","reallyRecompute","reportDirty","forgetChild","childValue","valueIs","removeDirtyChild","dc","reportOrphan","_value","weakness","lookup","lookupArray","getChildTrie","isObjRef","weak","strong","KeyTrie","keyTrie","defaultMakeCacheKey","caches","originalFunction","pow","disposable","makeCacheKey","haveWarned","shouldWarn","answer","ensureReady","canBypassInit","idValue","isRootQuery","introspectionQueryResultData","possibleTypesMap","parseIntrospectionResult","isReady","implementingTypes","introspectionResultData","typeMap","__schema","possibleTypes","implementingType","depend","toObject","defaultNormalizedCacheFactory","seed","cacheKeyRoot","freezeResults","executeStoreQuery","executeSelectionSet","executeSubSelectedArray","contextValue","variableValues","readQueryFromStore","diffQueryAgainstStore","fragmentMatcherFunction","queryDefinition","cacheRedirects","execResult","hasMissingFields","missing","tolerable","finalResult","objectsToMerge","handleMissing","executeField","fragmentExecResult","readStoreResult","resultKey","storeKeyName","fieldValue","resolver","storeObj","json","readStoreResolver","combineExecResults","assertSelectionSetForIdValue","execResults","childResult","defaultFragmentMatcher","writeQueryToStore","writeResultToStore","operationDefinition","writeSelectionSetToStore","processedData","enhancedError","enhanceErrorWithDocument","resultFieldKey","writeFieldToStore","isDefered","isClient","fakeContext","ObjectCache","storeObject","storeFieldName","generatedId","processArrayValue","valueDataId","isGeneratedId","semanticId","isDataProcessed","escapedId","hadTypename","typenameChanged","mergeWithGenerated","itemDataId","generatedKey","realKey","real","madeChanges","realValue","newRealValue","defaultConfig","HeuristicFragmentMatcher","_id","addTypename","resultCaching","optimisticId","transaction","watches","typenameDocumentCache","silenceBroadcast","customResolvers","cacheResolvers","optimisticData","storeWriter","storeReader","maybeBroadcastWatch","read","broadcastWatches","evict","idToRemove","toReapply","layer","_toConsumableArray","arrayLikeToArray","iter","runtime","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","isGeneratorFunction","genFun","ctor","mark","awrap","async","reverse","skipTempReset","rootRecord","rval","exception","handle","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","_defineProperties","hasSymbols","hasSymbol","getSymbol","SymbolIterator","SymbolObservable","SymbolSpecies","getMethod","getSpecies","isObservable","hostReportError","log","enqueue","cleanupSubscription","_cleanup","closeSubscription","_queue","notifySubscription","onNotify","flushSubscription","Subscription","subscriber","subscriptionObserver","SubscriptionObserver","_subscriber","_this3","_this4","C","hasSeed","acc","_this5","_len","startNext","_this6","outer","completeIfDone","closed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_item","_len2","_key2","cmp","cycles","aobj","bobj","out","seenIndex","global","ponyfill","originalModule","webpackPolyfill","l","symbolObservablePonyfill","scope","Timeout","clearFn","_clearFn","setInterval","clearInterval","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","onGlobalMessage","attachEvent","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","html","script","onreadystatechange","installReadyStateChangeImplementation","task","mockGlobal","getGlobal","getDescriptor","objectPrototype","hasProxy","Proxy","assertProxies","invoked","isStringish","protoConstructor","isGenerator","addHiddenProp","createInstanceofPredicate","theClass","isES6Map","isES6Set","hasGetOwnPropertySymbols","ownKeys","toPrimitive","hasProp","storedAnnotationsSymbol","createDecoratorAnnotation","annotation","storeAnnotation","property","isOverride","$mobx","Atom","name_","isPendingUnobservation_","isBeingObserved_","observers_","diffValue_","lastAccessedBy_","lowestObserverState_","IDerivationState_","NOT_TRACKING_","onBOL","onBUOL","onBO","onBUO","startBatch","propagateChanged","endBatch","isAtom","onBecomeObservedHandler","onBecomeUnobservedHandler","arg3","atom","interceptHook","ON_BECOME_OBSERVED","onBecomeObserved","onBecomeUnobserved","comparer","structural","deepEqual","shallow","deepEnhancer","isAction","isFlow","autoAction","referenceEnhancer","OVERRIDE","createActionAnnotation","annotationType_","options_","make_","extend_","adm","actionDescriptor","createActionDescriptor","safeDescriptors","globalState","assertActionDescriptor","createAction","createFlowAnnotation","flowDescriptor","createFlowDescriptor","assertFlowDescriptor","createComputedAnnotation","assertComputedDescriptor","createObservableAnnotation","assertObservableDescriptor","autoAnnotation","createAutoAnnotation","flowAnnotation","actionAnnotation","observableAnnotation","defaultCreateObservableOptions","defaultDecorator","asCreateObservableOptions","observableRefAnnotation","observableShallowAnnotation","isObservableMap","isObservableSet","observableStructAnnotation","observableDecoratorAnnotation","getEnhancerFromOptions","getEnhancerFromAnnotation","createObservable","arg2","box","ObservableValue","ObservableSet","extendObservable","asObservableObject","asDynamicObservableObject","struct","COMPUTED","computedAnnotation","computedStructAnnotation","equals","arg1","ComputedValue","currentActionId","isFunctionNameConfigurable","tmpNameDescriptor","actionName","executeAction","canRunAsDerivation","runInfo","notifySpy_","startTime_","prevDerivation_","runAsAction","prevAllowStateChanges_","untrackedStart","allowStateChangesStart","prevAllowStateReads_","allowStateReadsStart","runAsAction_","actionId_","parentActionId_","_startAction","allowStateChangesEnd","allowStateReadsEnd","untrackedEnd","_endAction","allowStateChanges","notifySpy","hasUnreportedChange_","interceptors_","changeListeners_","value_","dehanceValue","prepareNewValue_","checkIfStateModificationsAreAllowed","hasInterceptors","interceptChange","setNewValue_","hasListeners","notifyListeners","intercept_","registerInterceptor","observe_","observableKind","debugObjectName","registerListener","valueOf","isObservableValue","dependenciesState_","observing_","newObserving_","runId_","UP_TO_DATE_","unboundDepsCount_","CaughtException","triggeredBy_","isComputing_","isRunningSetter_","derivation","setter_","isTracing_","TraceMode","NONE","scope_","equals_","requiresReaction_","keepAlive_","onBecomeStale_","propagateMaybeChanged","shouldCompute","prevTrackingContext","propagateChangeConfirmed","computeValue_","isCaughtException","wasSuspended","changed","trackDerivedFunction","suspend_","clearObserving","firstTime","prevValue","autorun","prevU","warnAboutUntrackedRead_","isComputedValue","prevAllowStateReads","prevUntracked","changeDependenciesStateTo0","prevTracking","prevObserving","observing","lowestNewObservingDerivationState","i0","dep","removeObserver","addObserver","bindDependencies","untracked","allowStateReads","MobXGlobals","canMergeGlobalState","isolateCalled","getGlobalState","queueForUnobservation","runReactions","list","Reaction","onInvalidate_","errorHandler_","requiresObservable_","isDisposed_","isScheduled_","isTrackPending_","isRunning_","schedule_","isScheduled","runReaction_","track","prevReaction","reportExceptionInDerivation_","getDisposer_","trace","enterBreakPoint","getAtomFromArgs","reactionScheduler","runReactionsHelper","allReactions","iterations","remainingReactions","isReaction","ACTION","AUTOACTION","DEFAULT_ACTION_NAME","actionBoundAnnotation","bound","autoActionAnnotation","autoActionBoundAnnotation","createActionFactory","runInAction","view","scheduler","createSchedulerFromOptions","expression","effect","errorHandler","baseFn","effectAction","runSync","reactionRunner","nextValue","listenersKey","hookListeners","annotations","descriptors","generatorId","FlowCancellationError","flowBoundAnnotation","ctx","pendingPromise","promise","stepId","rejector","cancelPromise","yieldedPromise","interceptReads","propOrHandler","getAdministration","interceptProperty","interceptInterceptable","_isComputed","isComputedProp","_isObservable","isObservableProp","apiDefineProperty","propOrCb","cbOrFire","fireImmediately","observeObservableProperty","observeObservable","getAdm","objectProxyTraps","deleteProperty","preventExtensions","interceptable","interceptors","idx","listenable","collectStoredAnnotations","SPLICE","UPDATE","arrayTraps","arrayExtensions","ObservableArrayAdministration","owned_","legacyMode_","atom_","values_","enhancer_","proxy_","lastKnownLength_","newV","oldV","dehanceValue_","dehanceValues_","getArrayLength_","setArrayLength_","newLength","currentLength","newItems","updateArrayLength_","oldLength","delta","reserveArrayBuffer","spliceWithArray_","deleteCount","lengthDelta","spliceItemsIntoValues_","oldItems","notifyArrayChildUpdate_","notify","notifyArraySplice_","get_","set_","createObservableArray","initialValues","owned","spliceWithArray","copy","addArrayExtension","funcName","funcFactory","simpleFunc","dehancedValues","mapLikeFunc","reduceLikeFunc","accumulator","currentValue","isObservableArrayAdministration","ObservableMapMarker","ADD","DELETE","data_","hasMap_","keysAtom_","has_","newEntry","hasKey","updateValue_","addValue_","makeIterable","merge","other","symbols","getPlainObjectKeys","replacementMap","dataStructure","convertToMap","orderedData","keysReportChangedCalled","keyExisted","iter1","iter2","next1","next2","ObservableSetMarker","callbackFn","nextIndex","observableValues","descriptorCache","REMOVE","ObservableObjectAdministration","defaultAnnotation_","target_","isPlainObject_","appliedAnnotations_","pendingKeys_","getObservablePropValue_","setObservablePropValue_","proxyTrap","assertAnnotable","outcome","recordAnnotationApplied","defineProperty_","deleteOutcome","delete_","defineObservableProperty_","cachedDescriptor","getCachedObservablePropDescriptor","defineComputedProperty_","notifyPropertyAddition_","ownKeys_","keys_","getAnnotationFromOptions","isObservableObjectAdministration","OBSERVABLE_ARRAY_BUFFER_SIZE","StubArray","inherit","LegacyObservableArray","arrays","createArrayBufferItem","createArrayEntryDescriptor","createLegacyArray","getDebugName","depth","eq","unwrap","areArrays","aCtor","bCtor","bStack","aStack","getSelf","__MOBX_DEVTOOLS_GLOBAL_HOOK__","spy","extras","el","eventName","detachEvent","excludeStaticParent","overflowRegex","parentNode","overflowX","overflowY","wait","immediate","timestamp","later","last","callNow","threshhold","deferTimer","color","Spinner","role","inverse","outline","innerRef","Card","CardBody"],"mappings":"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","file":"static/js/0.95399aa8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'; // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/js/src/modal.js#L436-L443\n\nexport function getScrollbarWidth() {\n  var scrollDiv = document.createElement('div'); // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n}\nexport function setScrollbarWidth(padding) {\n  document.body.style.paddingRight = padding > 0 ? padding + \"px\" : null;\n}\nexport function isBodyOverflowing() {\n  return document.body.clientWidth < window.innerWidth;\n}\nexport function getOriginalBodyPadding() {\n  var style = window.getComputedStyle(document.body, null);\n  return parseInt(style && style.getPropertyValue('padding-right') || 0, 10);\n}\nexport function conditionallyUpdateScrollbar() {\n  var scrollbarWidth = getScrollbarWidth(); // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n\n  var fixedContent = document.querySelectorAll('.fixed-top, .fixed-bottom, .is-fixed, .sticky-top')[0];\n  var bodyPadding = fixedContent ? parseInt(fixedContent.style.paddingRight || 0, 10) : 0;\n\n  if (isBodyOverflowing()) {\n    setScrollbarWidth(bodyPadding + scrollbarWidth);\n  }\n}\nvar globalCssModule;\nexport function setGlobalCssModule(cssModule) {\n  globalCssModule = cssModule;\n}\nexport function mapToCssModules(className, cssModule) {\n  if (className === void 0) {\n    className = '';\n  }\n\n  if (cssModule === void 0) {\n    cssModule = globalCssModule;\n  }\n\n  if (!cssModule) return className;\n  return className.split(' ').map(function (c) {\n    return cssModule[c] || c;\n  }).join(' ');\n}\n/**\n * Returns a new object with the key/value pairs from `obj` that are not in the array `omitKeys`.\n */\n\nexport function omit(obj, omitKeys) {\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    if (omitKeys.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\n/**\n * Returns a filtered copy of an object with only the specified keys.\n */\n\nexport function pick(obj, keys) {\n  var pickKeys = Array.isArray(keys) ? keys : [keys];\n  var length = pickKeys.length;\n  var key;\n  var result = {};\n\n  while (length > 0) {\n    length -= 1;\n    key = pickKeys[length];\n    result[key] = obj[key];\n  }\n\n  return result;\n}\nvar warned = {};\nexport function warnOnce(message) {\n  if (!warned[message]) {\n    /* istanbul ignore else */\n    if (typeof console !== 'undefined') {\n      console.error(message); // eslint-disable-line no-console\n    }\n\n    warned[message] = true;\n  }\n}\nexport function deprecated(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    if (props[propName] !== null && typeof props[propName] !== 'undefined') {\n      warnOnce(\"\\\"\" + propName + \"\\\" property of \\\"\" + componentName + \"\\\" has been deprecated.\\n\" + explanation);\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n} // Shim Element if needed (e.g. in Node environment)\n\nvar Element = typeof window === 'object' && window.Element || function () {};\n\nexport function DOMElement(props, propName, componentName) {\n  if (!(props[propName] instanceof Element)) {\n    return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`. Expected prop to be an instance of Element. Validation failed.');\n  }\n}\nexport var targetPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, DOMElement, PropTypes.shape({\n  current: PropTypes.any\n})]);\nexport var tagPropType = PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n  $$typeof: PropTypes.symbol,\n  render: PropTypes.func\n}), PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n  $$typeof: PropTypes.symbol,\n  render: PropTypes.func\n})]))]);\n/* eslint key-spacing: [\"error\", { afterColon: true, align: \"value\" }] */\n// These are all setup to match what is in the bootstrap _variables.scss\n// https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss\n\nexport var TransitionTimeouts = {\n  Fade: 150,\n  // $transition-fade\n  Collapse: 350,\n  // $transition-collapse\n  Modal: 300,\n  // $modal-transition\n  Carousel: 600 // $carousel-transition\n\n}; // Duplicated Transition.propType keys to ensure that Reactstrap builds\n// for distribution properly exclude these keys for nested child HTML attributes\n// since `react-transition-group` removes propTypes in production builds.\n\nexport var TransitionPropTypeKeys = ['in', 'mountOnEnter', 'unmountOnExit', 'appear', 'enter', 'exit', 'timeout', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'];\nexport var TransitionStatuses = {\n  ENTERING: 'entering',\n  ENTERED: 'entered',\n  EXITING: 'exiting',\n  EXITED: 'exited'\n};\nexport var keyCodes = {\n  esc: 27,\n  space: 32,\n  enter: 13,\n  tab: 9,\n  up: 38,\n  down: 40,\n  home: 36,\n  end: 35,\n  n: 78,\n  p: 80\n};\nexport var PopperPlacements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\nexport var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexport function isReactRefObj(target) {\n  if (target && typeof target === 'object') {\n    return 'current' in target;\n  }\n\n  return false;\n}\n\nfunction getTag(value) {\n  if (value == null) {\n    return value === undefined ? '[object Undefined]' : '[object Null]';\n  }\n\n  return Object.prototype.toString.call(value);\n}\n\nexport function toNumber(value) {\n  var type = typeof value;\n  var NAN = 0 / 0;\n\n  if (type === 'number') {\n    return value;\n  }\n\n  if (type === 'symbol' || type === 'object' && getTag(value) === '[object Symbol]') {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf === 'function' ? value.valueOf() : value;\n    value = isObject(other) ? \"\" + other : other;\n  }\n\n  if (type !== 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(/^\\s+|\\s+$/g, '');\n  var isBinary = /^0b[01]+$/i.test(value);\n  return isBinary || /^0o[0-7]+$/i.test(value) ? parseInt(value.slice(2), isBinary ? 2 : 8) : /^[-+]0x[0-9a-f]+$/i.test(value) ? NAN : +value;\n}\nexport function isObject(value) {\n  var type = typeof value;\n  return value != null && (type === 'object' || type === 'function');\n}\nexport function isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  var tag = getTag(value);\n  return tag === '[object Function]' || tag === '[object AsyncFunction]' || tag === '[object GeneratorFunction]' || tag === '[object Proxy]';\n}\nexport function findDOMElements(target) {\n  if (isReactRefObj(target)) {\n    return target.current;\n  }\n\n  if (isFunction(target)) {\n    return target();\n  }\n\n  if (typeof target === 'string' && canUseDOM) {\n    var selection = document.querySelectorAll(target);\n\n    if (!selection.length) {\n      selection = document.querySelectorAll(\"#\" + target);\n    }\n\n    if (!selection.length) {\n      throw new Error(\"The target '\" + target + \"' could not be identified in the dom, tip: check spelling\");\n    }\n\n    return selection;\n  }\n\n  return target;\n}\nexport function isArrayOrNodeList(els) {\n  if (els === null) {\n    return false;\n  }\n\n  return Array.isArray(els) || canUseDOM && typeof els.length === 'number';\n}\nexport function getTarget(target, allElements) {\n  var els = findDOMElements(target);\n\n  if (allElements) {\n    if (isArrayOrNodeList(els)) {\n      return els;\n    }\n\n    if (els === null) {\n      return [];\n    }\n\n    return [els];\n  } else {\n    if (isArrayOrNodeList(els)) {\n      return els[0];\n    }\n\n    return els;\n  }\n}\nexport var defaultToggleEvents = ['touchstart', 'click'];\nexport function addMultipleEventListeners(_els, handler, _events, useCapture) {\n  var els = _els;\n\n  if (!isArrayOrNodeList(els)) {\n    els = [els];\n  }\n\n  var events = _events;\n\n  if (typeof events === 'string') {\n    events = events.split(/\\s+/);\n  }\n\n  if (!isArrayOrNodeList(els) || typeof handler !== 'function' || !Array.isArray(events)) {\n    throw new Error(\"\\n      The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\\n      The second must be a function.\\n      The third is a string or an array of strings that represents DOM events\\n    \");\n  }\n\n  Array.prototype.forEach.call(events, function (event) {\n    Array.prototype.forEach.call(els, function (el) {\n      el.addEventListener(event, handler, useCapture);\n    });\n  });\n  return function removeEvents() {\n    Array.prototype.forEach.call(events, function (event) {\n      Array.prototype.forEach.call(els, function (el) {\n        el.removeEventListener(event, handler, useCapture);\n      });\n    });\n  };\n}\nexport var focusableElements = ['a[href]', 'area[href]', 'input:not([disabled]):not([type=hidden])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'object', 'embed', '[tabindex]:not(.modal)', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])'];","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {\n  DirectiveNode,\n  FieldNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  ObjectValueNode,\n  ListValueNode,\n  EnumValueNode,\n  NullValueNode,\n  VariableNode,\n  InlineFragmentNode,\n  ValueNode,\n  SelectionNode,\n  NameNode,\n} from 'graphql';\n\nimport stringify from 'fast-json-stable-stringify';\nimport { InvariantError } from 'ts-invariant';\n\nexport interface IdValue {\n  type: 'id';\n  id: string;\n  generated: boolean;\n  typename: string | undefined;\n}\n\nexport interface JsonValue {\n  type: 'json';\n  json: any;\n}\n\nexport type ListValue = Array<null | IdValue>;\n\nexport type StoreValue =\n  | number\n  | string\n  | string[]\n  | IdValue\n  | ListValue\n  | JsonValue\n  | null\n  | undefined\n  | void\n  | Object;\n\nexport type ScalarValue = StringValueNode | BooleanValueNode | EnumValueNode;\n\nexport function isScalarValue(value: ValueNode): value is ScalarValue {\n  return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\n\nexport type NumberValue = IntValueNode | FloatValueNode;\n\nexport function isNumberValue(value: ValueNode): value is NumberValue {\n  return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\n\nfunction isStringValue(value: ValueNode): value is StringValueNode {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value: ValueNode): value is BooleanValueNode {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value: ValueNode): value is IntValueNode {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value: ValueNode): value is FloatValueNode {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value: ValueNode): value is VariableNode {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value: ValueNode): value is ObjectValueNode {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value: ValueNode): value is ListValueNode {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value: ValueNode): value is EnumValueNode {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value: ValueNode): value is NullValueNode {\n  return value.kind === 'NullValue';\n}\n\nexport function valueToObjectRepresentation(\n  argObj: any,\n  name: NameNode,\n  value: ValueNode,\n  variables?: Object,\n) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    const nestedArgObj = {};\n    value.fields.map(obj =>\n      valueToObjectRepresentation(nestedArgObj, obj.name, obj.value, variables),\n    );\n    argObj[name.value] = nestedArgObj;\n  } else if (isVariable(value)) {\n    const variableValue = (variables || ({} as any))[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(listValue => {\n      const nestedArgArrayObj = {};\n      valueToObjectRepresentation(\n        nestedArgArrayObj,\n        name,\n        listValue,\n        variables,\n      );\n      return (nestedArgArrayObj as any)[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = (value as EnumValueNode).value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw new InvariantError(\n      `The inline argument \"${name.value}\" of kind \"${(value as any).kind}\"` +\n        'is not supported. Use variables instead of inline arguments to ' +\n        'overcome this limitation.',\n    );\n  }\n}\n\nexport function storeKeyNameFromField(\n  field: FieldNode,\n  variables?: Object,\n): string {\n  let directivesObj: any = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(directive => {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(({ name, value }) =>\n          valueToObjectRepresentation(\n            directivesObj[directive.name.value],\n            name,\n            value,\n            variables,\n          ),\n        );\n      }\n    });\n  }\n\n  let argObj: any = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nexport type Directives = {\n  [directiveName: string]: {\n    [argName: string]: any;\n  };\n};\n\nconst KNOWN_DIRECTIVES: string[] = [\n  'connection',\n  'include',\n  'skip',\n  'client',\n  'rest',\n  'export',\n];\n\nexport function getStoreKeyName(\n  fieldName: string,\n  args?: Object,\n  directives?: Directives,\n): string {\n  if (\n    directives &&\n    directives['connection'] &&\n    directives['connection']['key']\n  ) {\n    if (\n      directives['connection']['filter'] &&\n      (directives['connection']['filter'] as string[]).length > 0\n    ) {\n      const filterKeys = directives['connection']['filter']\n        ? (directives['connection']['filter'] as string[])\n        : [];\n      filterKeys.sort();\n\n      const queryArgs = args as { [key: string]: any };\n      const filteredArgs = {} as { [key: string]: any };\n      filterKeys.forEach(key => {\n        filteredArgs[key] = queryArgs[key];\n      });\n\n      return `${directives['connection']['key']}(${JSON.stringify(\n        filteredArgs,\n      )})`;\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  let completeFieldName: string = fieldName;\n\n  if (args) {\n    // We can't use `JSON.stringify` here since it's non-deterministic,\n    // and can lead to different store key names being created even though\n    // the `args` object used during creation has the same properties/values.\n    const stringifiedArgs: string = stringify(args);\n    completeFieldName += `(${stringifiedArgs})`;\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(key => {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += `@${key}(${JSON.stringify(directives[key])})`;\n      } else {\n        completeFieldName += `@${key}`;\n      }\n    });\n  }\n\n  return completeFieldName;\n}\n\nexport function argumentsObjectFromField(\n  field: FieldNode | DirectiveNode,\n  variables: Object,\n): Object {\n  if (field.arguments && field.arguments.length) {\n    const argObj: Object = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n    return argObj;\n  }\n\n  return null;\n}\n\nexport function resultKeyNameFromField(field: FieldNode): string {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nexport function isField(selection: SelectionNode): selection is FieldNode {\n  return selection.kind === 'Field';\n}\n\nexport function isInlineFragment(\n  selection: SelectionNode,\n): selection is InlineFragmentNode {\n  return selection.kind === 'InlineFragment';\n}\n\nexport function isIdValue(idObject: StoreValue): idObject is IdValue {\n  return idObject &&\n    (idObject as IdValue | JsonValue).type === 'id' &&\n    typeof (idObject as IdValue).generated === 'boolean';\n}\n\nexport type IdConfig = {\n  id: string;\n  typename: string | undefined;\n};\n\nexport function toIdValue(\n  idConfig: string | IdConfig,\n  generated = false,\n): IdValue {\n  return {\n    type: 'id',\n    generated,\n    ...(typeof idConfig === 'string'\n      ? { id: idConfig, typename: undefined }\n      : idConfig),\n  };\n}\n\nexport function isJsonValue(jsonObject: StoreValue): jsonObject is JsonValue {\n  return (\n    jsonObject != null &&\n    typeof jsonObject === 'object' &&\n    (jsonObject as IdValue | JsonValue).type === 'json'\n  );\n}\n\nfunction defaultValueFromVariable(node: VariableNode) {\n  throw new InvariantError(`Variable nodes are not supported by valueFromNode`);\n}\n\nexport type VariableValue = (node: VariableNode) => any;\n\n/**\n * Evaluate a ValueNode and yield its value in its natural JS form.\n */\nexport function valueFromNode(\n  node: ValueNode,\n  onVariable: VariableValue = defaultValueFromVariable,\n): any {\n  switch (node.kind) {\n    case 'Variable':\n      return onVariable(node);\n    case 'NullValue':\n      return null;\n    case 'IntValue':\n      return parseInt(node.value, 10);\n    case 'FloatValue':\n      return parseFloat(node.value);\n    case 'ListValue':\n      return node.values.map(v => valueFromNode(v, onVariable));\n    case 'ObjectValue': {\n      const value: { [key: string]: any } = {};\n      for (const field of node.fields) {\n        value[field.name.value] = valueFromNode(field.value, onVariable);\n      }\n      return value;\n    }\n    default:\n      return node.value;\n  }\n}\n","// Provides the methods that allow QueryManager to handle the `skip` and\n// `include` directives within GraphQL.\nimport {\n  FieldNode,\n  SelectionNode,\n  VariableNode,\n  BooleanValueNode,\n  DirectiveNode,\n  DocumentNode,\n  ArgumentNode,\n  ValueNode,\n} from 'graphql';\n\nimport { visit } from 'graphql/language/visitor';\n\nimport { invariant } from 'ts-invariant';\n\nimport { argumentsObjectFromField } from './storeUtils';\n\nexport type DirectiveInfo = {\n  [fieldName: string]: { [argName: string]: any };\n};\n\nexport function getDirectiveInfoFromField(\n  field: FieldNode,\n  variables: Object,\n): DirectiveInfo {\n  if (field.directives && field.directives.length) {\n    const directiveObj: DirectiveInfo = {};\n    field.directives.forEach((directive: DirectiveNode) => {\n      directiveObj[directive.name.value] = argumentsObjectFromField(\n        directive,\n        variables,\n      );\n    });\n    return directiveObj;\n  }\n  return null;\n}\n\nexport function shouldInclude(\n  selection: SelectionNode,\n  variables: { [name: string]: any } = {},\n): boolean {\n  return getInclusionDirectives(\n    selection.directives,\n  ).every(({ directive, ifArgument }) => {\n    let evaledValue: boolean = false;\n    if (ifArgument.value.kind === 'Variable') {\n      evaledValue = variables[(ifArgument.value as VariableNode).name.value];\n      invariant(\n        evaledValue !== void 0,\n        `Invalid variable referenced in @${directive.name.value} directive.`,\n      );\n    } else {\n      evaledValue = (ifArgument.value as BooleanValueNode).value;\n    }\n    return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n  });\n}\n\nexport function getDirectiveNames(doc: DocumentNode) {\n  const names: string[] = [];\n\n  visit(doc, {\n    Directive(node) {\n      names.push(node.name.value);\n    },\n  });\n\n  return names;\n}\n\nexport function hasDirectives(names: string[], doc: DocumentNode) {\n  return getDirectiveNames(doc).some(\n    (name: string) => names.indexOf(name) > -1,\n  );\n}\n\nexport function hasClientExports(document: DocumentNode) {\n  return (\n    document &&\n    hasDirectives(['client'], document) &&\n    hasDirectives(['export'], document)\n  );\n}\n\nexport type InclusionDirectives = Array<{\n  directive: DirectiveNode;\n  ifArgument: ArgumentNode;\n}>;\n\nfunction isInclusionDirective({ name: { value } }: DirectiveNode): boolean {\n  return value === 'skip' || value === 'include';\n}\n\nexport function getInclusionDirectives(\n  directives: ReadonlyArray<DirectiveNode>,\n): InclusionDirectives {\n  return directives ? directives.filter(isInclusionDirective).map(directive => {\n    const directiveArguments = directive.arguments;\n    const directiveName = directive.name.value;\n\n    invariant(\n      directiveArguments && directiveArguments.length === 1,\n      `Incorrect number of arguments for the @${directiveName} directive.`,\n    );\n\n    const ifArgument = directiveArguments[0];\n    invariant(\n      ifArgument.name && ifArgument.name.value === 'if',\n      `Invalid argument for the @${directiveName} directive.`,\n    );\n\n    const ifValue: ValueNode = ifArgument.value;\n\n    // means it has to be a variable value if this is a valid @skip or @include directive\n    invariant(\n      ifValue &&\n        (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'),\n      `Argument for the @${directiveName} directive must be a variable or a boolean value.`,\n    );\n\n    return { directive, ifArgument };\n  }) : [];\n}\n\n","import { DocumentNode, FragmentDefinitionNode } from 'graphql';\nimport { invariant, InvariantError } from 'ts-invariant';\n\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more than one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(\n  document: DocumentNode,\n  fragmentName?: string,\n): DocumentNode {\n  let actualFragmentName = fragmentName;\n\n  // Build an array of all our fragment definitions that will be used for\n  // validations. We also do some validations on the other definitions in the\n  // document while building this list.\n  const fragments: Array<FragmentDefinitionNode> = [];\n  document.definitions.forEach(definition => {\n    // Throw an error if we encounter an operation definition because we will\n    // define our own operation definition later on.\n    if (definition.kind === 'OperationDefinition') {\n      throw new InvariantError(\n        `Found a ${definition.operation} operation${\n          definition.name ? ` named '${definition.name.value}'` : ''\n        }. ` +\n          'No operations are allowed when using a fragment as a query. Only fragments are allowed.',\n      );\n    }\n    // Add our definition to the fragments array if it is a fragment\n    // definition.\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n\n  // If the user did not give us a fragment name then let us try to get a\n  // name from a single fragment in the definition.\n  if (typeof actualFragmentName === 'undefined') {\n    invariant(\n      fragments.length === 1,\n      `Found ${\n        fragments.length\n      } fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`,\n    );\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  // Generate a query document with an operation that simply spreads the\n  // fragment inside of it.\n  const query: DocumentNode = {\n    ...document,\n    definitions: [\n      {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        selectionSet: {\n          kind: 'SelectionSet',\n          selections: [\n            {\n              kind: 'FragmentSpread',\n              name: {\n                kind: 'Name',\n                value: actualFragmentName,\n              },\n            },\n          ],\n        },\n      },\n      ...document.definitions,\n    ],\n  };\n\n  return query;\n}\n","/**\n * Adds the properties of one or more source objects to a target object. Works exactly like\n * `Object.assign`, but as a utility to maintain support for IE 11.\n *\n * @see https://github.com/apollostack/apollo-client/pull/1009\n */\nexport function assign<A, B>(a: A, b: B): A & B;\nexport function assign<A, B, C>(a: A, b: B, c: C): A & B & C;\nexport function assign<A, B, C, D>(a: A, b: B, c: C, d: D): A & B & C & D;\nexport function assign<A, B, C, D, E>(\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n): A & B & C & D & E;\nexport function assign(target: any, ...sources: Array<any>): any;\nexport function assign(\n  target: { [key: string]: any },\n  ...sources: Array<{ [key: string]: any }>\n): { [key: string]: any } {\n  sources.forEach(source => {\n    if (typeof source === 'undefined' || source === null) {\n      return;\n    }\n    Object.keys(source).forEach(key => {\n      target[key] = source[key];\n    });\n  });\n  return target;\n}\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n  ValueNode,\n} from 'graphql';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { assign } from './util/assign';\n\nimport { valueToObjectRepresentation, JsonValue } from './storeUtils';\n\nexport function getMutationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode {\n  checkDocument(doc);\n\n  let mutationDef: OperationDefinitionNode | null = doc.definitions.filter(\n    definition =>\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'mutation',\n  )[0] as OperationDefinitionNode;\n\n  invariant(mutationDef, 'Must contain a mutation definition.');\n\n  return mutationDef;\n}\n\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc: DocumentNode) {\n  invariant(\n    doc && doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  const operations = doc.definitions\n    .filter(d => d.kind !== 'FragmentDefinition')\n    .map(definition => {\n      if (definition.kind !== 'OperationDefinition') {\n        throw new InvariantError(\n          `Schema type definitions not allowed in queries. Found: \"${\n            definition.kind\n          }\"`,\n        );\n      }\n      return definition;\n    });\n\n  invariant(\n    operations.length <= 1,\n    `Ambiguous GraphQL document: contains ${operations.length} operations`,\n  );\n\n  return doc;\n}\n\nexport function getOperationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode | undefined {\n  checkDocument(doc);\n  return doc.definitions.filter(\n    definition => definition.kind === 'OperationDefinition',\n  )[0] as OperationDefinitionNode;\n}\n\nexport function getOperationDefinitionOrDie(\n  document: DocumentNode,\n): OperationDefinitionNode {\n  const def = getOperationDefinition(document);\n  invariant(def, `GraphQL document is missing an operation`);\n  return def;\n}\n\nexport function getOperationName(doc: DocumentNode): string | null {\n  return (\n    doc.definitions\n      .filter(\n        definition =>\n          definition.kind === 'OperationDefinition' && definition.name,\n      )\n      .map((x: OperationDefinitionNode) => x.name.value)[0] || null\n  );\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(\n  doc: DocumentNode,\n): FragmentDefinitionNode[] {\n  return doc.definitions.filter(\n    definition => definition.kind === 'FragmentDefinition',\n  ) as FragmentDefinitionNode[];\n}\n\nexport function getQueryDefinition(doc: DocumentNode): OperationDefinitionNode {\n  const queryDef = getOperationDefinition(doc) as OperationDefinitionNode;\n\n  invariant(\n    queryDef && queryDef.operation === 'query',\n    'Must contain a query definition.',\n  );\n\n  return queryDef;\n}\n\nexport function getFragmentDefinition(\n  doc: DocumentNode,\n): FragmentDefinitionNode {\n  invariant(\n    doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  invariant(\n    doc.definitions.length <= 1,\n    'Fragment must have exactly one definition.',\n  );\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  invariant(\n    fragmentDef.kind === 'FragmentDefinition',\n    'Must be a fragment definition.',\n  );\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(\n  queryDoc: DocumentNode,\n): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === 'OperationDefinition') {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (\n        operation === 'query' ||\n        operation === 'mutation' ||\n        operation === 'subscription'\n      ) {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw new InvariantError(\n    'Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.',\n  );\n}\n\n/**\n * This is an interface that describes a map from fragment names to fragment definitions.\n */\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = [],\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach(fragment => {\n    symTable[fragment.name.value] = fragment;\n  });\n\n  return symTable;\n}\n\nexport function getDefaultValues(\n  definition: OperationDefinitionNode | undefined,\n): { [key: string]: JsonValue } {\n  if (\n    definition &&\n    definition.variableDefinitions &&\n    definition.variableDefinitions.length\n  ) {\n    const defaultValues = definition.variableDefinitions\n      .filter(({ defaultValue }) => defaultValue)\n      .map(\n        ({ variable, defaultValue }): { [key: string]: JsonValue } => {\n          const defaultValueObj: { [key: string]: JsonValue } = {};\n          valueToObjectRepresentation(\n            defaultValueObj,\n            variable.name,\n            defaultValue as ValueNode,\n          );\n\n          return defaultValueObj;\n        },\n      );\n\n    return assign({}, ...defaultValues);\n  }\n\n  return {};\n}\n\n/**\n * Returns the names of all variables declared by the operation.\n */\nexport function variablesInOperation(\n  operation: OperationDefinitionNode,\n): Set<string> {\n  const names = new Set<string>();\n  if (operation.variableDefinitions) {\n    for (const definition of operation.variableDefinitions) {\n      names.add(definition.variable.name.value);\n    }\n  }\n\n  return names;\n}\n","export function filterInPlace<T>(\n  array: T[],\n  test: (elem: T) => boolean,\n  context?: any,\n): T[] {\n  let target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n","import {\n  DocumentNode,\n  SelectionNode,\n  SelectionSetNode,\n  OperationDefinitionNode,\n  FieldNode,\n  DirectiveNode,\n  FragmentDefinitionNode,\n  ArgumentNode,\n  FragmentSpreadNode,\n  VariableDefinitionNode,\n  VariableNode,\n} from 'graphql';\nimport { visit } from 'graphql/language/visitor';\n\nimport {\n  checkDocument,\n  getOperationDefinition,\n  getFragmentDefinition,\n  getFragmentDefinitions,\n  createFragmentMap,\n  FragmentMap,\n  getMainDefinition,\n} from './getFromAST';\nimport { filterInPlace } from './util/filterInPlace';\nimport { invariant } from 'ts-invariant';\nimport { isField, isInlineFragment } from './storeUtils';\n\nexport type RemoveNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n  remove?: boolean;\n};\n\nexport type GetNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n};\n\nexport type RemoveDirectiveConfig = RemoveNodeConfig<DirectiveNode>;\nexport type GetDirectiveConfig = GetNodeConfig<DirectiveNode>;\nexport type RemoveArgumentsConfig = RemoveNodeConfig<ArgumentNode>;\nexport type GetFragmentSpreadConfig = GetNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentSpreadConfig = RemoveNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentDefinitionConfig = RemoveNodeConfig<\n  FragmentDefinitionNode\n>;\nexport type RemoveVariableDefinitionConfig = RemoveNodeConfig<\n  VariableDefinitionNode\n>;\n\nconst TYPENAME_FIELD: FieldNode = {\n  kind: 'Field',\n  name: {\n    kind: 'Name',\n    value: '__typename',\n  },\n};\n\nfunction isEmpty(\n  op: OperationDefinitionNode | FragmentDefinitionNode,\n  fragments: FragmentMap,\n): boolean {\n  return op.selectionSet.selections.every(\n    selection =>\n      selection.kind === 'FragmentSpread' &&\n      isEmpty(fragments[selection.name.value], fragments),\n  );\n}\n\nfunction nullIfDocIsEmpty(doc: DocumentNode) {\n  return isEmpty(\n    getOperationDefinition(doc) || getFragmentDefinition(doc),\n    createFragmentMap(getFragmentDefinitions(doc)),\n  )\n    ? null\n    : doc;\n}\n\nfunction getDirectiveMatcher(\n  directives: (RemoveDirectiveConfig | GetDirectiveConfig)[],\n) {\n  return function directiveMatcher(directive: DirectiveNode) {\n    return directives.some(\n      dir =>\n        (dir.name && dir.name === directive.name.value) ||\n        (dir.test && dir.test(directive)),\n    );\n  };\n}\n\nexport function removeDirectivesFromDocument(\n  directives: RemoveDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const variablesInUse: Record<string, boolean> = Object.create(null);\n  let variablesToRemove: RemoveArgumentsConfig[] = [];\n\n  const fragmentSpreadsInUse: Record<string, boolean> = Object.create(null);\n  let fragmentSpreadsToRemove: RemoveFragmentSpreadConfig[] = [];\n\n  let modifiedDoc = nullIfDocIsEmpty(\n    visit(doc, {\n      Variable: {\n        enter(node, _key, parent) {\n          // Store each variable that's referenced as part of an argument\n          // (excluding operation definition variables), so we know which\n          // variables are being used. If we later want to remove a variable\n          // we'll fist check to see if it's being used, before continuing with\n          // the removal.\n          if (\n            (parent as VariableDefinitionNode).kind !== 'VariableDefinition'\n          ) {\n            variablesInUse[node.name.value] = true;\n          }\n        },\n      },\n\n      Field: {\n        enter(node) {\n          if (directives && node.directives) {\n            // If `remove` is set to true for a directive, and a directive match\n            // is found for a field, remove the field as well.\n            const shouldRemoveField = directives.some(\n              directive => directive.remove,\n            );\n\n            if (\n              shouldRemoveField &&\n              node.directives &&\n              node.directives.some(getDirectiveMatcher(directives))\n            ) {\n              if (node.arguments) {\n                // Store field argument variables so they can be removed\n                // from the operation definition.\n                node.arguments.forEach(arg => {\n                  if (arg.value.kind === 'Variable') {\n                    variablesToRemove.push({\n                      name: (arg.value as VariableNode).name.value,\n                    });\n                  }\n                });\n              }\n\n              if (node.selectionSet) {\n                // Store fragment spread names so they can be removed from the\n                // docuemnt.\n                getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(\n                  frag => {\n                    fragmentSpreadsToRemove.push({\n                      name: frag.name.value,\n                    });\n                  },\n                );\n              }\n\n              // Remove the field.\n              return null;\n            }\n          }\n        },\n      },\n\n      FragmentSpread: {\n        enter(node) {\n          // Keep track of referenced fragment spreads. This is used to\n          // determine if top level fragment definitions should be removed.\n          fragmentSpreadsInUse[node.name.value] = true;\n        },\n      },\n\n      Directive: {\n        enter(node) {\n          // If a matching directive is found, remove it.\n          if (getDirectiveMatcher(directives)(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n\n  // If we've removed fields with arguments, make sure the associated\n  // variables are also removed from the rest of the document, as long as they\n  // aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(variablesToRemove, v => !variablesInUse[v.name]).length\n  ) {\n    modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n  }\n\n  // If we've removed selection sets with fragment spreads, make sure the\n  // associated fragment definitions are also removed from the rest of the\n  // document, as long as they aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(fragmentSpreadsToRemove, fs => !fragmentSpreadsInUse[fs.name])\n      .length\n  ) {\n    modifiedDoc = removeFragmentSpreadFromDocument(\n      fragmentSpreadsToRemove,\n      modifiedDoc,\n    );\n  }\n\n  return modifiedDoc;\n}\n\nexport function addTypenameToDocument(doc: DocumentNode): DocumentNode {\n  return visit(checkDocument(doc), {\n    SelectionSet: {\n      enter(node, _key, parent) {\n        // Don't add __typename to OperationDefinitions.\n        if (\n          parent &&\n          (parent as OperationDefinitionNode).kind === 'OperationDefinition'\n        ) {\n          return;\n        }\n\n        // No changes if no selections.\n        const { selections } = node;\n        if (!selections) {\n          return;\n        }\n\n        // If selections already have a __typename, or are part of an\n        // introspection query, do nothing.\n        const skip = selections.some(selection => {\n          return (\n            isField(selection) &&\n            (selection.name.value === '__typename' ||\n              selection.name.value.lastIndexOf('__', 0) === 0)\n          );\n        });\n        if (skip) {\n          return;\n        }\n\n        // If this SelectionSet is @export-ed as an input variable, it should\n        // not have a __typename field (see issue #4691).\n        const field = parent as FieldNode;\n        if (\n          isField(field) &&\n          field.directives &&\n          field.directives.some(d => d.name.value === 'export')\n        ) {\n          return;\n        }\n\n        // Create and return a new SelectionSet with a __typename Field.\n        return {\n          ...node,\n          selections: [...selections, TYPENAME_FIELD],\n        };\n      },\n    },\n  });\n}\n\nconst connectionRemoveConfig = {\n  test: (directive: DirectiveNode) => {\n    const willRemove = directive.name.value === 'connection';\n    if (willRemove) {\n      if (\n        !directive.arguments ||\n        !directive.arguments.some(arg => arg.name.value === 'key')\n      ) {\n        invariant.warn(\n          'Removing an @connection directive even though it does not have a key. ' +\n            'You may want to use the key parameter to specify a store key.',\n        );\n      }\n    }\n\n    return willRemove;\n  },\n};\n\nexport function removeConnectionDirectiveFromDocument(doc: DocumentNode) {\n  return removeDirectivesFromDocument(\n    [connectionRemoveConfig],\n    checkDocument(doc),\n  );\n}\n\nfunction hasDirectivesInSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode,\n  nestedCheck = true,\n): boolean {\n  return (\n    selectionSet &&\n    selectionSet.selections &&\n    selectionSet.selections.some(selection =>\n      hasDirectivesInSelection(directives, selection, nestedCheck),\n    )\n  );\n}\n\nfunction hasDirectivesInSelection(\n  directives: GetDirectiveConfig[],\n  selection: SelectionNode,\n  nestedCheck = true,\n): boolean {\n  if (!isField(selection)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return (\n    selection.directives.some(getDirectiveMatcher(directives)) ||\n    (nestedCheck &&\n      hasDirectivesInSelectionSet(\n        directives,\n        selection.selectionSet,\n        nestedCheck,\n      ))\n  );\n}\n\nexport function getDirectivesFromDocument(\n  directives: GetDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  checkDocument(doc);\n\n  let parentPath: string;\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      SelectionSet: {\n        enter(node, _key, _parent, path) {\n          const currentPath = path.join('-');\n\n          if (\n            !parentPath ||\n            currentPath === parentPath ||\n            !currentPath.startsWith(parentPath)\n          ) {\n            if (node.selections) {\n              const selectionsWithDirectives = node.selections.filter(\n                selection => hasDirectivesInSelection(directives, selection),\n              );\n\n              if (hasDirectivesInSelectionSet(directives, node, false)) {\n                parentPath = currentPath;\n              }\n\n              return {\n                ...node,\n                selections: selectionsWithDirectives,\n              };\n            } else {\n              return null;\n            }\n          }\n        },\n      },\n    }),\n  );\n}\n\nfunction getArgumentMatcher(config: RemoveArgumentsConfig[]) {\n  return function argumentMatcher(argument: ArgumentNode) {\n    return config.some(\n      (aConfig: RemoveArgumentsConfig) =>\n        argument.value &&\n        argument.value.kind === 'Variable' &&\n        argument.value.name &&\n        (aConfig.name === argument.value.name.value ||\n          (aConfig.test && aConfig.test(argument))),\n    );\n  };\n}\n\nexport function removeArgumentsFromDocument(\n  config: RemoveArgumentsConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  const argMatcher = getArgumentMatcher(config);\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      OperationDefinition: {\n        enter(node) {\n          return {\n            ...node,\n            // Remove matching top level variables definitions.\n            variableDefinitions: node.variableDefinitions.filter(\n              varDef =>\n                !config.some(arg => arg.name === varDef.variable.name.value),\n            ),\n          };\n        },\n      },\n\n      Field: {\n        enter(node) {\n          // If `remove` is set to true for an argument, and an argument match\n          // is found for a field, remove the field as well.\n          const shouldRemoveField = config.some(argConfig => argConfig.remove);\n\n          if (shouldRemoveField) {\n            let argMatchCount = 0;\n            node.arguments.forEach(arg => {\n              if (argMatcher(arg)) {\n                argMatchCount += 1;\n              }\n            });\n            if (argMatchCount === 1) {\n              return null;\n            }\n          }\n        },\n      },\n\n      Argument: {\n        enter(node) {\n          // Remove all matching arguments.\n          if (argMatcher(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n}\n\nexport function removeFragmentSpreadFromDocument(\n  config: RemoveFragmentSpreadConfig[],\n  doc: DocumentNode,\n): DocumentNode {\n  function enter(\n    node: FragmentSpreadNode | FragmentDefinitionNode,\n  ): null | void {\n    if (config.some(def => def.name === node.name.value)) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      FragmentSpread: { enter },\n      FragmentDefinition: { enter },\n    }),\n  );\n}\n\nfunction getAllFragmentSpreadsFromSelectionSet(\n  selectionSet: SelectionSetNode,\n): FragmentSpreadNode[] {\n  const allFragments: FragmentSpreadNode[] = [];\n\n  selectionSet.selections.forEach(selection => {\n    if (\n      (isField(selection) || isInlineFragment(selection)) &&\n      selection.selectionSet\n    ) {\n      getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(\n        frag => allFragments.push(frag),\n      );\n    } else if (selection.kind === 'FragmentSpread') {\n      allFragments.push(selection);\n    }\n  });\n\n  return allFragments;\n}\n\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(\n  document: DocumentNode,\n): DocumentNode {\n  const definition = getMainDefinition(document);\n  const definitionOperation = (<OperationDefinitionNode>definition).operation;\n\n  if (definitionOperation === 'query') {\n    // Already a query, so return the existing document.\n    return document;\n  }\n\n  // Build a new query using the selection set of the main operation.\n  const modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter(node) {\n        return {\n          ...node,\n          operation: 'query',\n        };\n      },\n    },\n  });\n  return modifiedDoc;\n}\n\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(\n  document: DocumentNode,\n): DocumentNode | null {\n  checkDocument(document);\n\n  let modifiedDoc = removeDirectivesFromDocument(\n    [\n      {\n        test: (directive: DirectiveNode) => directive.name.value === 'client',\n        remove: true,\n      },\n    ],\n    document,\n  );\n\n  // After a fragment definition has had its @client related document\n  // sets removed, if the only field it has left is a __typename field,\n  // remove the entire fragment operation to prevent it from being fired\n  // on the server.\n  if (modifiedDoc) {\n    modifiedDoc = visit(modifiedDoc, {\n      FragmentDefinition: {\n        enter(node) {\n          if (node.selectionSet) {\n            const isTypenameOnly = node.selectionSet.selections.every(\n              selection =>\n                isField(selection) && selection.name.value === '__typename',\n            );\n            if (isTypenameOnly) {\n              return null;\n            }\n          }\n        },\n      },\n    });\n  }\n\n  return modifiedDoc;\n}\n","export const canUseWeakMap = typeof WeakMap === 'function' && !(\n  typeof navigator === 'object' &&\n  navigator.product === 'ReactNative'\n);\n","const { toString } = Object.prototype;\n\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep<T>(value: T): T {\n  return cloneDeepHelper(value, new Map());\n}\n\nfunction cloneDeepHelper<T>(val: T, seen: Map<any, any>): T {\n  switch (toString.call(val)) {\n  case \"[object Array]\": {\n    if (seen.has(val)) return seen.get(val);\n    const copy: T & any[] = (val as any).slice(0);\n    seen.set(val, copy);\n    copy.forEach(function (child, i) {\n      copy[i] = cloneDeepHelper(child, seen);\n    });\n    return copy;\n  }\n\n  case \"[object Object]\": {\n    if (seen.has(val)) return seen.get(val);\n    // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n    // possible in all JS environments, so we will assume they exist/work.\n    const copy = Object.create(Object.getPrototypeOf(val));\n    seen.set(val, copy);\n    Object.keys(val).forEach(key => {\n      copy[key] = cloneDeepHelper((val as any)[key], seen);\n    });\n    return copy;\n  }\n\n  default:\n    return val;\n  }\n}\n","export function getEnv(): string | undefined {\n  if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n    return process.env.NODE_ENV;\n  }\n\n  // default environment\n  return 'development';\n}\n\nexport function isEnv(env: string): boolean {\n  return getEnv() === env;\n}\n\nexport function isProduction(): boolean {\n  return isEnv('production') === true;\n}\n\nexport function isDevelopment(): boolean {\n  return isEnv('development') === true;\n}\n\nexport function isTest(): boolean {\n  return isEnv('test') === true;\n}\n","import { ExecutionResult } from 'graphql';\n\nexport function tryFunctionOrLogError(f: Function) {\n  try {\n    return f();\n  } catch (e) {\n    if (console.error) {\n      console.error(e);\n    }\n  }\n}\n\nexport function graphQLResultHasError(result: ExecutionResult) {\n  return result.errors && result.errors.length;\n}\n","import { isDevelopment, isTest } from './environment';\n\n// Taken (mostly) from https://github.com/substack/deep-freeze to avoid\n// import hassles with rollup.\nfunction deepFreeze(o: any) {\n  Object.freeze(o);\n\n  Object.getOwnPropertyNames(o).forEach(function(prop) {\n    if (\n      o[prop] !== null &&\n      (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n      !Object.isFrozen(o[prop])\n    ) {\n      deepFreeze(o[prop]);\n    }\n  });\n\n  return o;\n}\n\nexport function maybeDeepFreeze(obj: any) {\n  if (isDevelopment() || isTest()) {\n    // Polyfilled Symbols potentially cause infinite / very deep recursion while deep freezing\n    // which is known to crash IE11 (https://github.com/apollographql/apollo-client/issues/3043).\n    const symbolIsPolyfilled =\n      typeof Symbol === 'function' && typeof Symbol('') === 'string';\n\n    if (!symbolIsPolyfilled) {\n      return deepFreeze(obj);\n    }\n  }\n  return obj;\n}\n","const { hasOwnProperty } = Object.prototype;\n\n// These mergeDeep and mergeDeepArray utilities merge any number of objects\n// together, sharing as much memory as possible with the source objects, while\n// remaining careful to avoid modifying any source objects.\n\n// Logically, the return type of mergeDeep should be the intersection of\n// all the argument types. The binary call signature is by far the most\n// common, but we support 0- through 5-ary as well. After that, the\n// resulting type is just the inferred array element type. Note to nerds:\n// there is a more clever way of doing this that converts the tuple type\n// first to a union type (easy enough: T[number]) and then converts the\n// union to an intersection type using distributive conditional type\n// inference, but that approach has several fatal flaws (boolean becomes\n// true & false, and the inferred type ends up as unknown in many cases),\n// in addition to being nearly impossible to explain/understand.\nexport type TupleToIntersection<T extends any[]> =\n  T extends [infer A] ? A :\n  T extends [infer A, infer B] ? A & B :\n  T extends [infer A, infer B, infer C] ? A & B & C :\n  T extends [infer A, infer B, infer C, infer D] ? A & B & C & D :\n  T extends [infer A, infer B, infer C, infer D, infer E] ? A & B & C & D & E :\n  T extends (infer U)[] ? U : any;\n\nexport function mergeDeep<T extends any[]>(\n  ...sources: T\n): TupleToIntersection<T> {\n  return mergeDeepArray(sources);\n}\n\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray<T>(sources: T[]): T {\n  let target = sources[0] || {} as T;\n  const count = sources.length;\n  if (count > 1) {\n    const pastCopies: any[] = [];\n    target = shallowCopyForMerge(target, pastCopies);\n    for (let i = 1; i < count; ++i) {\n      target = mergeHelper(target, sources[i], pastCopies);\n    }\n  }\n  return target;\n}\n\nfunction isObject(obj: any): obj is Record<string | number, any> {\n  return obj !== null && typeof obj === 'object';\n}\n\nfunction mergeHelper(\n  target: any,\n  source: any,\n  pastCopies: any[],\n) {\n  if (isObject(source) && isObject(target)) {\n    // In case the target has been frozen, make an extensible copy so that\n    // we can merge properties into the copy.\n    if (Object.isExtensible && !Object.isExtensible(target)) {\n      target = shallowCopyForMerge(target, pastCopies);\n    }\n\n    Object.keys(source).forEach(sourceKey => {\n      const sourceValue = source[sourceKey];\n      if (hasOwnProperty.call(target, sourceKey)) {\n        const targetValue = target[sourceKey];\n        if (sourceValue !== targetValue) {\n          // When there is a key collision, we need to make a shallow copy of\n          // target[sourceKey] so the merge does not modify any source objects.\n          // To avoid making unnecessary copies, we use a simple array to track\n          // past copies, since it's safe to modify copies created earlier in\n          // the merge. We use an array for pastCopies instead of a Map or Set,\n          // since the number of copies should be relatively small, and some\n          // Map/Set polyfills modify their keys.\n          target[sourceKey] = mergeHelper(\n            shallowCopyForMerge(targetValue, pastCopies),\n            sourceValue,\n            pastCopies,\n          );\n        }\n      } else {\n        // If there is no collision, the target can safely share memory with\n        // the source, and the recursion can terminate here.\n        target[sourceKey] = sourceValue;\n      }\n    });\n\n    return target;\n  }\n\n  // If source (or target) is not an object, let source replace target.\n  return source;\n}\n\nfunction shallowCopyForMerge<T>(value: T, pastCopies: any[]): T {\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    pastCopies.indexOf(value) < 0\n  ) {\n    if (Array.isArray(value)) {\n      value = (value as any).slice(0);\n    } else {\n      value = {\n        __proto__: Object.getPrototypeOf(value),\n        ...value,\n      };\n    }\n    pastCopies.push(value);\n  }\n  return value;\n}\n","import { isProduction, isTest } from './environment';\n\nconst haveWarned = Object.create({});\n\n/**\n * Print a warning only once in development.\n * In production no warnings are printed.\n * In test all warnings are printed.\n *\n * @param msg The warning message\n * @param type warn or error (will call console.warn or console.error)\n */\nexport function warnOnceInDevelopment(msg: string, type = 'warn') {\n  if (!isProduction() && !haveWarned[msg]) {\n    if (!isTest()) {\n      haveWarned[msg] = true;\n    }\n    if (type === 'error') {\n      console.error(msg);\n    } else {\n      console.warn(msg);\n    }\n  }\n}\n","const genericMessage = \"Invariant Violation\";\nconst {\n  setPrototypeOf = function (obj: any, proto: any) {\n    obj.__proto__ = proto;\n    return obj;\n  },\n} = Object as any;\n\nexport class InvariantError extends Error {\n  framesToPop = 1;\n  name = genericMessage;\n  constructor(message: string | number = genericMessage) {\n    super(\n      typeof message === \"number\"\n        ? `${genericMessage}: ${message} (see https://github.com/apollographql/invariant-packages)`\n        : message\n    );\n    setPrototypeOf(this, InvariantError.prototype);\n  }\n}\n\nexport function invariant(condition: any, message?: string | number) {\n  if (!condition) {\n    throw new InvariantError(message);\n  }\n}\n\nfunction wrapConsoleMethod(method: \"warn\" | \"error\") {\n  return function () {\n    return console[method].apply(console, arguments as any);\n  } as (...args: any[]) => void;\n}\n\nexport namespace invariant {\n  export const warn = wrapConsoleMethod(\"warn\");\n  export const error = wrapConsoleMethod(\"error\");\n}\n\n// Code that uses ts-invariant with rollup-plugin-invariant may want to\n// import this process stub to avoid errors evaluating process.env.NODE_ENV.\n// However, because most ESM-to-CJS compilers will rewrite the process import\n// as tsInvariant.process, which prevents proper replacement by minifiers, we\n// also attempt to define the stub globally when it is not already defined.\nlet processStub: NodeJS.Process = { env: {} } as any;\nexport { processStub as process };\nif (typeof process === \"object\") {\n  processStub = process;\n} else try {\n  // Using Function to evaluate this assignment in global scope also escapes\n  // the strict mode of the current module, thereby allowing the assignment.\n  // Inspired by https://github.com/facebook/regenerator/pull/369.\n  Function(\"stub\", \"process = stub\")(processStub);\n} catch (atLeastWeTried) {\n  // The assignment can fail if a Content Security Policy heavy-handedly\n  // forbids Function usage. In those environments, developers should take\n  // extra care to replace process.env.NODE_ENV in their production builds,\n  // or define an appropriate global.process polyfill.\n}\n\nexport default invariant;\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"fluid\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"widths\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","module.exports = require(\"regenerator-runtime\");\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nexport let OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","/* tslint:disable */\n\nimport zenObservable from 'zen-observable';\n\nnamespace Observable {\n\n}\n\nimport { ZenObservable } from './types';\n\nexport { ZenObservable };\n\nexport type Observer<T> = ZenObservable.Observer<T>;\nexport type Subscriber<T> = ZenObservable.Subscriber<T>;\nexport type ObservableLike<T> = ZenObservable.ObservableLike<T>;\n\nexport const Observable: {\n  new <T>(subscriber: Subscriber<T>): Observable<T>;\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n} = <any>zenObservable;\n\nexport interface Observable<T> {\n  subscribe(\n    observerOrNext: ((value: T) => void) | ZenObservable.Observer<T>,\n    error?: (error: any) => void,\n    complete?: () => void,\n  ): ZenObservable.Subscription;\n\n  forEach(fn: (value: T) => void): Promise<void>;\n\n  map<R>(fn: (value: T) => R): Observable<R>;\n\n  filter(fn: (value: T) => boolean): Observable<T>;\n\n  reduce<R = T>(\n    fn: (previousValue: R | T, currentValue: T) => R | T,\n    initialValue?: R | T,\n  ): Observable<R | T>;\n\n  flatMap<R>(fn: (value: T) => ZenObservable.ObservableLike<R>): Observable<R>;\n\n  from<R>(\n    observable: Observable<R> | ZenObservable.ObservableLike<R> | ArrayLike<R>,\n  ): Observable<R>;\n  of<R>(...args: Array<R>): Observable<R>;\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","/**\n * The set of allowed kind values for AST nodes.\n */\nexport let Kind;\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","import Observable from 'zen-observable-ts';\n\nimport { GraphQLRequest, Operation } from './types';\nimport { ApolloLink } from './link';\n\nimport { getOperationName } from 'apollo-utilities';\nimport { invariant, InvariantError } from 'ts-invariant';\nexport { getOperationName };\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new InvariantError(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n\nexport class LinkError extends Error {\n  public link: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport function isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nexport function toPromise<R>(observable: Observable<R>): Promise<R> {\n  let completed = false;\n  return new Promise<R>((resolve, reject) => {\n    observable.subscribe({\n      next: data => {\n        if (completed) {\n          invariant.warn(\n            `Promise Wrapper does not support multiple results from Observable`,\n          );\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject,\n    });\n  });\n}\n\n// backwards compat\nexport const makePromise = toPromise;\n\nexport function fromPromise<T>(promise: Promise<T>): Observable<T> {\n  return new Observable<T>(observer => {\n    promise\n      .then((value: T) => {\n        observer.next(value);\n        observer.complete();\n      })\n      .catch(observer.error.bind(observer));\n  });\n}\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>(observer => {\n    observer.error(errorValue);\n  });\n}\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== 'string'\n        ? getOperationName(transformedOperation.query)\n        : '';\n  }\n\n  return transformedOperation as Operation;\n}\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest,\n): Operation {\n  let context = { ...starting };\n  const setContext = next => {\n    if (typeof next === 'function') {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext = () => ({ ...context });\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext,\n  });\n\n  Object.defineProperty(operation, 'toKey', {\n    enumerable: false,\n    value: () => getKey(operation),\n  });\n\n  return operation as Operation;\n}\n\nexport function getKey(operation: GraphQLRequest) {\n  // XXX We're assuming here that query and variables will be serialized in\n  // the same order, which might not always be true.\n  const { query, variables, operationName } = operation;\n  return JSON.stringify([operationName, query, variables]);\n}\n","import Observable from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport {\n  GraphQLRequest,\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n} from './types';\n\nimport {\n  validateOperation,\n  isTerminating,\n  LinkError,\n  transformOperation,\n  createOperation,\n} from './linkUtils';\n\nfunction passthrough(op, forward) {\n  return forward ? forward(op) : Observable.of();\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nexport function empty(): ApolloLink {\n  return new ApolloLink(() => Observable.of());\n}\n\nexport function from(links: ApolloLink[]): ApolloLink {\n  if (links.length === 0) return empty();\n  return links.map(toLink).reduce((x, y) => x.concat(y));\n}\n\nexport function split(\n  test: (op: Operation) => boolean,\n  left: ApolloLink | RequestHandler,\n  right?: ApolloLink | RequestHandler,\n): ApolloLink {\n  const leftLink = toLink(left);\n  const rightLink = toLink(right || new ApolloLink(passthrough));\n\n  if (isTerminating(leftLink) && isTerminating(rightLink)) {\n    return new ApolloLink(operation => {\n      return test(operation)\n        ? leftLink.request(operation) || Observable.of()\n        : rightLink.request(operation) || Observable.of();\n    });\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return test(operation)\n        ? leftLink.request(operation, forward) || Observable.of()\n        : rightLink.request(operation, forward) || Observable.of();\n    });\n  }\n}\n\n// join two Links together\nexport const concat = (\n  first: ApolloLink | RequestHandler,\n  second: ApolloLink | RequestHandler,\n) => {\n  const firstLink = toLink(first);\n  if (isTerminating(firstLink)) {\n    invariant.warn(\n      new LinkError(\n        `You are calling concat on a terminating link, which will have no effect`,\n        firstLink,\n      ),\n    );\n    return firstLink;\n  }\n  const nextLink = toLink(second);\n\n  if (isTerminating(nextLink)) {\n    return new ApolloLink(\n      operation =>\n        firstLink.request(\n          operation,\n          op => nextLink.request(op) || Observable.of(),\n        ) || Observable.of(),\n    );\n  } else {\n    return new ApolloLink((operation, forward) => {\n      return (\n        firstLink.request(operation, op => {\n          return nextLink.request(op, forward) || Observable.of();\n        }) || Observable.of()\n      );\n    });\n  }\n};\n\nexport class ApolloLink {\n  public static empty = empty;\n  public static from = from;\n  public static split = split;\n  public static execute = execute;\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new InvariantError('request is not implemented');\n  }\n}\n\nexport function execute(\n  link: ApolloLink,\n  operation: GraphQLRequest,\n): Observable<FetchResult> {\n  return (\n    link.request(\n      createOperation(\n        operation.context,\n        transformOperation(validateOperation(operation)),\n      ),\n    ) || Observable.of()\n  );\n}\n","const { toString, hasOwnProperty } = Object.prototype;\nconst previousComparisons = new Map<object, Set<object>>();\n\n/**\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\n */\nexport function equal(a: any, b: any): boolean {\n  try {\n    return check(a, b);\n  } finally {\n    previousComparisons.clear();\n  }\n}\n\n// Allow default imports as well.\nexport default equal;\n\nfunction check(a: any, b: any): boolean {\n  // If the two values are strictly equal, our job is easy.\n  if (a === b) {\n    return true;\n  }\n\n  // Object.prototype.toString returns a representation of the runtime type of\n  // the given value that is considerably more precise than typeof.\n  const aTag = toString.call(a);\n  const bTag = toString.call(b);\n\n  // If the runtime types of a and b are different, they could maybe be equal\n  // under some interpretation of equality, but for simplicity and performance\n  // we just return false instead.\n  if (aTag !== bTag) {\n    return false;\n  }\n\n  switch (aTag) {\n    case '[object Array]':\n      // Arrays are a lot like other objects, but we can cheaply compare their\n      // lengths as a short-cut before comparing their elements.\n      if (a.length !== b.length) return false;\n      // Fall through to object case...\n    case '[object Object]': {\n      if (previouslyCompared(a, b)) return true;\n\n      const aKeys = Object.keys(a);\n      const bKeys = Object.keys(b);\n\n      // If `a` and `b` have a different number of enumerable keys, they\n      // must be different.\n      const keyCount = aKeys.length;\n      if (keyCount !== bKeys.length) return false;\n\n      // Now make sure they have the same keys.\n      for (let k = 0; k < keyCount; ++k) {\n        if (!hasOwnProperty.call(b, aKeys[k])) {\n          return false;\n        }\n      }\n\n      // Finally, check deep equality of all child properties.\n      for (let k = 0; k < keyCount; ++k) {\n        const key = aKeys[k];\n        if (!check(a[key], b[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Error]':\n      return a.name === b.name && a.message === b.message;\n\n    case '[object Number]':\n      // Handle NaN, which is !== itself.\n      if (a !== a) return b !== b;\n      // Fall through to shared +a === +b case...\n    case '[object Boolean]':\n    case '[object Date]':\n      return +a === +b;\n\n    case '[object RegExp]':\n    case '[object String]':\n      return a == `${b}`;\n\n    case '[object Map]':\n    case '[object Set]': {\n      if (a.size !== b.size) return false;\n      if (previouslyCompared(a, b)) return true;\n\n      const aIterator = a.entries();\n      const isMap = aTag === '[object Map]';\n\n      while (true) {\n        const info = aIterator.next();\n        if (info.done) break;\n\n        // If a instanceof Set, aValue === aKey.\n        const [aKey, aValue] = info.value;\n\n        // So this works the same way for both Set and Map.\n        if (!b.has(aKey)) {\n          return false;\n        }\n\n        // However, we care about deep equality of values only when dealing\n        // with Map structures.\n        if (isMap && !check(aValue, b.get(aKey))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  // Otherwise the values are not equal.\n  return false;\n}\n\nfunction previouslyCompared(a: object, b: object): boolean {\n  // Though cyclic references can make an object graph appear infinite from the\n  // perspective of a depth-first traversal, the graph still contains a finite\n  // number of distinct object references. We use the previousComparisons cache\n  // to avoid comparing the same pair of object references more than once, which\n  // guarantees termination (even if we end up comparing every object in one\n  // graph to every object in the other graph, which is extremely unlikely),\n  // while still allowing weird isomorphic structures (like rings with different\n  // lengths) a chance to pass the equality test.\n  let bSet = previousComparisons.get(a);\n  if (bSet) {\n    // Return true here because we can be sure false will be returned somewhere\n    // else if the objects are not equivalent.\n    if (bSet.has(b)) return true;\n  } else {\n    previousComparisons.set(a, bSet = new Set);\n  }\n  bSet.add(b);\n  return false;\n}\n","/**\n * The current status of a query’s execution in our system.\n */\nexport enum NetworkStatus {\n  /**\n   * The query has never been run before and the query is now currently running. A query will still\n   * have this network status even if a partial data result was returned from the cache, but a\n   * query was dispatched anyway.\n   */\n  loading = 1,\n\n  /**\n   * If `setVariables` was called and a query was fired because of that then the network status\n   * will be `setVariables` until the result of that query comes back.\n   */\n  setVariables = 2,\n\n  /**\n   * Indicates that `fetchMore` was called on this query and that the query created is currently in\n   * flight.\n   */\n  fetchMore = 3,\n\n  /**\n   * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n   * and the refetch request is currently in flight.\n   */\n  refetch = 4,\n\n  /**\n   * Indicates that a polling query is currently in flight. So for example if you are polling a\n   * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n   * a poll request has been sent but not resolved.\n   */\n  poll = 6,\n\n  /**\n   * No request is in flight for this query, and no errors happened. Everything is OK.\n   */\n  ready = 7,\n\n  /**\n   * No request is in flight for this query, but one or more errors were detected.\n   */\n  error = 8,\n}\n\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(\n  networkStatus: NetworkStatus,\n): boolean {\n  return networkStatus < 7;\n}\n","// This simplified polyfill attempts to follow the ECMAScript Observable proposal.\n// See https://github.com/zenparsing/es-observable\nimport { Observable as LinkObservable } from 'apollo-link';\n\nexport type Subscription = ZenObservable.Subscription;\nexport type Observer<T> = ZenObservable.Observer<T>;\n\nimport $$observable from 'symbol-observable';\n\n// rxjs interopt\nexport class Observable<T> extends LinkObservable<T> {\n  public [$$observable]() {\n    return this;\n  }\n\n  public ['@@observable' as any]() {\n    return this;\n  }\n}\n","export function isNonEmptyArray<T>(value?: ArrayLike<T>): value is Array<T> {\n  return Array.isArray(value) && value.length > 0;\n}\n","import { GraphQLError } from 'graphql';\nimport { isNonEmptyArray } from '../util/arrays';\n\nexport function isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nconst generateErrorMessage = (err: ApolloError) => {\n  let message = '';\n  // If we have GraphQL errors present, add that to the error message.\n  if (isNonEmptyArray(err.graphQLErrors)) {\n    err.graphQLErrors.forEach((graphQLError: GraphQLError) => {\n      const errorMessage = graphQLError\n        ? graphQLError.message\n        : 'Error message not found.';\n      message += `GraphQL error: ${errorMessage}\\n`;\n    });\n  }\n\n  if (err.networkError) {\n    message += 'Network error: ' + err.networkError.message + '\\n';\n  }\n\n  // strip newline from the end of the message\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nexport class ApolloError extends Error {\n  public message: string;\n  public graphQLErrors: ReadonlyArray<GraphQLError>;\n  public networkError: Error | null;\n\n  // An object that can be used to provide some additional information\n  // about an error, e.g. specifying the type of error this is. Used\n  // internally within Apollo Client.\n  public extraInfo: any;\n\n  // Constructs an instance of ApolloError given a GraphQLError\n  // or a network error. Note that one of these has to be a valid\n  // value or the constructed error will be meaningless.\n  constructor({\n    graphQLErrors,\n    networkError,\n    errorMessage,\n    extraInfo,\n  }: {\n    graphQLErrors?: ReadonlyArray<GraphQLError>;\n    networkError?: Error | null;\n    errorMessage?: string;\n    extraInfo?: any;\n  }) {\n    super(errorMessage);\n    this.graphQLErrors = graphQLErrors || [];\n    this.networkError = networkError || null;\n\n    if (!errorMessage) {\n      this.message = generateErrorMessage(this);\n    } else {\n      this.message = errorMessage;\n    }\n\n    this.extraInfo = extraInfo;\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully\n    // supported on Android (see issue #3236).\n    (this as any).__proto__ = ApolloError.prototype;\n  }\n}\n","import { FetchResult } from 'apollo-link';\nimport { DocumentNode, GraphQLError } from 'graphql';\n\nimport { QueryStoreValue } from '../data/queries';\nimport { NetworkStatus } from './networkStatus';\nimport { Resolver } from './LocalState';\n\nexport type QueryListener = (\n  queryStoreValue: QueryStoreValue,\n  newData?: any,\n  forceResolvers?: boolean,\n) => void;\n\nexport type OperationVariables = { [key: string]: any };\n\nexport type PureQueryOptions = {\n  query: DocumentNode;\n  variables?: { [key: string]: any };\n  context?: any;\n};\n\nexport type ApolloQueryResult<T> = {\n  data: T;\n  errors?: ReadonlyArray<GraphQLError>;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  stale: boolean;\n};\n\nexport enum FetchType {\n  normal = 1,\n  refetch = 2,\n  poll = 3,\n}\n\n// This is part of the public API, people write these functions in `updateQueries`.\nexport type MutationQueryReducer<T> = (\n  previousResult: Record<string, any>,\n  options: {\n    mutationResult: FetchResult<T>;\n    queryName: string | undefined;\n    queryVariables: Record<string, any>;\n  },\n) => Record<string, any>;\n\nexport type MutationQueryReducersMap<T = { [key: string]: any }> = {\n  [queryName: string]: MutationQueryReducer<T>;\n};\n\nexport interface Resolvers {\n  [key: string]: {\n    [ field: string ]: Resolver;\n  };\n}\n","import {\n  isEqual,\n  tryFunctionOrLogError,\n  cloneDeep,\n  getOperationDefinition,\n} from 'apollo-utilities';\nimport { GraphQLError } from 'graphql';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { Observable, Observer, Subscription } from '../util/Observable';\nimport { ApolloError } from '../errors/ApolloError';\nimport { QueryManager } from './QueryManager';\nimport { ApolloQueryResult, FetchType, OperationVariables } from './types';\nimport {\n  WatchQueryOptions,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  ErrorPolicy,\n} from './watchQueryOptions';\n\nimport { QueryStoreValue } from '../data/queries';\n\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { isNonEmptyArray } from '../util/arrays';\n\n// XXX remove in the next breaking semver change (3.0)\n// Deprecated, use ApolloCurrentQueryResult\nexport type ApolloCurrentResult<T> = {\n  data: T | {};\n  errors?: ReadonlyArray<GraphQLError>;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  error?: ApolloError;\n  partial?: boolean;\n};\n\nexport type ApolloCurrentQueryResult<T> = {\n  data: T | undefined;\n  errors?: ReadonlyArray<GraphQLError>;\n  loading: boolean;\n  networkStatus: NetworkStatus;\n  error?: ApolloError;\n  partial?: boolean;\n  stale?: boolean;\n};\n\nexport interface FetchMoreOptions<\n  TData = any,\n  TVariables = OperationVariables\n> {\n  updateQuery: (\n    previousQueryResult: TData,\n    options: {\n      fetchMoreResult?: TData;\n      variables?: TVariables;\n    },\n  ) => TData;\n}\n\nexport interface UpdateQueryOptions<TVariables> {\n  variables?: TVariables;\n}\n\nexport const hasError = (\n  storeValue: QueryStoreValue,\n  policy: ErrorPolicy = 'none',\n) => storeValue && (\n  storeValue.networkError ||\n  (policy === 'none' && isNonEmptyArray(storeValue.graphQLErrors))\n);\n\nexport class ObservableQuery<\n  TData = any,\n  TVariables = OperationVariables\n> extends Observable<ApolloQueryResult<TData>> {\n  public options: WatchQueryOptions<TVariables>;\n  public readonly queryId: string;\n  public readonly queryName?: string;\n  /**\n   *\n   * The current value of the variables for this query. Can change.\n   */\n  public variables: TVariables;\n\n  private shouldSubscribe: boolean;\n  private isTornDown: boolean;\n  private queryManager: QueryManager<any>;\n  private observers = new Set<Observer<ApolloQueryResult<TData>>>();\n  private subscriptions = new Set<Subscription>();\n\n  private lastResult: ApolloQueryResult<TData>;\n  private lastResultSnapshot: ApolloQueryResult<TData>;\n  private lastError: ApolloError;\n\n  constructor({\n    queryManager,\n    options,\n    shouldSubscribe = true,\n  }: {\n    queryManager: QueryManager<any>;\n    options: WatchQueryOptions<TVariables>;\n    shouldSubscribe?: boolean;\n  }) {\n    super((observer: Observer<ApolloQueryResult<TData>>) =>\n      this.onSubscribe(observer),\n    );\n\n    // active state\n    this.isTornDown = false;\n\n    // query information\n    this.options = options;\n    this.variables = options.variables || ({} as TVariables);\n    this.queryId = queryManager.generateQueryId();\n    this.shouldSubscribe = shouldSubscribe;\n\n    const opDef = getOperationDefinition(options.query);\n    this.queryName = opDef && opDef.name && opDef.name.value;\n\n    // related classes\n    this.queryManager = queryManager;\n  }\n\n  public result(): Promise<ApolloQueryResult<TData>> {\n    return new Promise((resolve, reject) => {\n      const observer: Observer<ApolloQueryResult<TData>> = {\n        next: (result: ApolloQueryResult<TData>) => {\n          resolve(result);\n\n          // Stop the query within the QueryManager if we can before\n          // this function returns.\n          //\n          // We do this in order to prevent observers piling up within\n          // the QueryManager. Notice that we only fully unsubscribe\n          // from the subscription in a setTimeout(..., 0)  call. This call can\n          // actually be handled by the browser at a much later time. If queries\n          // are fired in the meantime, observers that should have been removed\n          // from the QueryManager will continue to fire, causing an unnecessary\n          // performance hit.\n          this.observers.delete(observer);\n          if (!this.observers.size) {\n            this.queryManager.removeQuery(this.queryId);\n          }\n\n          setTimeout(() => {\n            subscription.unsubscribe();\n          }, 0);\n        },\n        error: reject,\n      };\n      const subscription = this.subscribe(observer);\n    });\n  }\n\n  // XXX remove in the next breaking semver change (3.0)\n  // Deprecated, use getCurrentResult()\n  public currentResult(): ApolloCurrentResult<TData> {\n    const result = this.getCurrentResult() as ApolloCurrentResult<TData>;\n    if (result.data === undefined) {\n      result.data = {};\n    }\n    return result;\n  }\n\n  /**\n   * Return the result of the query from the local cache as well as some fetching status\n   * `loading` and `networkStatus` allow to know if a request is in flight\n   * `partial` lets you know if the result from the local cache is complete or partial\n   * @return {data: Object, error: ApolloError, loading: boolean, networkStatus: number, partial: boolean}\n   */\n  public getCurrentResult(): ApolloCurrentQueryResult<TData> {\n    if (this.isTornDown) {\n      const { lastResult } = this;\n      return {\n        data: !this.lastError && lastResult && lastResult.data || void 0,\n        error: this.lastError,\n        loading: false,\n        networkStatus: NetworkStatus.error,\n      };\n    }\n\n    const { data, partial } = this.queryManager.getCurrentQueryResult(this);\n    const queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n    let result: ApolloQueryResult<TData>;\n\n    const { fetchPolicy } = this.options;\n\n    const isNetworkFetchPolicy =\n      fetchPolicy === 'network-only' ||\n      fetchPolicy === 'no-cache';\n\n    if (queryStoreValue) {\n      const { networkStatus } = queryStoreValue;\n\n      if (hasError(queryStoreValue, this.options.errorPolicy)) {\n        return {\n          data: void 0,\n          loading: false,\n          networkStatus,\n          error: new ApolloError({\n            graphQLErrors: queryStoreValue.graphQLErrors,\n            networkError: queryStoreValue.networkError,\n          }),\n        };\n      }\n\n      // Variables might have been added dynamically at query time, when\n      // using `@client @export(as: \"varname\")` for example. When this happens,\n      // the variables have been updated in the query store, but not updated on\n      // the original `ObservableQuery`. We'll update the observable query\n      // variables here to match, so retrieving from the cache doesn't fail.\n      if (queryStoreValue.variables) {\n        this.options.variables = {\n          ...this.options.variables,\n          ...(queryStoreValue.variables as TVariables),\n        };\n        this.variables = this.options.variables;\n      }\n\n      result = {\n        data,\n        loading: isNetworkRequestInFlight(networkStatus),\n        networkStatus,\n      } as ApolloQueryResult<TData>;\n\n      if (queryStoreValue.graphQLErrors && this.options.errorPolicy === 'all') {\n        result.errors = queryStoreValue.graphQLErrors;\n      }\n\n    } else {\n      // We need to be careful about the loading state we show to the user, to try\n      // and be vaguely in line with what the user would have seen from .subscribe()\n      // but to still provide useful information synchronously when the query\n      // will not end up hitting the server.\n      // See more: https://github.com/apollostack/apollo-client/issues/707\n      // Basically: is there a query in flight right now (modolo the next tick)?\n      const loading = isNetworkFetchPolicy ||\n        (partial && fetchPolicy !== 'cache-only');\n\n      result = {\n        data,\n        loading,\n        networkStatus: loading ? NetworkStatus.loading : NetworkStatus.ready,\n      } as ApolloQueryResult<TData>;\n    }\n\n    if (!partial) {\n      this.updateLastResult({ ...result, stale: false });\n    }\n\n    return { ...result, partial };\n  }\n\n  // Compares newResult to the snapshot we took of this.lastResult when it was\n  // first received.\n  public isDifferentFromLastResult(newResult: ApolloQueryResult<TData>) {\n    const { lastResultSnapshot: snapshot } = this;\n    return !(\n      snapshot &&\n      newResult &&\n      snapshot.networkStatus === newResult.networkStatus &&\n      snapshot.stale === newResult.stale &&\n      isEqual(snapshot.data, newResult.data)\n    );\n  }\n\n  // Returns the last result that observer.next was called with. This is not the same as\n  // getCurrentResult! If you're not sure which you need, then you probably need getCurrentResult.\n  public getLastResult(): ApolloQueryResult<TData> {\n    return this.lastResult;\n  }\n\n  public getLastError(): ApolloError {\n    return this.lastError;\n  }\n\n  public resetLastResults(): void {\n    delete this.lastResult;\n    delete this.lastResultSnapshot;\n    delete this.lastError;\n    this.isTornDown = false;\n  }\n\n  public resetQueryStoreErrors() {\n    const queryStore = this.queryManager.queryStore.get(this.queryId);\n    if (queryStore) {\n      queryStore.networkError = null;\n      queryStore.graphQLErrors = [];\n    }\n  }\n\n  /**\n   * Update the variables of this observable query, and fetch the new results.\n   * This method should be preferred over `setVariables` in most use cases.\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public refetch(variables?: TVariables): Promise<ApolloQueryResult<TData>> {\n    let { fetchPolicy } = this.options;\n    // early return if trying to read from cache during refetch\n    if (fetchPolicy === 'cache-only') {\n      return Promise.reject(new InvariantError(\n        'cache-only fetchPolicy option should not be used together with query refetch.',\n      ));\n    }\n\n    // Unless the provided fetchPolicy always consults the network\n    // (no-cache, network-only, or cache-and-network), override it with\n    // network-only to force the refetch for this fetchQuery call.\n    if (fetchPolicy !== 'no-cache' &&\n        fetchPolicy !== 'cache-and-network') {\n      fetchPolicy = 'network-only';\n    }\n\n    if (!isEqual(this.variables, variables)) {\n      // update observable variables\n      this.variables = {\n        ...this.variables,\n        ...variables,\n      };\n    }\n\n    if (!isEqual(this.options.variables, this.variables)) {\n      // Update the existing options with new variables\n      this.options.variables = {\n        ...this.options.variables,\n        ...this.variables,\n      };\n    }\n\n    return this.queryManager.fetchQuery(\n      this.queryId,\n      { ...this.options, fetchPolicy },\n      FetchType.refetch,\n    ) as Promise<ApolloQueryResult<TData>>;\n  }\n\n  public fetchMore<K extends keyof TVariables>(\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, K> &\n      FetchMoreOptions<TData, TVariables>,\n  ): Promise<ApolloQueryResult<TData>> {\n    // early return if no update Query\n    invariant(\n      fetchMoreOptions.updateQuery,\n      'updateQuery option is required. This function defines how to update the query data with the new results.',\n    );\n\n    const combinedOptions = {\n      ...(fetchMoreOptions.query ? fetchMoreOptions : {\n        ...this.options,\n        ...fetchMoreOptions,\n        variables: {\n          ...this.variables,\n          ...fetchMoreOptions.variables,\n        },\n      }),\n      fetchPolicy: 'network-only',\n    } as WatchQueryOptions;\n\n    const qid = this.queryManager.generateQueryId();\n\n    return this.queryManager\n      .fetchQuery(\n        qid,\n        combinedOptions,\n        FetchType.normal,\n        this.queryId,\n      )\n      .then(\n        fetchMoreResult => {\n          this.updateQuery((previousResult: any) =>\n            fetchMoreOptions.updateQuery(previousResult, {\n              fetchMoreResult: fetchMoreResult.data as TData,\n              variables: combinedOptions.variables as TVariables,\n            }),\n          );\n          this.queryManager.stopQuery(qid);\n          return fetchMoreResult as ApolloQueryResult<TData>;\n        },\n        error => {\n          this.queryManager.stopQuery(qid);\n          throw error;\n        },\n      );\n  }\n\n  // XXX the subscription variables are separate from the query variables.\n  // if you want to update subscription variables, right now you have to do that separately,\n  // and you can only do it by stopping the subscription and then subscribing again with new variables.\n  public subscribeToMore<\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >,\n  ) {\n    const subscription = this.queryManager\n      .startGraphQLSubscription({\n        query: options.document,\n        variables: options.variables,\n      })\n      .subscribe({\n        next: (subscriptionData: { data: TSubscriptionData }) => {\n          const { updateQuery } = options;\n          if (updateQuery) {\n            this.updateQuery<TSubscriptionVariables>(\n              (previous, { variables }) =>\n                updateQuery(previous, {\n                  subscriptionData,\n                  variables,\n                }),\n            );\n          }\n        },\n        error: (err: any) => {\n          if (options.onError) {\n            options.onError(err);\n            return;\n          }\n          invariant.error('Unhandled GraphQL subscription error', err);\n        },\n      });\n\n    this.subscriptions.add(subscription);\n\n    return () => {\n      if (this.subscriptions.delete(subscription)) {\n        subscription.unsubscribe();\n      }\n    };\n  }\n\n  // Note: if the query is not active (there are no subscribers), the promise\n  // will return null immediately.\n  public setOptions(\n    opts: WatchQueryOptions,\n  ): Promise<ApolloQueryResult<TData> | void> {\n    const { fetchPolicy: oldFetchPolicy } = this.options;\n    this.options = {\n      ...this.options,\n      ...opts,\n    } as WatchQueryOptions<TVariables>;\n\n    if (opts.pollInterval) {\n      this.startPolling(opts.pollInterval);\n    } else if (opts.pollInterval === 0) {\n      this.stopPolling();\n    }\n\n    const { fetchPolicy } = opts;\n\n    return this.setVariables(\n      this.options.variables as TVariables,\n      // Try to fetch the query if fetchPolicy changed from either cache-only\n      // or standby to something else, or changed to network-only.\n      oldFetchPolicy !== fetchPolicy && (\n        oldFetchPolicy === 'cache-only' ||\n        oldFetchPolicy === 'standby' ||\n        fetchPolicy === 'network-only'\n      ),\n      opts.fetchResults,\n    );\n  }\n\n  /**\n   * This is for *internal* use only. Most users should instead use `refetch`\n   * in order to be properly notified of results even when they come from cache.\n   *\n   * Update the variables of this observable query, and fetch the new results\n   * if they've changed. If you want to force new results, use `refetch`.\n   *\n   * Note: the `next` callback will *not* fire if the variables have not changed\n   * or if the result is coming from cache.\n   *\n   * Note: the promise will return the old results immediately if the variables\n   * have not changed.\n   *\n   * Note: the promise will return null immediately if the query is not active\n   * (there are no subscribers).\n   *\n   * @private\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   *\n   * @param tryFetch: Try and fetch new results even if the variables haven't\n   * changed (we may still just hit the store, but if there's nothing in there\n   * this will refetch)\n   *\n   * @param fetchResults: Option to ignore fetching results when updating variables\n   */\n  public setVariables(\n    variables: TVariables,\n    tryFetch: boolean = false,\n    fetchResults = true,\n  ): Promise<ApolloQueryResult<TData> | void> {\n    // since setVariables restarts the subscription, we reset the tornDown status\n    this.isTornDown = false;\n\n    variables = variables || this.variables;\n\n    if (!tryFetch && isEqual(variables, this.variables)) {\n      // If we have no observers, then we don't actually want to make a network\n      // request. As soon as someone observes the query, the request will kick\n      // off. For now, we just store any changes. (See #1077)\n      return this.observers.size && fetchResults\n        ? this.result()\n        : Promise.resolve();\n    }\n\n    this.variables = this.options.variables = variables;\n\n    // See comment above\n    if (!this.observers.size) {\n      return Promise.resolve();\n    }\n\n    // Use the same options as before, but with new variables\n    return this.queryManager.fetchQuery(\n      this.queryId,\n      this.options,\n    ) as Promise<ApolloQueryResult<TData>>;\n  }\n\n  public updateQuery<TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>,\n    ) => TData,\n  ): void {\n    const { queryManager } = this;\n    const {\n      previousResult,\n      variables,\n      document,\n    } = queryManager.getQueryWithPreviousResult<TData, TVars>(\n      this.queryId,\n    );\n\n    const newResult = tryFunctionOrLogError(() =>\n      mapFn(previousResult, { variables }),\n    );\n\n    if (newResult) {\n      queryManager.dataStore.markUpdateQueryResult(\n        document,\n        variables,\n        newResult,\n      );\n      queryManager.broadcastQueries();\n    }\n  }\n\n  public stopPolling() {\n    this.queryManager.stopPollingQuery(this.queryId);\n    this.options.pollInterval = undefined;\n  }\n\n  public startPolling(pollInterval: number) {\n    assertNotCacheFirstOrOnly(this);\n    this.options.pollInterval = pollInterval;\n    this.queryManager.startPollingQuery(this.options, this.queryId);\n  }\n\n  private updateLastResult(newResult: ApolloQueryResult<TData>) {\n    const previousResult = this.lastResult;\n    this.lastResult = newResult;\n    this.lastResultSnapshot = this.queryManager.assumeImmutableResults\n      ? newResult\n      : cloneDeep(newResult);\n    return previousResult;\n  }\n\n  private onSubscribe(observer: Observer<ApolloQueryResult<TData>>) {\n    // Zen Observable has its own error function, so in order to log correctly\n    // we need to provide a custom error callback.\n    try {\n      var subObserver = (observer as any)._subscription._observer;\n      if (subObserver && !subObserver.error) {\n        subObserver.error = defaultSubscriptionObserverErrorCallback;\n      }\n    } catch {}\n\n    const first = !this.observers.size;\n    this.observers.add(observer);\n\n    // Deliver initial result\n    if (observer.next && this.lastResult) observer.next(this.lastResult);\n    if (observer.error && this.lastError) observer.error(this.lastError);\n\n    // setup the query if it hasn't been done before\n    if (first) {\n      this.setUpQuery();\n    }\n\n    return () => {\n      if (this.observers.delete(observer) && !this.observers.size) {\n        this.tearDownQuery();\n      }\n    };\n  }\n\n  private setUpQuery() {\n    const { queryManager, queryId } = this;\n\n    if (this.shouldSubscribe) {\n      queryManager.addObservableQuery<TData>(queryId, this);\n    }\n\n    if (this.options.pollInterval) {\n      assertNotCacheFirstOrOnly(this);\n      queryManager.startPollingQuery(this.options, queryId);\n    }\n\n    const onError = (error: ApolloError) => {\n      // Since we don't get the current result on errors, only the error, we\n      // must mirror the updates that occur in QueryStore.markQueryError here\n      this.updateLastResult({\n        ...this.lastResult,\n        errors: error.graphQLErrors,\n        networkStatus: NetworkStatus.error,\n        loading: false,\n      });\n      iterateObserversSafely(this.observers, 'error', this.lastError = error);\n    };\n\n    queryManager.observeQuery<TData>(queryId, this.options, {\n      next: (result: ApolloQueryResult<TData>) => {\n        if (this.lastError || this.isDifferentFromLastResult(result)) {\n          const previousResult = this.updateLastResult(result);\n          const { query, variables, fetchPolicy } = this.options;\n\n          // Before calling `next` on each observer, we need to first see if\n          // the query is using `@client @export` directives, and update\n          // any variables that might have changed. If `@export` variables have\n          // changed, and the query is calling against both local and remote\n          // data, a refetch is needed to pull in new data, using the\n          // updated `@export` variables.\n          if (queryManager.transform(query).hasClientExports) {\n            queryManager.getLocalState().addExportedVariables(\n              query,\n              variables,\n            ).then((variables: TVariables) => {\n              const previousVariables = this.variables;\n              this.variables = this.options.variables = variables;\n              if (\n                !result.loading &&\n                previousResult &&\n                fetchPolicy !== 'cache-only' &&\n                queryManager.transform(query).serverQuery &&\n                !isEqual(previousVariables, variables)\n              ) {\n                this.refetch();\n              } else {\n                iterateObserversSafely(this.observers, 'next', result);\n              }\n            });\n          } else {\n            iterateObserversSafely(this.observers, 'next', result);\n          }\n        }\n      },\n      error: onError,\n    }).catch(onError);\n  }\n\n  private tearDownQuery() {\n    const { queryManager } = this;\n\n    this.isTornDown = true;\n    queryManager.stopPollingQuery(this.queryId);\n\n    // stop all active GraphQL subscriptions\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.subscriptions.clear();\n\n    queryManager.removeObservableQuery(this.queryId);\n    queryManager.stopQuery(this.queryId);\n\n    this.observers.clear();\n  }\n}\n\nfunction defaultSubscriptionObserverErrorCallback(error: ApolloError) {\n  invariant.error('Unhandled error', error.message, error.stack);\n}\n\nfunction iterateObserversSafely<E, A>(\n  observers: Set<Observer<E>>,\n  method: keyof Observer<E>,\n  argument?: A,\n) {\n  // In case observers is modified during iteration, we need to commit to the\n  // original elements, which also provides an opportunity to filter them down\n  // to just the observers with the given method.\n  const observersWithMethod: Observer<E>[] = [];\n  observers.forEach(obs => obs[method] && observersWithMethod.push(obs));\n  observersWithMethod.forEach(obs => (obs as any)[method](argument));\n}\n\nfunction assertNotCacheFirstOrOnly<TData, TVariables>(\n  obsQuery: ObservableQuery<TData, TVariables>,\n) {\n  const { fetchPolicy } = obsQuery.options;\n  invariant(\n    fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only',\n    'Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.',\n  );\n}\n","import { DocumentNode } from 'graphql';\n\nexport class MutationStore {\n  private store: { [mutationId: string]: MutationStoreValue } = {};\n\n  public getStore(): { [mutationId: string]: MutationStoreValue } {\n    return this.store;\n  }\n\n  public get(mutationId: string): MutationStoreValue {\n    return this.store[mutationId];\n  }\n\n  public initMutation(\n    mutationId: string,\n    mutation: DocumentNode,\n    variables: Object | undefined,\n  ) {\n    this.store[mutationId] = {\n      mutation,\n      variables: variables || {},\n      loading: true,\n      error: null,\n    };\n  }\n\n  public markMutationError(mutationId: string, error: Error) {\n    const mutation = this.store[mutationId];\n    if (mutation) {\n      mutation.loading = false;\n      mutation.error = error;\n    }\n  }\n\n  public markMutationResult(mutationId: string) {\n    const mutation = this.store[mutationId];\n    if (mutation) {\n      mutation.loading = false;\n      mutation.error = null;\n    }\n  }\n\n  public reset() {\n    this.store = {};\n  }\n}\n\nexport interface MutationStoreValue {\n  mutation: DocumentNode;\n  variables: Object;\n  loading: boolean;\n  error: Error | null;\n}\n","import { DocumentNode, GraphQLError, ExecutionResult } from 'graphql';\nimport { isEqual } from 'apollo-utilities';\nimport { invariant } from 'ts-invariant';\nimport { NetworkStatus } from '../core/networkStatus';\nimport { isNonEmptyArray } from '../util/arrays';\n\nexport type QueryStoreValue = {\n  document: DocumentNode;\n  variables: Object;\n  previousVariables?: Object | null;\n  networkStatus: NetworkStatus;\n  networkError?: Error | null;\n  graphQLErrors?: ReadonlyArray<GraphQLError>;\n  metadata: any;\n};\n\nexport class QueryStore {\n  private store: { [queryId: string]: QueryStoreValue } = {};\n\n  public getStore(): { [queryId: string]: QueryStoreValue } {\n    return this.store;\n  }\n\n  public get(queryId: string): QueryStoreValue {\n    return this.store[queryId];\n  }\n\n  public initQuery(query: {\n    queryId: string;\n    document: DocumentNode;\n    storePreviousVariables: boolean;\n    variables: Object;\n    isPoll: boolean;\n    isRefetch: boolean;\n    metadata: any;\n    fetchMoreForQueryId: string | undefined;\n  }) {\n    const previousQuery = this.store[query.queryId];\n\n    // XXX we're throwing an error here to catch bugs where a query gets overwritten by a new one.\n    // we should implement a separate action for refetching so that QUERY_INIT may never overwrite\n    // an existing query (see also: https://github.com/apollostack/apollo-client/issues/732)\n    invariant(\n      !previousQuery ||\n      previousQuery.document === query.document ||\n      isEqual(previousQuery.document, query.document),\n      'Internal Error: may not update existing query string in store',\n    );\n\n    let isSetVariables = false;\n\n    let previousVariables: Object | null = null;\n    if (\n      query.storePreviousVariables &&\n      previousQuery &&\n      previousQuery.networkStatus !== NetworkStatus.loading\n      // if the previous query was still loading, we don't want to remember it at all.\n    ) {\n      if (!isEqual(previousQuery.variables, query.variables)) {\n        isSetVariables = true;\n        previousVariables = previousQuery.variables;\n      }\n    }\n\n    // TODO break this out into a separate function\n    let networkStatus;\n    if (isSetVariables) {\n      networkStatus = NetworkStatus.setVariables;\n    } else if (query.isPoll) {\n      networkStatus = NetworkStatus.poll;\n    } else if (query.isRefetch) {\n      networkStatus = NetworkStatus.refetch;\n      // TODO: can we determine setVariables here if it's a refetch and the variables have changed?\n    } else {\n      networkStatus = NetworkStatus.loading;\n    }\n\n    let graphQLErrors: ReadonlyArray<GraphQLError> = [];\n    if (previousQuery && previousQuery.graphQLErrors) {\n      graphQLErrors = previousQuery.graphQLErrors;\n    }\n\n    // XXX right now if QUERY_INIT is fired twice, like in a refetch situation, we just overwrite\n    // the store. We probably want a refetch action instead, because I suspect that if you refetch\n    // before the initial fetch is done, you'll get an error.\n    this.store[query.queryId] = {\n      document: query.document,\n      variables: query.variables,\n      previousVariables,\n      networkError: null,\n      graphQLErrors: graphQLErrors,\n      networkStatus,\n      metadata: query.metadata,\n    };\n\n    // If the action had a `moreForQueryId` property then we need to set the\n    // network status on that query as well to `fetchMore`.\n    //\n    // We have a complement to this if statement in the query result and query\n    // error action branch, but importantly *not* in the client result branch.\n    // This is because the implementation of `fetchMore` *always* sets\n    // `fetchPolicy` to `network-only` so we would never have a client result.\n    if (\n      typeof query.fetchMoreForQueryId === 'string' &&\n      this.store[query.fetchMoreForQueryId]\n    ) {\n      this.store[query.fetchMoreForQueryId].networkStatus =\n        NetworkStatus.fetchMore;\n    }\n  }\n\n  public markQueryResult(\n    queryId: string,\n    result: ExecutionResult,\n    fetchMoreForQueryId: string | undefined,\n  ) {\n    if (!this.store || !this.store[queryId]) return;\n\n    this.store[queryId].networkError = null;\n    this.store[queryId].graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n    this.store[queryId].previousVariables = null;\n    this.store[queryId].networkStatus = NetworkStatus.ready;\n\n    // If we have a `fetchMoreForQueryId` then we need to update the network\n    // status for that query. See the branch for query initialization for more\n    // explanation about this process.\n    if (\n      typeof fetchMoreForQueryId === 'string' &&\n      this.store[fetchMoreForQueryId]\n    ) {\n      this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n    }\n  }\n\n  public markQueryError(\n    queryId: string,\n    error: Error,\n    fetchMoreForQueryId: string | undefined,\n  ) {\n    if (!this.store || !this.store[queryId]) return;\n\n    this.store[queryId].networkError = error;\n    this.store[queryId].networkStatus = NetworkStatus.error;\n\n    // If we have a `fetchMoreForQueryId` then we need to update the network\n    // status for that query. See the branch for query initialization for more\n    // explanation about this process.\n    if (typeof fetchMoreForQueryId === 'string') {\n      this.markQueryResultClient(fetchMoreForQueryId, true);\n    }\n  }\n\n  public markQueryResultClient(queryId: string, complete: boolean) {\n    const storeValue = this.store && this.store[queryId];\n    if (storeValue) {\n      storeValue.networkError = null;\n      storeValue.previousVariables = null;\n      if (complete) {\n        storeValue.networkStatus = NetworkStatus.ready;\n      }\n    }\n  }\n\n  public stopQuery(queryId: string) {\n    delete this.store[queryId];\n  }\n\n  public reset(observableQueryIds: string[]) {\n    Object.keys(this.store).forEach(queryId => {\n      if (observableQueryIds.indexOf(queryId) < 0) {\n        this.stopQuery(queryId);\n      } else {\n        // XXX set loading to true so listeners don't trigger unless they want results with partial data\n        this.store[queryId].networkStatus = NetworkStatus.loading;\n      }\n    });\n  }\n}\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  SelectionNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  FieldNode,\n  ASTNode,\n} from 'graphql';\nimport { visit, BREAK } from 'graphql/language/visitor';\n\nimport { ApolloCache } from 'apollo-cache';\nimport {\n  getMainDefinition,\n  buildQueryFromSelectionSet,\n  hasDirectives,\n  removeClientSetsFromDocument,\n  mergeDeep,\n  mergeDeepArray,\n  FragmentMap,\n  argumentsObjectFromField,\n  resultKeyNameFromField,\n  getFragmentDefinitions,\n  createFragmentMap,\n  shouldInclude,\n  isField,\n  isInlineFragment,\n} from 'apollo-utilities';\nimport { FetchResult } from 'apollo-link';\n\nimport { invariant } from 'ts-invariant';\n\nimport ApolloClient from '../ApolloClient';\nimport { Resolvers, OperationVariables } from './types';\nimport { capitalizeFirstLetter } from '../util/capitalizeFirstLetter';\n\nexport type Resolver = (\n  rootValue?: any,\n  args?: any,\n  context?: any,\n  info?: {\n    field: FieldNode;\n    fragmentMap: FragmentMap;\n  },\n) => any;\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: any,\n) => boolean;\n\nexport type ExecContext = {\n  fragmentMap: FragmentMap;\n  context: any;\n  variables: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n  defaultOperationType: string;\n  exportedVariables: Record<string, any>;\n  onlyRunForcedResolvers: boolean;\n};\n\nexport type LocalStateOptions<TCacheShape> = {\n  cache: ApolloCache<TCacheShape>;\n  client?: ApolloClient<TCacheShape>;\n  resolvers?: Resolvers | Resolvers[];\n  fragmentMatcher?: FragmentMatcher;\n};\n\nexport class LocalState<TCacheShape> {\n  private cache: ApolloCache<TCacheShape>;\n  private client: ApolloClient<TCacheShape>;\n  private resolvers?: Resolvers;\n  private fragmentMatcher: FragmentMatcher;\n\n  constructor({\n    cache,\n    client,\n    resolvers,\n    fragmentMatcher,\n  }: LocalStateOptions<TCacheShape>) {\n    this.cache = cache;\n\n    if (client) {\n      this.client = client;\n    }\n\n    if (resolvers) {\n      this.addResolvers(resolvers);\n    }\n\n    if (fragmentMatcher) {\n      this.setFragmentMatcher(fragmentMatcher);\n    }\n  }\n\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = this.resolvers || {};\n    if (Array.isArray(resolvers)) {\n      resolvers.forEach(resolverGroup => {\n        this.resolvers = mergeDeep(this.resolvers, resolverGroup);\n      });\n    } else {\n      this.resolvers = mergeDeep(this.resolvers, resolvers);\n    }\n  }\n\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = {};\n    this.addResolvers(resolvers);\n  }\n\n  public getResolvers() {\n    return this.resolvers || {};\n  }\n\n  // Run local client resolvers against the incoming query and remote data.\n  // Locally resolved field values are merged with the incoming remote data,\n  // and returned. Note that locally resolved fields will overwrite\n  // remote data using the same field name.\n  public async runResolvers<TData>({\n    document,\n    remoteResult,\n    context,\n    variables,\n    onlyRunForcedResolvers = false,\n  }: {\n    document: DocumentNode | null;\n    remoteResult: FetchResult<TData>;\n    context?: Record<string, any>;\n    variables?: Record<string, any>;\n    onlyRunForcedResolvers?: boolean;\n  }): Promise<FetchResult<TData>> {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        remoteResult.data,\n        context,\n        variables,\n        this.fragmentMatcher,\n        onlyRunForcedResolvers,\n      ).then(localResult => ({\n        ...remoteResult,\n        data: localResult.result,\n      }));\n    }\n\n    return remoteResult;\n  }\n\n  public setFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.fragmentMatcher = fragmentMatcher;\n  }\n\n  public getFragmentMatcher(): FragmentMatcher {\n    return this.fragmentMatcher;\n  }\n\n  // Client queries contain everything in the incoming document (if a @client\n  // directive is found).\n  public clientQuery(document: DocumentNode) {\n    if (hasDirectives(['client'], document)) {\n      if (this.resolvers) {\n        return document;\n      }\n      invariant.warn(\n        'Found @client directives in a query but no ApolloClient resolvers ' +\n        'were specified. This means ApolloClient local resolver handling ' +\n        'has been disabled, and @client directives will be passed through ' +\n        'to your link chain.',\n      );\n    }\n    return null;\n  }\n\n  // Server queries are stripped of all @client based selection sets.\n  public serverQuery(document: DocumentNode) {\n    return this.resolvers ? removeClientSetsFromDocument(document) : document;\n  }\n\n  public prepareContext(context = {}) {\n    const { cache } = this;\n\n    const newContext = {\n      ...context,\n      cache,\n      // Getting an entry's cache key is useful for local state resolvers.\n      getCacheKey: (obj: { __typename: string; id: string | number }) => {\n        if ((cache as any).config) {\n          return (cache as any).config.dataIdFromObject(obj);\n        } else {\n          invariant(false,\n            'To use context.getCacheKey, you need to use a cache that has ' +\n              'a configurable dataIdFromObject, like apollo-cache-inmemory.',\n          );\n        }\n      },\n    };\n\n    return newContext;\n  }\n\n  // To support `@client @export(as: \"someVar\")` syntax, we'll first resolve\n  // @client @export fields locally, then pass the resolved values back to be\n  // used alongside the original operation variables.\n  public async addExportedVariables(\n    document: DocumentNode,\n    variables: OperationVariables = {},\n    context = {},\n  ) {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        this.buildRootValueFromCache(document, variables) || {},\n        this.prepareContext(context),\n        variables,\n      ).then(data => ({\n        ...variables,\n        ...data.exportedVariables,\n      }));\n    }\n\n    return {\n      ...variables,\n    };\n  }\n\n  public shouldForceResolvers(document: ASTNode) {\n    let forceResolvers = false;\n    visit(document, {\n      Directive: {\n        enter(node) {\n          if (node.name.value === 'client' && node.arguments) {\n            forceResolvers = node.arguments.some(\n              arg =>\n                arg.name.value === 'always' &&\n                arg.value.kind === 'BooleanValue' &&\n                arg.value.value === true,\n            );\n            if (forceResolvers) {\n              return BREAK;\n            }\n          }\n        },\n      },\n    });\n    return forceResolvers;\n  }\n\n  // Query the cache and return matching data.\n  private buildRootValueFromCache(\n    document: DocumentNode,\n    variables?: Record<string, any>,\n  ) {\n    return this.cache.diff({\n      query: buildQueryFromSelectionSet(document),\n      variables,\n      returnPartialData: true,\n      optimistic: false,\n    }).result;\n  }\n\n  private async resolveDocument<TData>(\n    document: DocumentNode,\n    rootValue: TData,\n    context: any = {},\n    variables: VariableMap = {},\n    fragmentMatcher: FragmentMatcher = () => true,\n    onlyRunForcedResolvers: boolean = false,\n  ) {\n    const mainDefinition = getMainDefinition(document);\n    const fragments = getFragmentDefinitions(document);\n    const fragmentMap = createFragmentMap(fragments);\n\n    const definitionOperation = (mainDefinition as OperationDefinitionNode)\n      .operation;\n\n    const defaultOperationType = definitionOperation\n      ? capitalizeFirstLetter(definitionOperation)\n      : 'Query';\n\n    const { cache, client } = this;\n    const execContext: ExecContext = {\n      fragmentMap,\n      context: {\n        ...context,\n        cache,\n        client,\n      },\n      variables,\n      fragmentMatcher,\n      defaultOperationType,\n      exportedVariables: {},\n      onlyRunForcedResolvers,\n    };\n\n    return this.resolveSelectionSet(\n      mainDefinition.selectionSet,\n      rootValue,\n      execContext,\n    ).then(result => ({\n      result,\n      exportedVariables: execContext.exportedVariables,\n    }));\n  }\n\n  private async resolveSelectionSet<TData>(\n    selectionSet: SelectionSetNode,\n    rootValue: TData,\n    execContext: ExecContext,\n  ) {\n    const { fragmentMap, context, variables } = execContext;\n    const resultsToMerge: TData[] = [rootValue];\n\n    const execute = async (selection: SelectionNode): Promise<void> => {\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely.\n        return;\n      }\n\n      if (isField(selection)) {\n        return this.resolveField(selection, rootValue, execContext).then(\n          fieldResult => {\n            if (typeof fieldResult !== 'undefined') {\n              resultsToMerge.push({\n                [resultKeyNameFromField(selection)]: fieldResult,\n              } as TData);\n            }\n          },\n        );\n      }\n\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // This is a named fragment.\n        fragment = fragmentMap[selection.name.value];\n        invariant(fragment, `No fragment named ${selection.name.value}`);\n      }\n\n      if (fragment && fragment.typeCondition) {\n        const typeCondition = fragment.typeCondition.name.value;\n        if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n          return this.resolveSelectionSet(\n            fragment.selectionSet,\n            rootValue,\n            execContext,\n          ).then(fragmentResult => {\n            resultsToMerge.push(fragmentResult);\n          });\n        }\n      }\n    };\n\n    return Promise.all(selectionSet.selections.map(execute)).then(function() {\n      return mergeDeepArray(resultsToMerge);\n    });\n  }\n\n  private async resolveField(\n    field: FieldNode,\n    rootValue: any,\n    execContext: ExecContext,\n  ): Promise<any> {\n    const { variables } = execContext;\n    const fieldName = field.name.value;\n    const aliasedFieldName = resultKeyNameFromField(field);\n    const aliasUsed = fieldName !== aliasedFieldName;\n    const defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n    let resultPromise = Promise.resolve(defaultResult);\n\n    // Usually all local resolvers are run when passing through here, but\n    // if we've specifically identified that we only want to run forced\n    // resolvers (that is, resolvers for fields marked with\n    // `@client(always: true)`), then we'll skip running non-forced resolvers.\n    if (\n      !execContext.onlyRunForcedResolvers ||\n      this.shouldForceResolvers(field)\n    ) {\n      const resolverType =\n        rootValue.__typename || execContext.defaultOperationType;\n      const resolverMap = this.resolvers && this.resolvers[resolverType];\n      if (resolverMap) {\n        const resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n        if (resolve) {\n          resultPromise = Promise.resolve(resolve(\n            rootValue,\n            argumentsObjectFromField(field, variables),\n            execContext.context,\n            { field, fragmentMap: execContext.fragmentMap },\n          ));\n        }\n      }\n    }\n\n    return resultPromise.then((result = defaultResult) => {\n      // If an @export directive is associated with the current field, store\n      // the `as` export variable name and current result for later use.\n      if (field.directives) {\n        field.directives.forEach(directive => {\n          if (directive.name.value === 'export' && directive.arguments) {\n            directive.arguments.forEach(arg => {\n              if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                execContext.exportedVariables[arg.value.value] = result;\n              }\n            });\n          }\n        });\n      }\n\n      // Handle all scalar types here.\n      if (!field.selectionSet) {\n        return result;\n      }\n\n      // From here down, the field has a selection set, which means it's trying\n      // to query a GraphQLObjectType.\n      if (result == null) {\n        // Basically any field in a GraphQL response can be null, or missing\n        return result;\n      }\n\n      if (Array.isArray(result)) {\n        return this.resolveSubSelectedArray(field, result, execContext);\n      }\n\n      // Returned value is an object, and the query has a sub-selection. Recurse.\n      if (field.selectionSet) {\n        return this.resolveSelectionSet(\n          field.selectionSet,\n          result,\n          execContext,\n        );\n      }\n    });\n  }\n\n  private resolveSubSelectedArray(\n    field: FieldNode,\n    result: any[],\n    execContext: ExecContext,\n  ): any {\n    return Promise.all(\n      result.map(item => {\n        if (item === null) {\n          return null;\n        }\n\n        // This is a nested array, recurse.\n        if (Array.isArray(item)) {\n          return this.resolveSubSelectedArray(field, item, execContext);\n        }\n\n        // This is an object, run the selection set on it.\n        if (field.selectionSet) {\n          return this.resolveSelectionSet(field.selectionSet, item, execContext);\n        }\n      }),\n    );\n  }\n}\n","export function capitalizeFirstLetter(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import { Observable, Observer, Subscription } from './Observable';\n\n// Returns a normal Observable that can have any number of subscribers,\n// while ensuring the original Observable gets subscribed to at most once.\nexport function multiplex<T>(inner: Observable<T>): Observable<T> {\n  const observers = new Set<Observer<T>>();\n  let sub: Subscription | null = null;\n  return new Observable<T>(observer => {\n    observers.add(observer);\n    sub = sub || inner.subscribe({\n      next(value) {\n        observers.forEach(obs => obs.next && obs.next(value));\n      },\n      error(error) {\n        observers.forEach(obs => obs.error && obs.error(error));\n      },\n      complete() {\n        observers.forEach(obs => obs.complete && obs.complete());\n      },\n    });\n    return () => {\n      if (observers.delete(observer) && !observers.size && sub) {\n        sub.unsubscribe();\n        sub = null;\n      }\n    };\n  });\n}\n\n// Like Observable.prototype.map, except that the mapping function can\n// optionally return a Promise (or be async).\nexport function asyncMap<V, R>(\n  observable: Observable<V>,\n  mapFn: (value: V) => R | Promise<R>,\n): Observable<R> {\n  return new Observable<R>(observer => {\n    const { next, error, complete } = observer;\n    let activeNextCount = 0;\n    let completed = false;\n\n    const handler: Observer<V> = {\n      next(value) {\n        ++activeNextCount;\n        new Promise(resolve => {\n          resolve(mapFn(value));\n        }).then(\n          result => {\n            --activeNextCount;\n            next && next.call(observer, result);\n            completed && handler.complete!();\n          },\n          e => {\n            --activeNextCount;\n            error && error.call(observer, e);\n          },\n        );\n      },\n      error(e) {\n        error && error.call(observer, e);\n      },\n      complete() {\n        completed = true;\n        if (!activeNextCount) {\n          complete && complete.call(observer);\n        }\n      },\n    };\n\n    const sub = observable.subscribe(handler);\n    return () => sub.unsubscribe();\n  });\n}\n","import { execute, ApolloLink, FetchResult } from 'apollo-link';\nimport { DocumentNode } from 'graphql';\nimport { Cache } from 'apollo-cache';\nimport {\n  getDefaultValues,\n  getOperationDefinition,\n  getOperationName,\n  hasDirectives,\n  graphQLResultHasError,\n  hasClientExports,\n  removeConnectionDirectiveFromDocument,\n  canUseWeakMap,\n} from 'apollo-utilities';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { isApolloError, ApolloError } from '../errors/ApolloError';\nimport { Observer, Subscription, Observable } from '../util/Observable';\nimport { QueryWithUpdater, DataStore } from '../data/store';\nimport { MutationStore } from '../data/mutations';\nimport { QueryStore, QueryStoreValue } from '../data/queries';\n\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n  ErrorPolicy,\n} from './watchQueryOptions';\nimport { ObservableQuery } from './ObservableQuery';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport {\n  QueryListener,\n  ApolloQueryResult,\n  FetchType,\n  OperationVariables,\n} from './types';\nimport { LocalState } from './LocalState';\nimport { asyncMap, multiplex } from '../util/observables';\nimport { isNonEmptyArray } from '../util/arrays';\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport interface QueryInfo {\n  listeners: Set<QueryListener>;\n  invalidated: boolean;\n  newData: Cache.DiffResult<any> | null;\n  document: DocumentNode | null;\n  lastRequestId: number;\n  // A map going from queryId to an observer for a query issued by watchQuery. We use\n  // these to keep track of queries that are inflight and error on the observers associated\n  // with them in case of some destabalizing action (e.g. reset of the Apollo store).\n  observableQuery: ObservableQuery<any> | null;\n  subscriptions: Set<Subscription>;\n  cancel?: () => void;\n}\n\nexport class QueryManager<TStore> {\n  public link: ApolloLink;\n  public mutationStore: MutationStore = new MutationStore();\n  public queryStore: QueryStore = new QueryStore();\n  public dataStore: DataStore<TStore>;\n  public readonly assumeImmutableResults: boolean;\n\n  private queryDeduplication: boolean;\n  private clientAwareness: Record<string, string> = {};\n  private localState: LocalState<TStore>;\n\n  private onBroadcast: () => void;\n\n  private ssrMode: boolean;\n\n  // let's not start at zero to avoid pain with bad checks\n  private idCounter = 1;\n\n  // XXX merge with ObservableQuery but that needs to be expanded to support mutations and\n  // subscriptions as well\n  private queries: Map<string, QueryInfo> = new Map();\n\n  // A map of Promise reject functions for fetchQuery promises that have not\n  // yet been resolved, used to keep track of in-flight queries so that we can\n  // reject them in case a destabilizing event occurs (e.g. Apollo store reset).\n  // The key is in the format of `query:${queryId}` or `fetchRequest:${queryId}`,\n  // depending on where the promise's rejection function was created from.\n  private fetchQueryRejectFns = new Map<string, Function>();\n\n  constructor({\n    link,\n    queryDeduplication = false,\n    store,\n    onBroadcast = () => undefined,\n    ssrMode = false,\n    clientAwareness = {},\n    localState,\n    assumeImmutableResults,\n  }: {\n    link: ApolloLink;\n    queryDeduplication?: boolean;\n    store: DataStore<TStore>;\n    onBroadcast?: () => void;\n    ssrMode?: boolean;\n    clientAwareness?: Record<string, string>;\n    localState?: LocalState<TStore>;\n    assumeImmutableResults?: boolean;\n  }) {\n    this.link = link;\n    this.queryDeduplication = queryDeduplication;\n    this.dataStore = store;\n    this.onBroadcast = onBroadcast;\n    this.clientAwareness = clientAwareness;\n    this.localState = localState || new LocalState({ cache: store.getCache() });\n    this.ssrMode = ssrMode;\n    this.assumeImmutableResults = !!assumeImmutableResults;\n  }\n\n  /**\n   * Call this method to terminate any active query processes, making it safe\n   * to dispose of this QueryManager instance.\n   */\n  public stop() {\n    this.queries.forEach((_info, queryId) => {\n      this.stopQueryNoBroadcast(queryId);\n    });\n\n    this.fetchQueryRejectFns.forEach(reject => {\n      reject(\n        new InvariantError('QueryManager stopped while query was in flight'),\n      );\n    });\n  }\n\n  public async mutate<T>({\n    mutation,\n    variables,\n    optimisticResponse,\n    updateQueries: updateQueriesByName,\n    refetchQueries = [],\n    awaitRefetchQueries = false,\n    update: updateWithProxyFn,\n    errorPolicy = 'none',\n    fetchPolicy,\n    context = {},\n  }: MutationOptions): Promise<FetchResult<T>> {\n    invariant(\n      mutation,\n      'mutation option is required. You must specify your GraphQL document in the mutation option.',\n    );\n\n    invariant(\n      !fetchPolicy || fetchPolicy === 'no-cache',\n      \"Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.\"\n    );\n\n    const mutationId = this.generateQueryId();\n    mutation = this.transform(mutation).document;\n\n    this.setQuery(mutationId, () => ({ document: mutation }));\n\n    variables = this.getVariables(mutation, variables);\n\n    if (this.transform(mutation).hasClientExports) {\n      variables = await this.localState.addExportedVariables(mutation, variables, context);\n    }\n\n    // Create a map of update queries by id to the query instead of by name.\n    const generateUpdateQueriesInfo: () => {\n      [queryId: string]: QueryWithUpdater;\n    } = () => {\n      const ret: { [queryId: string]: QueryWithUpdater } = {};\n\n      if (updateQueriesByName) {\n        this.queries.forEach(({ observableQuery }, queryId) => {\n          if (observableQuery) {\n            const { queryName } = observableQuery;\n            if (\n              queryName &&\n              hasOwnProperty.call(updateQueriesByName, queryName)\n            ) {\n              ret[queryId] = {\n                updater: updateQueriesByName[queryName],\n                query: this.queryStore.get(queryId),\n              };\n            }\n          }\n        });\n      }\n\n      return ret;\n    };\n\n    this.mutationStore.initMutation(\n      mutationId,\n      mutation,\n      variables,\n    );\n\n    this.dataStore.markMutationInit({\n      mutationId,\n      document: mutation,\n      variables,\n      updateQueries: generateUpdateQueriesInfo(),\n      update: updateWithProxyFn,\n      optimisticResponse,\n    });\n\n    this.broadcastQueries();\n\n    const self = this;\n\n    return new Promise((resolve, reject) => {\n      let storeResult: FetchResult<T> | null;\n      let error: ApolloError;\n\n      self.getObservableFromLink(\n        mutation,\n        {\n          ...context,\n          optimisticResponse,\n        },\n        variables,\n        false,\n      ).subscribe({\n        next(result: FetchResult<T>) {\n          if (graphQLResultHasError(result) && errorPolicy === 'none') {\n            error = new ApolloError({\n              graphQLErrors: result.errors,\n            });\n            return;\n          }\n\n          self.mutationStore.markMutationResult(mutationId);\n\n          if (fetchPolicy !== 'no-cache') {\n            self.dataStore.markMutationResult({\n              mutationId,\n              result,\n              document: mutation,\n              variables,\n              updateQueries: generateUpdateQueriesInfo(),\n              update: updateWithProxyFn,\n            });\n          }\n\n          storeResult = result;\n        },\n\n        error(err: Error) {\n          self.mutationStore.markMutationError(mutationId, err);\n          self.dataStore.markMutationComplete({\n            mutationId,\n            optimisticResponse,\n          });\n          self.broadcastQueries();\n          self.setQuery(mutationId, () => ({ document: null }));\n          reject(\n            new ApolloError({\n              networkError: err,\n            }),\n          );\n        },\n\n        complete() {\n          if (error) {\n            self.mutationStore.markMutationError(mutationId, error);\n          }\n\n          self.dataStore.markMutationComplete({\n            mutationId,\n            optimisticResponse,\n          });\n\n          self.broadcastQueries();\n\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          // allow for conditional refetches\n          // XXX do we want to make this the only API one day?\n          if (typeof refetchQueries === 'function') {\n            refetchQueries = refetchQueries(storeResult!);\n          }\n\n          const refetchQueryPromises: Promise<\n            ApolloQueryResult<any>[] | ApolloQueryResult<{}>\n          >[] = [];\n\n          if (isNonEmptyArray(refetchQueries)) {\n            refetchQueries.forEach(refetchQuery => {\n              if (typeof refetchQuery === 'string') {\n                self.queries.forEach(({ observableQuery }) => {\n                  if (\n                    observableQuery &&\n                    observableQuery.queryName === refetchQuery\n                  ) {\n                    refetchQueryPromises.push(observableQuery.refetch());\n                  }\n                });\n              } else {\n                const queryOptions: QueryOptions = {\n                  query: refetchQuery.query,\n                  variables: refetchQuery.variables,\n                  fetchPolicy: 'network-only',\n                };\n\n                if (refetchQuery.context) {\n                  queryOptions.context = refetchQuery.context;\n                }\n\n                refetchQueryPromises.push(self.query(queryOptions));\n              }\n            });\n          }\n\n          Promise.all(\n            awaitRefetchQueries ? refetchQueryPromises : [],\n          ).then(() => {\n            self.setQuery(mutationId, () => ({ document: null }));\n\n            if (\n              errorPolicy === 'ignore' &&\n              storeResult &&\n              graphQLResultHasError(storeResult)\n            ) {\n              delete storeResult.errors;\n            }\n\n            resolve(storeResult!);\n          });\n        },\n      });\n    });\n  }\n\n  public async fetchQuery<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    fetchType?: FetchType,\n    // This allows us to track if this is a query spawned by a `fetchMore`\n    // call for another query. We need this data to compute the `fetchMore`\n    // network status for the query this is fetching for.\n    fetchMoreForQueryId?: string,\n  ): Promise<FetchResult<T>> {\n    const {\n      metadata = null,\n      fetchPolicy = 'cache-first', // cache-first is the default fetch policy.\n      context = {},\n    } = options;\n\n    const query = this.transform(options.query).document;\n\n    let variables = this.getVariables(query, options.variables);\n\n    if (this.transform(query).hasClientExports) {\n      variables = await this.localState.addExportedVariables(query, variables, context);\n    }\n\n    options = { ...options, variables };\n\n    let storeResult: any;\n    const isNetworkOnly =\n      fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n    let needToFetch = isNetworkOnly;\n\n    // Unless we are completely skipping the cache, we want to diff the query\n    // against the cache before we fetch it from the network interface.\n    if (!isNetworkOnly) {\n      const { complete, result } = this.dataStore.getCache().diff({\n        query,\n        variables,\n        returnPartialData: true,\n        optimistic: false,\n      });\n\n      // If we're in here, only fetch if we have missing fields\n      needToFetch = !complete || fetchPolicy === 'cache-and-network';\n      storeResult = result;\n    }\n\n    let shouldFetch =\n      needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n\n    // we need to check to see if this is an operation that uses the @live directive\n    if (hasDirectives(['live'], query)) shouldFetch = true;\n\n    const requestId = this.idCounter++;\n\n    // set up a watcher to listen to cache updates\n    const cancel = fetchPolicy !== 'no-cache'\n      ? this.updateQueryWatch(queryId, query, options)\n      : undefined;\n\n    // Initialize query in store with unique requestId\n    this.setQuery(queryId, () => ({\n      document: query,\n      lastRequestId: requestId,\n      invalidated: true,\n      cancel,\n    }));\n\n    this.invalidate(fetchMoreForQueryId);\n\n    this.queryStore.initQuery({\n      queryId,\n      document: query,\n      storePreviousVariables: shouldFetch,\n      variables,\n      isPoll: fetchType === FetchType.poll,\n      isRefetch: fetchType === FetchType.refetch,\n      metadata,\n      fetchMoreForQueryId,\n    });\n\n    this.broadcastQueries();\n\n    if (shouldFetch) {\n      const networkResult = this.fetchRequest<T>({\n        requestId,\n        queryId,\n        document: query,\n        options,\n        fetchMoreForQueryId,\n      }).catch(error => {\n        // This is for the benefit of `refetch` promises, which currently don't get their errors\n        // through the store like watchQuery observers do\n        if (isApolloError(error)) {\n          throw error;\n        } else {\n          if (requestId >= this.getQuery(queryId).lastRequestId) {\n            this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n            this.invalidate(queryId);\n            this.invalidate(fetchMoreForQueryId);\n            this.broadcastQueries();\n          }\n          throw new ApolloError({ networkError: error });\n        }\n      });\n\n      // we don't return the promise for cache-and-network since it is already\n      // returned below from the cache\n      if (fetchPolicy !== 'cache-and-network') {\n        return networkResult;\n      }\n\n      // however we need to catch the error so it isn't unhandled in case of\n      // network error\n      networkResult.catch(() => {});\n    }\n\n    // If there is no part of the query we need to fetch from the server (or,\n    // fetchPolicy is cache-only), we just write the store result as the final result.\n    this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n    this.invalidate(queryId);\n    this.invalidate(fetchMoreForQueryId);\n\n    if (this.transform(query).hasForcedResolvers) {\n      return this.localState.runResolvers({\n        document: query,\n        remoteResult: { data: storeResult },\n        context,\n        variables,\n        onlyRunForcedResolvers: true,\n      }).then((result: FetchResult<T>) => {\n        this.markQueryResult(\n          queryId,\n          result,\n          options,\n          fetchMoreForQueryId,\n        );\n        this.broadcastQueries();\n        return result;\n      });\n    }\n\n    this.broadcastQueries();\n\n    // If we have no query to send to the server, we should return the result\n    // found within the store.\n    return { data: storeResult };\n  }\n\n  private markQueryResult<TData>(\n    queryId: string,\n    result: FetchResult<TData>,\n    {\n      fetchPolicy,\n      variables,\n      errorPolicy,\n    }: WatchQueryOptions,\n    fetchMoreForQueryId?: string,\n  ) {\n    if (fetchPolicy === 'no-cache') {\n      this.setQuery(queryId, () => ({\n        newData: { result: result.data, complete: true },\n      }));\n    } else {\n      this.dataStore.markQueryResult(\n        result,\n        this.getQuery(queryId).document!,\n        variables,\n        fetchMoreForQueryId,\n        errorPolicy === 'ignore' || errorPolicy === 'all',\n      );\n    }\n  }\n\n  // Returns a query listener that will update the given observer based on the\n  // results (or lack thereof) for a particular query.\n  public queryListenerForObserver<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    observer: Observer<ApolloQueryResult<T>>,\n  ): QueryListener {\n    function invoke(method: 'next' | 'error', argument: any) {\n      if (observer[method]) {\n        try {\n          observer[method]!(argument);\n        } catch (e) {\n          invariant.error(e);\n        }\n      } else if (method === 'error') {\n        invariant.error(argument);\n      }\n    }\n\n    return (\n      queryStoreValue: QueryStoreValue,\n      newData?: Cache.DiffResult<T>,\n    ) => {\n      // we're going to take a look at the data, so the query is no longer invalidated\n      this.invalidate(queryId, false);\n\n      // The query store value can be undefined in the event of a store\n      // reset.\n      if (!queryStoreValue) return;\n\n      const { observableQuery, document } = this.getQuery(queryId);\n\n      const fetchPolicy = observableQuery\n        ? observableQuery.options.fetchPolicy\n        : options.fetchPolicy;\n\n      // don't watch the store for queries on standby\n      if (fetchPolicy === 'standby') return;\n\n      const loading = isNetworkRequestInFlight(queryStoreValue.networkStatus);\n      const lastResult = observableQuery && observableQuery.getLastResult();\n\n      const networkStatusChanged = !!(\n        lastResult &&\n        lastResult.networkStatus !== queryStoreValue.networkStatus\n      );\n\n      const shouldNotifyIfLoading =\n        options.returnPartialData ||\n        (!newData && queryStoreValue.previousVariables) ||\n        (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n        fetchPolicy === 'cache-only' ||\n        fetchPolicy === 'cache-and-network';\n\n      if (loading && !shouldNotifyIfLoading) {\n        return;\n      }\n\n      const hasGraphQLErrors = isNonEmptyArray(queryStoreValue.graphQLErrors);\n\n      const errorPolicy: ErrorPolicy = observableQuery\n        && observableQuery.options.errorPolicy\n        || options.errorPolicy\n        || 'none';\n\n      // If we have either a GraphQL error or a network error, we create\n      // an error and tell the observer about it.\n      if (errorPolicy === 'none' && hasGraphQLErrors || queryStoreValue.networkError) {\n        return invoke('error', new ApolloError({\n          graphQLErrors: queryStoreValue.graphQLErrors,\n          networkError: queryStoreValue.networkError,\n        }));\n      }\n\n      try {\n        let data: any;\n        let isMissing: boolean;\n\n        if (newData) {\n          // As long as we're using the cache, clear out the latest\n          // `newData`, since it will now become the current data. We need\n          // to keep the `newData` stored with the query when using\n          // `no-cache` since `getCurrentQueryResult` attemps to pull from\n          // `newData` first, following by trying the cache (which won't\n          // find a hit for `no-cache`).\n          if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n            this.setQuery(queryId, () => ({ newData: null }));\n          }\n\n          data = newData.result;\n          isMissing = !newData.complete;\n        } else {\n          const lastError = observableQuery && observableQuery.getLastError();\n          const errorStatusChanged =\n            errorPolicy !== 'none' &&\n            (lastError && lastError.graphQLErrors) !==\n              queryStoreValue.graphQLErrors;\n\n          if (lastResult && lastResult.data && !errorStatusChanged) {\n            data = lastResult.data;\n            isMissing = false;\n          } else {\n            const diffResult = this.dataStore.getCache().diff({\n              query: document as DocumentNode,\n              variables:\n                queryStoreValue.previousVariables ||\n                queryStoreValue.variables,\n              returnPartialData: true,\n              optimistic: true,\n            });\n\n            data = diffResult.result;\n            isMissing = !diffResult.complete;\n          }\n        }\n\n        // If there is some data missing and the user has told us that they\n        // do not tolerate partial data then we want to return the previous\n        // result and mark it as stale.\n        const stale = isMissing && !(\n          options.returnPartialData ||\n          fetchPolicy === 'cache-only'\n        );\n\n        const resultFromStore: ApolloQueryResult<T> = {\n          data: stale ? lastResult && lastResult.data : data,\n          loading,\n          networkStatus: queryStoreValue.networkStatus,\n          stale,\n        };\n\n        // if the query wants updates on errors we need to add it to the result\n        if (errorPolicy === 'all' && hasGraphQLErrors) {\n          resultFromStore.errors = queryStoreValue.graphQLErrors;\n        }\n\n        invoke('next', resultFromStore);\n\n      } catch (networkError) {\n        invoke('error', new ApolloError({ networkError }));\n      }\n    };\n  }\n\n  private transformCache = new (canUseWeakMap ? WeakMap : Map)<\n    DocumentNode,\n    Readonly<{\n      document: Readonly<DocumentNode>;\n      hasClientExports: boolean;\n      hasForcedResolvers: boolean;\n      clientQuery: Readonly<DocumentNode> | null;\n      serverQuery: Readonly<DocumentNode> | null;\n      defaultVars: Readonly<OperationVariables>;\n    }>\n  >();\n\n  public transform(document: DocumentNode) {\n    const { transformCache } = this;\n\n    if (!transformCache.has(document)) {\n      const cache = this.dataStore.getCache();\n      const transformed = cache.transformDocument(document);\n      const forLink = removeConnectionDirectiveFromDocument(\n        cache.transformForLink(transformed));\n\n      const clientQuery = this.localState.clientQuery(transformed);\n      const serverQuery = this.localState.serverQuery(forLink);\n\n      const cacheEntry = {\n        document: transformed,\n        // TODO These two calls (hasClientExports and shouldForceResolvers)\n        // could probably be merged into a single traversal.\n        hasClientExports: hasClientExports(transformed),\n        hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n        clientQuery,\n        serverQuery,\n        defaultVars: getDefaultValues(\n          getOperationDefinition(transformed)\n        ) as OperationVariables,\n      };\n\n      const add = (doc: DocumentNode | null) => {\n        if (doc && !transformCache.has(doc)) {\n          transformCache.set(doc, cacheEntry);\n        }\n      }\n      // Add cacheEntry to the transformCache using several different keys,\n      // since any one of these documents could end up getting passed to the\n      // transform method again in the future.\n      add(document);\n      add(transformed);\n      add(clientQuery);\n      add(serverQuery);\n    }\n\n    return transformCache.get(document)!;\n  }\n\n  private getVariables(\n    document: DocumentNode,\n    variables?: OperationVariables,\n  ): OperationVariables {\n    return {\n      ...this.transform(document).defaultVars,\n      ...variables,\n    };\n  }\n\n  // The shouldSubscribe option is a temporary fix that tells us whether watchQuery was called\n  // directly (i.e. through ApolloClient) or through the query method within QueryManager.\n  // Currently, the query method uses watchQuery in order to handle non-network errors correctly\n  // but we don't want to keep track observables issued for the query method since those aren't\n  // supposed to be refetched in the event of a store reset. Once we unify error handling for\n  // network errors and non-network errors, the shouldSubscribe option will go away.\n\n  public watchQuery<T, TVariables = OperationVariables>(\n    options: WatchQueryOptions,\n    shouldSubscribe = true,\n  ): ObservableQuery<T, TVariables> {\n    invariant(\n      options.fetchPolicy !== 'standby',\n      'client.watchQuery cannot be called with fetchPolicy set to \"standby\"',\n    );\n\n    // assign variable default values if supplied\n    options.variables = this.getVariables(options.query, options.variables);\n\n    if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n      options.notifyOnNetworkStatusChange = false;\n    }\n\n    let transformedOptions = { ...options } as WatchQueryOptions<TVariables>;\n\n    return new ObservableQuery<T, TVariables>({\n      queryManager: this,\n      options: transformedOptions,\n      shouldSubscribe: shouldSubscribe,\n    });\n  }\n\n  public query<T>(options: QueryOptions): Promise<ApolloQueryResult<T>> {\n    invariant(\n      options.query,\n      'query option is required. You must specify your GraphQL document ' +\n        'in the query option.',\n    );\n\n    invariant(\n      options.query.kind === 'Document',\n      'You must wrap the query string in a \"gql\" tag.',\n    );\n\n    invariant(\n      !(options as any).returnPartialData,\n      'returnPartialData option only supported on watchQuery.',\n    );\n\n    invariant(\n      !(options as any).pollInterval,\n      'pollInterval option only supported on watchQuery.',\n    );\n\n    return new Promise<ApolloQueryResult<T>>((resolve, reject) => {\n      const watchedQuery = this.watchQuery<T>(options, false);\n      this.fetchQueryRejectFns.set(`query:${watchedQuery.queryId}`, reject);\n      watchedQuery\n        .result()\n        .then(resolve, reject)\n        // Since neither resolve nor reject throw or return a value, this .then\n        // handler is guaranteed to execute. Note that it doesn't really matter\n        // when we remove the reject function from this.fetchQueryRejectFns,\n        // since resolve and reject are mutually idempotent. In fact, it would\n        // not be incorrect to let reject functions accumulate over time; it's\n        // just a waste of memory.\n        .then(() =>\n          this.fetchQueryRejectFns.delete(`query:${watchedQuery.queryId}`),\n        );\n    });\n  }\n\n  public generateQueryId() {\n    return String(this.idCounter++);\n  }\n\n  public stopQueryInStore(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryInStoreNoBroadcast(queryId: string) {\n    this.stopPollingQuery(queryId);\n    this.queryStore.stopQuery(queryId);\n    this.invalidate(queryId);\n  }\n\n  public addQueryListener(queryId: string, listener: QueryListener) {\n    this.setQuery(queryId, ({ listeners }) => {\n      listeners.add(listener);\n      return { invalidated: false };\n    });\n  }\n\n  public updateQueryWatch(\n    queryId: string,\n    document: DocumentNode,\n    options: WatchQueryOptions,\n  ) {\n    const { cancel } = this.getQuery(queryId);\n    if (cancel) cancel();\n    const previousResult = () => {\n      let previousResult = null;\n      const { observableQuery } = this.getQuery(queryId);\n      if (observableQuery) {\n        const lastResult = observableQuery.getLastResult();\n        if (lastResult) {\n          previousResult = lastResult.data;\n        }\n      }\n\n      return previousResult;\n    };\n    return this.dataStore.getCache().watch({\n      query: document as DocumentNode,\n      variables: options.variables,\n      optimistic: true,\n      previousResult,\n      callback: newData => {\n        this.setQuery(queryId, () => ({ invalidated: true, newData }));\n      },\n    });\n  }\n\n  // Adds an ObservableQuery to this.observableQueries and to this.observableQueriesByName.\n  public addObservableQuery<T>(\n    queryId: string,\n    observableQuery: ObservableQuery<T>,\n  ) {\n    this.setQuery(queryId, () => ({ observableQuery }));\n  }\n\n  public removeObservableQuery(queryId: string) {\n    const { cancel } = this.getQuery(queryId);\n    this.setQuery(queryId, () => ({ observableQuery: null }));\n    if (cancel) cancel();\n  }\n\n  public clearStore(): Promise<void> {\n    // Before we have sent the reset action to the store,\n    // we can no longer rely on the results returned by in-flight\n    // requests since these may depend on values that previously existed\n    // in the data portion of the store. So, we cancel the promises and observers\n    // that we have issued so far and not yet resolved (in the case of\n    // queries).\n    this.fetchQueryRejectFns.forEach(reject => {\n      reject(new InvariantError(\n        'Store reset while query was in flight (not completed in link chain)',\n      ));\n    });\n\n    const resetIds: string[] = [];\n    this.queries.forEach(({ observableQuery }, queryId) => {\n      if (observableQuery) resetIds.push(queryId);\n    });\n\n    this.queryStore.reset(resetIds);\n    this.mutationStore.reset();\n\n    // begin removing data from the store\n    return this.dataStore.reset();\n  }\n\n  public resetStore(): Promise<ApolloQueryResult<any>[]> {\n    // Similarly, we have to have to refetch each of the queries currently being\n    // observed. We refetch instead of error'ing on these since the assumption is that\n    // resetting the store doesn't eliminate the need for the queries currently being\n    // watched. If there is an existing query in flight when the store is reset,\n    // the promise for it will be rejected and its results will not be written to the\n    // store.\n    return this.clearStore().then(() => {\n      return this.reFetchObservableQueries();\n    });\n  }\n\n  public reFetchObservableQueries(\n    includeStandby: boolean = false,\n  ): Promise<ApolloQueryResult<any>[]> {\n    const observableQueryPromises: Promise<ApolloQueryResult<any>>[] = [];\n\n    this.queries.forEach(({ observableQuery }, queryId) => {\n      if (observableQuery) {\n        const fetchPolicy = observableQuery.options.fetchPolicy;\n\n        observableQuery.resetLastResults();\n        if (\n          fetchPolicy !== 'cache-only' &&\n          (includeStandby || fetchPolicy !== 'standby')\n        ) {\n          observableQueryPromises.push(observableQuery.refetch());\n        }\n\n        this.setQuery(queryId, () => ({ newData: null }));\n        this.invalidate(queryId);\n      }\n    });\n\n    this.broadcastQueries();\n\n    return Promise.all(observableQueryPromises);\n  }\n\n  public observeQuery<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    observer: Observer<ApolloQueryResult<T>>,\n  ) {\n    this.addQueryListener(\n      queryId,\n      this.queryListenerForObserver(queryId, options, observer),\n    );\n    return this.fetchQuery<T>(queryId, options);\n  }\n\n  public startQuery<T>(\n    queryId: string,\n    options: WatchQueryOptions,\n    listener: QueryListener,\n  ) {\n    invariant.warn(\"The QueryManager.startQuery method has been deprecated\");\n\n    this.addQueryListener(queryId, listener);\n\n    this.fetchQuery<T>(queryId, options)\n      // `fetchQuery` returns a Promise. In case of a failure it should be caucht or else the\n      // console will show an `Uncaught (in promise)` message. Ignore the error for now.\n      .catch(() => undefined);\n\n    return queryId;\n  }\n\n  public startGraphQLSubscription<T = any>({\n    query,\n    fetchPolicy,\n    variables,\n  }: SubscriptionOptions): Observable<FetchResult<T>> {\n    query = this.transform(query).document;\n    variables = this.getVariables(query, variables);\n\n    const makeObservable = (variables: OperationVariables) =>\n      this.getObservableFromLink<T>(\n        query,\n        {},\n        variables,\n        false,\n      ).map(result => {\n        if (!fetchPolicy || fetchPolicy !== 'no-cache') {\n          this.dataStore.markSubscriptionResult(\n            result,\n            query,\n            variables,\n          );\n          this.broadcastQueries();\n        }\n\n        if (graphQLResultHasError(result)) {\n          throw new ApolloError({\n            graphQLErrors: result.errors,\n          });\n        }\n\n        return result;\n      });\n\n    if (this.transform(query).hasClientExports) {\n      const observablePromise = this.localState.addExportedVariables(\n        query,\n        variables,\n      ).then(makeObservable);\n\n      return new Observable<FetchResult<T>>(observer => {\n        let sub: Subscription | null = null;\n        observablePromise.then(\n          observable => sub = observable.subscribe(observer),\n          observer.error,\n        );\n        return () => sub && sub.unsubscribe();\n      });\n    }\n\n    return makeObservable(variables);\n  }\n\n  public stopQuery(queryId: string) {\n    this.stopQueryNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryNoBroadcast(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.removeQuery(queryId);\n  }\n\n  public removeQuery(queryId: string) {\n    // teardown all links\n    // Both `QueryManager.fetchRequest` and `QueryManager.query` create separate promises\n    // that each add their reject functions to fetchQueryRejectFns.\n    // A query created with `QueryManager.query()` could trigger a `QueryManager.fetchRequest`.\n    // The same queryId could have two rejection fns for two promises\n    this.fetchQueryRejectFns.delete(`query:${queryId}`);\n    this.fetchQueryRejectFns.delete(`fetchRequest:${queryId}`);\n    this.getQuery(queryId).subscriptions.forEach(x => x.unsubscribe());\n    this.queries.delete(queryId);\n  }\n\n  public getCurrentQueryResult<T>(\n    observableQuery: ObservableQuery<T>,\n    optimistic: boolean = true,\n  ): {\n    data: T | undefined;\n    partial: boolean;\n  } {\n    const { variables, query, fetchPolicy, returnPartialData } = observableQuery.options;\n    const lastResult = observableQuery.getLastResult();\n    const { newData } = this.getQuery(observableQuery.queryId);\n\n    if (newData && newData.complete) {\n      return { data: newData.result, partial: false };\n    }\n\n    if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n      return { data: undefined, partial: false };\n    }\n\n    const { result, complete } = this.dataStore.getCache().diff<T>({\n      query,\n      variables,\n      previousResult: lastResult ? lastResult.data : undefined,\n      returnPartialData: true,\n      optimistic,\n    });\n\n    return {\n      data: (complete || returnPartialData) ? result : void 0,\n      partial: !complete,\n    };\n  }\n\n  public getQueryWithPreviousResult<TData, TVariables = OperationVariables>(\n    queryIdOrObservable: string | ObservableQuery<TData, TVariables>,\n  ): {\n    previousResult: any;\n    variables: TVariables | undefined;\n    document: DocumentNode;\n  } {\n    let observableQuery: ObservableQuery<TData, any>;\n    if (typeof queryIdOrObservable === 'string') {\n      const { observableQuery: foundObserveableQuery } = this.getQuery(\n        queryIdOrObservable,\n      );\n      invariant(\n        foundObserveableQuery,\n        `ObservableQuery with this id doesn't exist: ${queryIdOrObservable}`\n      );\n      observableQuery = foundObserveableQuery!;\n    } else {\n      observableQuery = queryIdOrObservable;\n    }\n\n    const { variables, query } = observableQuery.options;\n    return {\n      previousResult: this.getCurrentQueryResult(observableQuery, false).data,\n      variables,\n      document: query,\n    };\n  }\n\n  public broadcastQueries() {\n    this.onBroadcast();\n    this.queries.forEach((info, id) => {\n      if (info.invalidated) {\n        info.listeners.forEach(listener => {\n          // it's possible for the listener to be undefined if the query is being stopped\n          // See here for more detail: https://github.com/apollostack/apollo-client/issues/231\n          if (listener) {\n            listener(this.queryStore.get(id), info.newData);\n          }\n        });\n      }\n    });\n  }\n\n  public getLocalState(): LocalState<TStore> {\n    return this.localState;\n  }\n\n  private inFlightLinkObservables = new Map<\n    DocumentNode,\n    Map<string, Observable<FetchResult>>\n  >();\n\n  private getObservableFromLink<T = any>(\n    query: DocumentNode,\n    context: any,\n    variables?: OperationVariables,\n    deduplication: boolean = this.queryDeduplication,\n  ): Observable<FetchResult<T>> {\n    let observable: Observable<FetchResult<T>>;\n\n    const { serverQuery } = this.transform(query);\n    if (serverQuery) {\n      const { inFlightLinkObservables, link } = this;\n\n      const operation = {\n        query: serverQuery,\n        variables,\n        operationName: getOperationName(serverQuery) || void 0,\n        context: this.prepareContext({\n          ...context,\n          forceFetch: !deduplication\n        }),\n      };\n\n      context = operation.context;\n\n      if (deduplication) {\n        const byVariables = inFlightLinkObservables.get(serverQuery) || new Map();\n        inFlightLinkObservables.set(serverQuery, byVariables);\n\n        const varJson = JSON.stringify(variables);\n        observable = byVariables.get(varJson);\n\n        if (!observable) {\n          byVariables.set(\n            varJson,\n            observable = multiplex(\n              execute(link, operation) as Observable<FetchResult<T>>\n            )\n          );\n\n          const cleanup = () => {\n            byVariables.delete(varJson);\n            if (!byVariables.size) inFlightLinkObservables.delete(serverQuery);\n            cleanupSub.unsubscribe();\n          };\n\n          const cleanupSub = observable.subscribe({\n            next: cleanup,\n            error: cleanup,\n            complete: cleanup,\n          });\n        }\n\n      } else {\n        observable = multiplex(execute(link, operation) as Observable<FetchResult<T>>);\n      }\n    } else {\n      observable = Observable.of({ data: {} } as FetchResult<T>);\n      context = this.prepareContext(context);\n    }\n\n    const { clientQuery } = this.transform(query);\n    if (clientQuery) {\n      observable = asyncMap(observable, result => {\n        return this.localState.runResolvers({\n          document: clientQuery,\n          remoteResult: result,\n          context,\n          variables,\n        });\n      });\n    }\n\n    return observable;\n  }\n\n  // Takes a request id, query id, a query document and information associated with the query\n  // and send it to the network interface. Returns\n  // a promise for the result associated with that request.\n  private fetchRequest<T>({\n    requestId,\n    queryId,\n    document,\n    options,\n    fetchMoreForQueryId,\n  }: {\n    requestId: number;\n    queryId: string;\n    document: DocumentNode;\n    options: WatchQueryOptions;\n    fetchMoreForQueryId?: string;\n  }): Promise<FetchResult<T>> {\n    const { variables, errorPolicy = 'none', fetchPolicy } = options;\n    let resultFromStore: any;\n    let errorsFromStore: any;\n\n    return new Promise<ApolloQueryResult<T>>((resolve, reject) => {\n      const observable = this.getObservableFromLink(\n        document,\n        options.context,\n        variables,\n      );\n\n      const fqrfId = `fetchRequest:${queryId}`;\n      this.fetchQueryRejectFns.set(fqrfId, reject);\n\n      const cleanup = () => {\n        this.fetchQueryRejectFns.delete(fqrfId);\n        this.setQuery(queryId, ({ subscriptions }) => {\n          subscriptions.delete(subscription);\n        });\n      };\n\n      const subscription = observable.map((result: FetchResult<T>) => {\n        if (requestId >= this.getQuery(queryId).lastRequestId) {\n          this.markQueryResult(\n            queryId,\n            result,\n            options,\n            fetchMoreForQueryId,\n          );\n\n          this.queryStore.markQueryResult(\n            queryId,\n            result,\n            fetchMoreForQueryId,\n          );\n\n          this.invalidate(queryId);\n          this.invalidate(fetchMoreForQueryId);\n\n          this.broadcastQueries();\n        }\n\n        if (errorPolicy === 'none' && isNonEmptyArray(result.errors)) {\n          return reject(new ApolloError({\n            graphQLErrors: result.errors,\n          }));\n        }\n\n        if (errorPolicy === 'all') {\n          errorsFromStore = result.errors;\n        }\n\n        if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n          // We don't write fetchMore results to the store because this would overwrite\n          // the original result in case an @connection directive is used.\n          resultFromStore = result.data;\n        } else {\n          // ensure result is combined with data already in store\n          const { result, complete } = this.dataStore.getCache().diff<T>({\n            variables,\n            query: document,\n            optimistic: false,\n            returnPartialData: true,\n          });\n\n          if (complete || options.returnPartialData) {\n            resultFromStore = result;\n          }\n        }\n      }).subscribe({\n        error(error: ApolloError) {\n          cleanup();\n          reject(error);\n        },\n\n        complete() {\n          cleanup();\n          resolve({\n            data: resultFromStore,\n            errors: errorsFromStore,\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            stale: false,\n          });\n        },\n      });\n\n      this.setQuery(queryId, ({ subscriptions }) => {\n        subscriptions.add(subscription);\n      });\n    });\n  }\n\n  private getQuery(queryId: string) {\n    return (\n      this.queries.get(queryId) || {\n        listeners: new Set<QueryListener>(),\n        invalidated: false,\n        document: null,\n        newData: null,\n        lastRequestId: 1,\n        observableQuery: null,\n        subscriptions: new Set<Subscription>(),\n      }\n    );\n  }\n\n  private setQuery<T extends keyof QueryInfo>(\n    queryId: string,\n    updater: (prev: QueryInfo) => Pick<QueryInfo, T> | void,\n  ) {\n    const prev = this.getQuery(queryId);\n    const newInfo = { ...prev, ...updater(prev) };\n    this.queries.set(queryId, newInfo);\n  }\n\n  private invalidate(\n    queryId: string | undefined,\n    invalidated = true,\n  ) {\n    if (queryId) {\n      this.setQuery(queryId, () => ({ invalidated }));\n    }\n  }\n\n  private prepareContext(context = {}) {\n    const newContext = this.localState.prepareContext(context);\n    return {\n      ...newContext,\n      clientAwareness: this.clientAwareness,\n    };\n  }\n\n  public checkInFlight(queryId: string) {\n    const query = this.queryStore.get(queryId);\n\n    return (\n      query &&\n      query.networkStatus !== NetworkStatus.ready &&\n      query.networkStatus !== NetworkStatus.error\n    );\n  }\n\n  // Map from client ID to { interval, options }.\n  private pollingInfoByQueryId = new Map<string, {\n    interval: number;\n    timeout: NodeJS.Timeout;\n    options: WatchQueryOptions;\n  }>();\n\n  public startPollingQuery(\n    options: WatchQueryOptions,\n    queryId: string,\n    listener?: QueryListener,\n  ): string {\n    const { pollInterval } = options;\n\n    invariant(\n      pollInterval,\n      'Attempted to start a polling query without a polling interval.',\n    );\n\n    // Do not poll in SSR mode\n    if (!this.ssrMode) {\n      let info = this.pollingInfoByQueryId.get(queryId)!;\n      if (!info) {\n        this.pollingInfoByQueryId.set(queryId, (info = {} as any));\n      }\n\n      info.interval = pollInterval!;\n      info.options = {\n        ...options,\n        fetchPolicy: 'network-only',\n      };\n\n      const maybeFetch = () => {\n        const info = this.pollingInfoByQueryId.get(queryId);\n        if (info) {\n          if (this.checkInFlight(queryId)) {\n            poll();\n          } else {\n            this.fetchQuery(queryId, info.options, FetchType.poll).then(\n              poll,\n              poll,\n            );\n          }\n        }\n      };\n\n      const poll = () => {\n        const info = this.pollingInfoByQueryId.get(queryId);\n        if (info) {\n          clearTimeout(info.timeout);\n          info.timeout = setTimeout(maybeFetch, info.interval);\n        }\n      };\n\n      if (listener) {\n        this.addQueryListener(queryId, listener);\n      }\n\n      poll();\n    }\n\n    return queryId;\n  }\n\n  public stopPollingQuery(queryId: string) {\n    this.pollingInfoByQueryId.delete(queryId);\n  }\n}\n","import { ExecutionResult, DocumentNode } from 'graphql';\nimport { ApolloCache, Cache, DataProxy } from 'apollo-cache';\n\nimport { QueryStoreValue } from '../data/queries';\nimport {\n  getOperationName,\n  tryFunctionOrLogError,\n  graphQLResultHasError,\n} from 'apollo-utilities';\nimport { MutationQueryReducer } from '../core/types';\n\nexport type QueryWithUpdater = {\n  updater: MutationQueryReducer<Object>;\n  query: QueryStoreValue;\n};\n\nexport interface DataWrite {\n  rootId: string;\n  result: any;\n  document: DocumentNode;\n  operationName: string | null;\n  variables: Object;\n}\n\nexport class DataStore<TSerialized> {\n  private cache: ApolloCache<TSerialized>;\n\n  constructor(initialCache: ApolloCache<TSerialized>) {\n    this.cache = initialCache;\n  }\n\n  public getCache(): ApolloCache<TSerialized> {\n    return this.cache;\n  }\n\n  public markQueryResult(\n    result: ExecutionResult,\n    document: DocumentNode,\n    variables: any,\n    fetchMoreForQueryId: string | undefined,\n    ignoreErrors: boolean = false,\n  ) {\n    let writeWithErrors = !graphQLResultHasError(result);\n    if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n      writeWithErrors = true;\n    }\n    if (!fetchMoreForQueryId && writeWithErrors) {\n      this.cache.write({\n        result: result.data,\n        dataId: 'ROOT_QUERY',\n        query: document,\n        variables: variables,\n      });\n    }\n  }\n\n  public markSubscriptionResult(\n    result: ExecutionResult,\n    document: DocumentNode,\n    variables: any,\n  ) {\n    // the subscription interface should handle not sending us results we no longer subscribe to.\n    // XXX I don't think we ever send in an object with errors, but we might in the future...\n    if (!graphQLResultHasError(result)) {\n      this.cache.write({\n        result: result.data,\n        dataId: 'ROOT_SUBSCRIPTION',\n        query: document,\n        variables: variables,\n      });\n    }\n  }\n\n  public markMutationInit(mutation: {\n    mutationId: string;\n    document: DocumentNode;\n    variables: any;\n    updateQueries: { [queryId: string]: QueryWithUpdater };\n    update: ((proxy: DataProxy, mutationResult: Object) => void) | undefined;\n    optimisticResponse: Object | Function | undefined;\n  }) {\n    if (mutation.optimisticResponse) {\n      let optimistic: Object;\n      if (typeof mutation.optimisticResponse === 'function') {\n        optimistic = mutation.optimisticResponse(mutation.variables);\n      } else {\n        optimistic = mutation.optimisticResponse;\n      }\n\n      this.cache.recordOptimisticTransaction(c => {\n        const orig = this.cache;\n        this.cache = c;\n\n        try {\n          this.markMutationResult({\n            mutationId: mutation.mutationId,\n            result: { data: optimistic },\n            document: mutation.document,\n            variables: mutation.variables,\n            updateQueries: mutation.updateQueries,\n            update: mutation.update,\n          });\n        } finally {\n          this.cache = orig;\n        }\n      }, mutation.mutationId);\n    }\n  }\n\n  public markMutationResult(mutation: {\n    mutationId: string;\n    result: ExecutionResult;\n    document: DocumentNode;\n    variables: any;\n    updateQueries: { [queryId: string]: QueryWithUpdater };\n    update: ((proxy: DataProxy, mutationResult: Object) => void) | undefined;\n  }) {\n    // Incorporate the result from this mutation into the store\n    if (!graphQLResultHasError(mutation.result)) {\n      const cacheWrites: Cache.WriteOptions[] = [{\n        result: mutation.result.data,\n        dataId: 'ROOT_MUTATION',\n        query: mutation.document,\n        variables: mutation.variables,\n      }];\n\n      const { updateQueries } = mutation;\n      if (updateQueries) {\n        Object.keys(updateQueries).forEach(id => {\n          const { query, updater } = updateQueries[id];\n\n          // Read the current query result from the store.\n          const { result: currentQueryResult, complete } = this.cache.diff({\n            query: query.document,\n            variables: query.variables,\n            returnPartialData: true,\n            optimistic: false,\n          });\n\n          if (complete) {\n            // Run our reducer using the current query result and the mutation result.\n            const nextQueryResult = tryFunctionOrLogError(() =>\n              updater(currentQueryResult, {\n                mutationResult: mutation.result,\n                queryName: getOperationName(query.document) || undefined,\n                queryVariables: query.variables,\n              }),\n            );\n\n            // Write the modified result back into the store if we got a new result.\n            if (nextQueryResult) {\n              cacheWrites.push({\n                result: nextQueryResult,\n                dataId: 'ROOT_QUERY',\n                query: query.document,\n                variables: query.variables,\n              });\n            }\n          }\n        });\n      }\n\n      this.cache.performTransaction(c => {\n        cacheWrites.forEach(write => c.write(write));\n\n        // If the mutation has some writes associated with it then we need to\n        // apply those writes to the store by running this reducer again with a\n        // write action.\n        const { update } = mutation;\n        if (update) {\n          tryFunctionOrLogError(() => update(c, mutation.result));\n        }\n      });\n    }\n  }\n\n  public markMutationComplete({\n    mutationId,\n    optimisticResponse,\n  }: {\n    mutationId: string;\n    optimisticResponse?: any;\n  }) {\n    if (optimisticResponse) {\n      this.cache.removeOptimistic(mutationId);\n    }\n  }\n\n  public markUpdateQueryResult(\n    document: DocumentNode,\n    variables: any,\n    newResult: any,\n  ) {\n    this.cache.write({\n      result: newResult,\n      dataId: 'ROOT_QUERY',\n      variables,\n      query: document,\n    });\n  }\n\n  public reset(): Promise<void> {\n    return this.cache.reset();\n  }\n}\n","import {\n  ApolloLink,\n  FetchResult,\n  GraphQLRequest,\n  execute,\n} from 'apollo-link';\nimport { ExecutionResult, DocumentNode } from 'graphql';\nimport { ApolloCache, DataProxy } from 'apollo-cache';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { QueryManager } from './core/QueryManager';\nimport {\n  ApolloQueryResult,\n  OperationVariables,\n  Resolvers,\n} from './core/types';\nimport { ObservableQuery } from './core/ObservableQuery';\nimport { LocalState, FragmentMatcher } from './core/LocalState';\nimport { Observable } from './util/Observable';\n\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n  WatchQueryFetchPolicy,\n} from './core/watchQueryOptions';\n\nimport { DataStore } from './data/store';\n\nimport { version } from './version';\n\nexport interface DefaultOptions {\n  watchQuery?: Partial<WatchQueryOptions>;\n  query?: Partial<QueryOptions>;\n  mutate?: Partial<MutationOptions>;\n}\n\nlet hasSuggestedDevtools = false;\n\nexport type ApolloClientOptions<TCacheShape> = {\n  link?: ApolloLink;\n  cache: ApolloCache<TCacheShape>;\n  ssrForceFetchDelay?: number;\n  ssrMode?: boolean;\n  connectToDevTools?: boolean;\n  queryDeduplication?: boolean;\n  defaultOptions?: DefaultOptions;\n  assumeImmutableResults?: boolean;\n  resolvers?: Resolvers | Resolvers[];\n  typeDefs?: string | string[] | DocumentNode | DocumentNode[];\n  fragmentMatcher?: FragmentMatcher;\n  name?: string;\n  version?: string;\n};\n\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through {@link Observable} instances.\n */\nexport default class ApolloClient<TCacheShape> implements DataProxy {\n  public link: ApolloLink;\n  public store: DataStore<TCacheShape>;\n  public cache: ApolloCache<TCacheShape>;\n  public readonly queryManager: QueryManager<TCacheShape>;\n  public disableNetworkFetches: boolean;\n  public version: string;\n  public queryDeduplication: boolean;\n  public defaultOptions: DefaultOptions = {};\n  public readonly typeDefs: ApolloClientOptions<TCacheShape>['typeDefs'];\n\n  private devToolsHookCb: Function;\n  private resetStoreCallbacks: Array<() => Promise<any>> = [];\n  private clearStoreCallbacks: Array<() => Promise<any>> = [];\n  private localState: LocalState<TCacheShape>;\n\n  /**\n   * Constructs an instance of {@link ApolloClient}.\n   *\n   * @param link The {@link ApolloLink} over which GraphQL documents will be resolved into a response.\n   *\n   * @param cache The initial cache to use in the data store.\n   *\n   * @param ssrMode Determines whether this is being run in Server Side Rendering (SSR) mode.\n   *\n   * @param ssrForceFetchDelay Determines the time interval before we force fetch queries for a\n   * server side render.\n   *\n   * @param queryDeduplication If set to false, a query will still be sent to the server even if a query\n   * with identical parameters (query, variables, operationName) is already in flight.\n   *\n   * @param defaultOptions Used to set application wide defaults for the\n   *                       options supplied to `watchQuery`, `query`, or\n   *                       `mutate`.\n   *\n   * @param assumeImmutableResults When this option is true, the client will assume results\n   *                               read from the cache are never mutated by application code,\n   *                               which enables substantial performance optimizations. Passing\n   *                               `{ freezeResults: true }` to the `InMemoryCache` constructor\n   *                               can help enforce this immutability.\n   *\n   * @param name A custom name that can be used to identify this client, when\n   *             using Apollo client awareness features. E.g. \"iOS\".\n   *\n   * @param version A custom version that can be used to identify this client,\n   *                when using Apollo client awareness features. This is the\n   *                version of your client, which you may want to increment on\n   *                new builds. This is NOT the version of Apollo Client that\n   *                you are using.\n   */\n  constructor(options: ApolloClientOptions<TCacheShape>) {\n    const {\n      cache,\n      ssrMode = false,\n      ssrForceFetchDelay = 0,\n      connectToDevTools,\n      queryDeduplication = true,\n      defaultOptions,\n      assumeImmutableResults = false,\n      resolvers,\n      typeDefs,\n      fragmentMatcher,\n      name: clientAwarenessName,\n      version: clientAwarenessVersion,\n    } = options;\n\n    let { link } = options;\n\n    // If a link hasn't been defined, but local state resolvers have been set,\n    // setup a default empty link.\n    if (!link && resolvers) {\n      link = ApolloLink.empty();\n    }\n\n    if (!link || !cache) {\n      throw new InvariantError(\n        \"In order to initialize Apollo Client, you must specify 'link' and 'cache' properties in the options object.\\n\" +\n        \"These options are part of the upgrade requirements when migrating from Apollo Client 1.x to Apollo Client 2.x.\\n\" +\n        \"For more information, please visit: https://www.apollographql.com/docs/tutorial/client.html#apollo-client-setup\"\n      );\n    }\n\n    // remove apollo-client supported directives\n    this.link = link;\n    this.cache = cache;\n    this.store = new DataStore(cache);\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.defaultOptions = defaultOptions || {};\n    this.typeDefs = typeDefs;\n\n    if (ssrForceFetchDelay) {\n      setTimeout(\n        () => (this.disableNetworkFetches = false),\n        ssrForceFetchDelay,\n      );\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n\n    // Attach the client instance to window to let us be found by chrome devtools, but only in\n    // development mode\n    const defaultConnectToDevTools =\n      process.env.NODE_ENV !== 'production' &&\n      typeof window !== 'undefined' &&\n      !(window as any).__APOLLO_CLIENT__;\n\n    if (\n      typeof connectToDevTools === 'undefined'\n        ? defaultConnectToDevTools\n        : connectToDevTools && typeof window !== 'undefined'\n    ) {\n      (window as any).__APOLLO_CLIENT__ = this;\n    }\n\n    /**\n     * Suggest installing the devtools for developers who don't have them\n     */\n    if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n      hasSuggestedDevtools = true;\n      if (\n        typeof window !== 'undefined' &&\n        window.document &&\n        window.top === window.self\n      ) {\n        // First check if devtools is not installed\n        if (\n          typeof (window as any).__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined'\n        ) {\n          // Only for Chrome\n          if (\n            window.navigator &&\n            window.navigator.userAgent &&\n            window.navigator.userAgent.indexOf('Chrome') > -1\n          ) {\n            // tslint:disable-next-line\n            console.debug(\n              'Download the Apollo DevTools ' +\n                'for a better development experience: ' +\n                'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm',\n            );\n          }\n        }\n      }\n    }\n\n    this.version = version;\n\n    this.localState = new LocalState({\n      cache,\n      client: this,\n      resolvers,\n      fragmentMatcher,\n    });\n\n    this.queryManager = new QueryManager({\n      link: this.link,\n      store: this.store,\n      queryDeduplication,\n      ssrMode,\n      clientAwareness: {\n        name: clientAwarenessName!,\n        version: clientAwarenessVersion!,\n      },\n      localState: this.localState,\n      assumeImmutableResults,\n      onBroadcast: () => {\n        if (this.devToolsHookCb) {\n          this.devToolsHookCb({\n            action: {},\n            state: {\n              queries: this.queryManager.queryStore.getStore(),\n              mutations: this.queryManager.mutationStore.getStore(),\n            },\n            dataWithOptimisticResults: this.cache.extract(true),\n          });\n        }\n      },\n    });\n  }\n\n  /**\n   * Call this method to terminate any active client processes, making it safe\n   * to dispose of this `ApolloClient` instance.\n   */\n  public stop() {\n    this.queryManager.stop();\n  }\n\n  /**\n   * This watches the cache store of the query according to the options specified and\n   * returns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\n   * receive updated results through a GraphQL observer when the cache store changes.\n   * <p /><p />\n   * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n   * it uses Apollo's store in order to reactively deliver updates to your query results.\n   * <p /><p />\n   * For example, suppose you call watchQuery on a GraphQL query that fetches a person's\n   * first and last name and this person has a particular object identifer, provided by\n   * dataIdFromObject. Later, a different query fetches that same person's\n   * first and last name and the first name has now changed. Then, any observers associated\n   * with the results of the first query will be updated with a new result object.\n   * <p /><p />\n   * Note that if the cache does not change, the subscriber will *not* be notified.\n   * <p /><p />\n   * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n   * a description of store reactivity.\n   */\n  public watchQuery<T = any, TVariables = OperationVariables>(\n    options: WatchQueryOptions<TVariables>,\n  ): ObservableQuery<T, TVariables> {\n    if (this.defaultOptions.watchQuery) {\n      options = {\n        ...this.defaultOptions.watchQuery,\n        ...options,\n      } as WatchQueryOptions<TVariables>;\n    }\n\n    // XXX Overwriting options is probably not the best way to do this long term...\n    if (\n      this.disableNetworkFetches &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.queryManager.watchQuery<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single query according to the options specified and\n   * returns a {@link Promise} which is either resolved with the resulting data\n   * or rejected with an error.\n   *\n   * @param options An object of type {@link QueryOptions} that allows us to\n   * describe how this query should be treated e.g. whether it should hit the\n   * server at all or just resolve from the cache, etc.\n   */\n  public query<T = any, TVariables = OperationVariables>(\n    options: QueryOptions<TVariables>,\n  ): Promise<ApolloQueryResult<T>> {\n    if (this.defaultOptions.query) {\n      options = { ...this.defaultOptions.query, ...options } as QueryOptions<\n        TVariables\n      >;\n    }\n\n    invariant(\n      (options.fetchPolicy as WatchQueryFetchPolicy) !== 'cache-and-network',\n      'The cache-and-network fetchPolicy does not work with client.query, because ' +\n      'client.query can only return a single result. Please use client.watchQuery ' +\n      'to receive multiple results from the cache and the network, or consider ' +\n      'using a different fetchPolicy, such as cache-first or network-only.'\n    );\n\n    if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.queryManager.query<T>(options);\n  }\n\n  /**\n   * This resolves a single mutation according to the options specified and returns a\n   * {@link Promise} which is either resolved with the resulting data or rejected with an\n   * error.\n   *\n   * It takes options as an object with the following keys and values:\n   */\n  public mutate<T = any, TVariables = OperationVariables>(\n    options: MutationOptions<T, TVariables>,\n  ): Promise<FetchResult<T>> {\n    if (this.defaultOptions.mutate) {\n      options = {\n        ...this.defaultOptions.mutate,\n        ...options,\n      } as MutationOptions<T, TVariables>;\n    }\n\n    return this.queryManager.mutate<T>(options);\n  }\n\n  /**\n   * This subscribes to a graphql subscription according to the options specified and returns an\n   * {@link Observable} which either emits received data or an error.\n   */\n  public subscribe<T = any, TVariables = OperationVariables>(\n    options: SubscriptionOptions<TVariables>,\n  ): Observable<FetchResult<T>> {\n    return this.queryManager.startGraphQLSubscription<T>(options);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL query without making a network request. This method will start at\n   * the root query. To start at a specific id returned by `dataIdFromObject`\n   * use `readFragment`.\n   *\n   * @param optimistic Set to `true` to allow `readQuery` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readQuery<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Query<TVariables>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.cache.readQuery<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL fragment without making a network request. This method will read a\n   * GraphQL fragment from any arbitrary id that is currently cached, unlike\n   * `readQuery` which will only read from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are reading. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   *\n   * @param optimistic Set to `true` to allow `readFragment` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readFragment<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Fragment<TVariables>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.cache.readFragment<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL query directly to\n   * the store. This method will start at the root query. To start at a\n   * specific id returned by `dataIdFromObject` then use `writeFragment`.\n   */\n  public writeQuery<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    const result = this.cache.writeQuery<TData, TVariables>(options);\n    this.queryManager.broadcastQueries();\n    return result;\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL fragment directly to\n   * the store. This method will write to a GraphQL fragment from any arbitrary\n   * id that is currently cached, unlike `writeQuery` which will only write\n   * from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are writing. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   */\n  public writeFragment<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    const result = this.cache.writeFragment<TData, TVariables>(options);\n    this.queryManager.broadcastQueries();\n    return result;\n  }\n\n  /**\n   * Sugar for writeQuery & writeFragment\n   * This method will construct a query from the data object passed in.\n   * If no id is supplied, writeData will write the data to the root.\n   * If an id is supplied, writeData will write a fragment to the object\n   * specified by the id in the store.\n   *\n   * Since you aren't passing in a query to check the shape of the data,\n   * you must pass in an object that conforms to the shape of valid GraphQL data.\n   */\n  public writeData<TData = any>(\n    options: DataProxy.WriteDataOptions<TData>,\n  ): void {\n    const result = this.cache.writeData<TData>(options);\n    this.queryManager.broadcastQueries();\n    return result;\n  }\n\n  public __actionHookForDevTools(cb: () => any) {\n    this.devToolsHookCb = cb;\n  }\n\n  public __requestRaw(payload: GraphQLRequest): Observable<ExecutionResult> {\n    return execute(this.link, payload);\n  }\n\n  /**\n   * This initializes the query manager that tracks queries and the cache\n   */\n  public initQueryManager(): QueryManager<TCacheShape> {\n    invariant.warn(\n      'Calling the initQueryManager method is no longer necessary, ' +\n        'and it will be removed from ApolloClient in version 3.0.',\n    );\n    return this.queryManager;\n  }\n\n  /**\n   * Resets your entire store by clearing out your cache and then re-executing\n   * all of your active queries. This makes it so that you may guarantee that\n   * there is no data left in your store from a time before you called this\n   * method.\n   *\n   * `resetStore()` is useful when your user just logged out. You’ve removed the\n   * user session, and you now want to make sure that any references to data you\n   * might have fetched while the user session was active is gone.\n   *\n   * It is important to remember that `resetStore()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public resetStore(): Promise<ApolloQueryResult<any>[] | null> {\n    return Promise.resolve()\n      .then(() => this.queryManager.clearStore())\n      .then(() => Promise.all(this.resetStoreCallbacks.map(fn => fn())))\n      .then(() => this.reFetchObservableQueries());\n  }\n\n  /**\n   * Remove all data from the store. Unlike `resetStore`, `clearStore` will\n   * not refetch any active queries.\n   */\n  public clearStore(): Promise<any[]> {\n    return Promise.resolve()\n      .then(() => this.queryManager.clearStore())\n      .then(() => Promise.all(this.clearStoreCallbacks.map(fn => fn())));\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * reset. `onResetStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onResetStore(cb: () => Promise<any>): () => void {\n    this.resetStoreCallbacks.push(cb);\n    return () => {\n      this.resetStoreCallbacks = this.resetStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * cleared. `onClearStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onClearStore(cb: () => Promise<any>): () => void {\n    this.clearStoreCallbacks.push(cb);\n    return () => {\n      this.clearStoreCallbacks = this.clearStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Refetches all of your active queries.\n   *\n   * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n   *\n   * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n   */\n  public reFetchObservableQueries(\n    includeStandby?: boolean,\n  ): Promise<ApolloQueryResult<any>[]> {\n    return this.queryManager.reFetchObservableQueries(includeStandby);\n  }\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public extract(optimistic?: boolean): TCacheShape {\n    return this.cache.extract(optimistic);\n  }\n\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public restore(serializedState: TCacheShape): ApolloCache<TCacheShape> {\n    return this.cache.restore(serializedState);\n  }\n\n  /**\n   * Add additional local resolvers.\n   */\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.addResolvers(resolvers);\n  }\n\n  /**\n   * Set (override existing) local resolvers.\n   */\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.setResolvers(resolvers);\n  }\n\n  /**\n   * Get all registered local resolvers.\n   */\n  public getResolvers() {\n    return this.localState.getResolvers();\n  }\n\n  /**\n   * Set a custom local state fragment matcher.\n   */\n  public setLocalStateFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.localState.setFragmentMatcher(fragmentMatcher);\n  }\n}\n","export const version = \"2.6.10\"","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { isComputedProp, isObservableProp, createAtom, action, computed, _allowStateChangesInsideComputed, reaction, runInAction, observable, values, entries, _getGlobalState, isObservableArray, isObservableObject, defineProperty as defineProperty$1, ObservableMap, _interceptReads, intercept, observe, _getAdministration, set, makeObservable, getAtom } from 'mobx';\n\nvar livelinessChecking = \"warn\";\n/**\n * Defines what MST should do when running into reads / writes to objects that have died.\n * By default it will print a warning.\n * Use the `\"error\"` option to easy debugging to see where the error was thrown and when the offending read / write took place\n *\n * @param mode `\"warn\"`, `\"error\"` or `\"ignore\"`\n */\nfunction setLivelinessChecking(mode) {\n    livelinessChecking = mode;\n}\n/**\n * Returns the current liveliness checking mode.\n *\n * @returns `\"warn\"`, `\"error\"` or `\"ignore\"`\n */\nfunction getLivelinessChecking() {\n    return livelinessChecking;\n}\n/**\n * @deprecated use setLivelinessChecking instead\n * @hidden\n *\n * Defines what MST should do when running into reads / writes to objects that have died.\n * By default it will print a warning.\n * Use the `\"error\"` option to easy debugging to see where the error was thrown and when the offending read / write took place\n *\n * @param mode `\"warn\"`, `\"error\"` or `\"ignore\"`\n */\nfunction setLivelynessChecking(mode) {\n    setLivelinessChecking(mode);\n}\n\n/**\n * @hidden\n */\nvar Hook;\n(function (Hook) {\n    Hook[\"afterCreate\"] = \"afterCreate\";\n    Hook[\"afterAttach\"] = \"afterAttach\";\n    Hook[\"afterCreationFinalization\"] = \"afterCreationFinalization\";\n    Hook[\"beforeDetach\"] = \"beforeDetach\";\n    Hook[\"beforeDestroy\"] = \"beforeDestroy\";\n})(Hook || (Hook = {}));\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\n * Returns the _actual_ type of the given tree node. (Or throws)\n *\n * @param object\n * @returns\n */\nfunction getType(object) {\n    assertIsStateTreeNode(object, 1);\n    return getStateTreeNode(object).type;\n}\n/**\n * Returns the _declared_ type of the given sub property of an object, array or map.\n * In the case of arrays and maps the property name is optional and will be ignored.\n *\n * Example:\n * ```ts\n * const Box = types.model({ x: 0, y: 0 })\n * const box = Box.create()\n *\n * console.log(getChildType(box, \"x\").name) // 'number'\n * ```\n *\n * @param object\n * @param propertyName\n * @returns\n */\nfunction getChildType(object, propertyName) {\n    assertIsStateTreeNode(object, 1);\n    return getStateTreeNode(object).getChildType(propertyName);\n}\n/**\n * Registers a function that will be invoked for each mutation that is applied to the provided model instance, or to any of its children.\n * See [patches](https://github.com/mobxjs/mobx-state-tree#patches) for more details. onPatch events are emitted immediately and will not await the end of a transaction.\n * Patches can be used to deep observe a model tree.\n *\n * @param target the model instance from which to receive patches\n * @param callback the callback that is invoked for each patch. The reversePatch is a patch that would actually undo the emitted patch\n * @returns function to remove the listener\n */\nfunction onPatch(target, callback) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsFunction(callback, 2);\n    return getStateTreeNode(target).onPatch(callback);\n}\n/**\n * Registers a function that is invoked whenever a new snapshot for the given model instance is available.\n * The listener will only be fire at the end of the current MobX (trans)action.\n * See [snapshots](https://github.com/mobxjs/mobx-state-tree#snapshots) for more details.\n *\n * @param target\n * @param callback\n * @returns\n */\nfunction onSnapshot(target, callback) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsFunction(callback, 2);\n    return getStateTreeNode(target).onSnapshot(callback);\n}\n/**\n * Applies a JSON-patch to the given model instance or bails out if the patch couldn't be applied\n * See [patches](https://github.com/mobxjs/mobx-state-tree#patches) for more details.\n *\n * Can apply a single past, or an array of patches.\n *\n * @param target\n * @param patch\n * @returns\n */\nfunction applyPatch(target, patch) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertArg(patch, function (p) { return typeof p === \"object\"; }, \"object or array\", 2);\n    getStateTreeNode(target).applyPatches(asArray(patch));\n}\n/**\n * Small abstraction around `onPatch` and `applyPatch`, attaches a patch listener to a tree and records all the patches.\n * Returns an recorder object with the following signature:\n *\n * Example:\n * ```ts\n * export interface IPatchRecorder {\n *      // the recorded patches\n *      patches: IJsonPatch[]\n *      // the inverse of the recorded patches\n *      inversePatches: IJsonPatch[]\n *      // true if currently recording\n *      recording: boolean\n *      // stop recording patches\n *      stop(): void\n *      // resume recording patches\n *      resume(): void\n *      // apply all the recorded patches on the given target (the original subject if omitted)\n *      replay(target?: IAnyStateTreeNode): void\n *      // reverse apply the recorded patches on the given target  (the original subject if omitted)\n *      // stops the recorder if not already stopped\n *      undo(): void\n * }\n * ```\n *\n * The optional filter function allows to skip recording certain patches.\n *\n * @param subject\n * @param filter\n * @returns\n */\nfunction recordPatches(subject, filter) {\n    // check all arguments\n    assertIsStateTreeNode(subject, 1);\n    var data = {\n        patches: [],\n        reversedInversePatches: []\n    };\n    // we will generate the immutable copy of patches on demand for public consumption\n    var publicData = {};\n    var disposer;\n    var recorder = {\n        get recording() {\n            return !!disposer;\n        },\n        get patches() {\n            if (!publicData.patches) {\n                publicData.patches = data.patches.slice();\n            }\n            return publicData.patches;\n        },\n        get reversedInversePatches() {\n            if (!publicData.reversedInversePatches) {\n                publicData.reversedInversePatches = data.reversedInversePatches.slice();\n            }\n            return publicData.reversedInversePatches;\n        },\n        get inversePatches() {\n            if (!publicData.inversePatches) {\n                publicData.inversePatches = data.reversedInversePatches.slice().reverse();\n            }\n            return publicData.inversePatches;\n        },\n        stop: function () {\n            if (disposer) {\n                disposer();\n                disposer = undefined;\n            }\n        },\n        resume: function () {\n            if (disposer)\n                return;\n            disposer = onPatch(subject, function (patch, inversePatch) {\n                // skip patches that are asked to be filtered if there's a filter in place\n                if (filter && !filter(patch, inversePatch, getRunningActionContext())) {\n                    return;\n                }\n                data.patches.push(patch);\n                data.reversedInversePatches.unshift(inversePatch);\n                // mark immutable public patches as dirty\n                publicData.patches = undefined;\n                publicData.inversePatches = undefined;\n                publicData.reversedInversePatches = undefined;\n            });\n        },\n        replay: function (target) {\n            applyPatch(target || subject, data.patches);\n        },\n        undo: function (target) {\n            applyPatch(target || subject, data.reversedInversePatches);\n        }\n    };\n    recorder.resume();\n    return recorder;\n}\n/**\n * The inverse of `unprotect`.\n *\n * @param target\n */\nfunction protect(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    var node = getStateTreeNode(target);\n    if (!node.isRoot)\n        throw fail$1(\"`protect` can only be invoked on root nodes\");\n    node.isProtectionEnabled = true;\n}\n/**\n * By default it is not allowed to directly modify a model. Models can only be modified through actions.\n * However, in some cases you don't care about the advantages (like replayability, traceability, etc) this yields.\n * For example because you are building a PoC or don't have any middleware attached to your tree.\n *\n * In that case you can disable this protection by calling `unprotect` on the root of your tree.\n *\n * Example:\n * ```ts\n * const Todo = types.model({\n *     done: false\n * }).actions(self => ({\n *     toggle() {\n *         self.done = !self.done\n *     }\n * }))\n *\n * const todo = Todo.create()\n * todo.done = true // throws!\n * todo.toggle() // OK\n * unprotect(todo)\n * todo.done = false // OK\n * ```\n */\nfunction unprotect(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    var node = getStateTreeNode(target);\n    if (!node.isRoot)\n        throw fail$1(\"`unprotect` can only be invoked on root nodes\");\n    node.isProtectionEnabled = false;\n}\n/**\n * Returns true if the object is in protected mode, @see protect\n */\nfunction isProtected(target) {\n    return getStateTreeNode(target).isProtected;\n}\n/**\n * Applies a snapshot to a given model instances. Patch and snapshot listeners will be invoked as usual.\n *\n * @param target\n * @param snapshot\n * @returns\n */\nfunction applySnapshot(target, snapshot) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).applySnapshot(snapshot);\n}\n/**\n * Calculates a snapshot from the given model instance. The snapshot will always reflect the latest state but use\n * structural sharing where possible. Doesn't require MobX transactions to be completed.\n *\n * @param target\n * @param applyPostProcess If true (the default) then postProcessSnapshot gets applied.\n * @returns\n */\nfunction getSnapshot(target, applyPostProcess) {\n    if (applyPostProcess === void 0) { applyPostProcess = true; }\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    var node = getStateTreeNode(target);\n    if (applyPostProcess)\n        return node.snapshot;\n    return freeze(node.type.getSnapshot(node, false));\n}\n/**\n * Given a model instance, returns `true` if the object has a parent, that is, is part of another object, map or array.\n *\n * @param target\n * @param depth How far should we look upward? 1 by default.\n * @returns\n */\nfunction hasParent(target, depth) {\n    if (depth === void 0) { depth = 1; }\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsNumber(depth, 2, 0);\n    var parent = getStateTreeNode(target).parent;\n    while (parent) {\n        if (--depth === 0)\n            return true;\n        parent = parent.parent;\n    }\n    return false;\n}\n/**\n * Returns the immediate parent of this object, or throws.\n *\n * Note that the immediate parent can be either an object, map or array, and\n * doesn't necessarily refer to the parent model.\n *\n * Please note that in child nodes access to the root is only possible\n * once the `afterAttach` hook has fired.\n *\n * @param target\n * @param depth How far should we look upward? 1 by default.\n * @returns\n */\nfunction getParent(target, depth) {\n    if (depth === void 0) { depth = 1; }\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsNumber(depth, 2, 0);\n    var d = depth;\n    var parent = getStateTreeNode(target).parent;\n    while (parent) {\n        if (--d === 0)\n            return parent.storedValue;\n        parent = parent.parent;\n    }\n    throw fail$1(\"Failed to find the parent of \" + getStateTreeNode(target) + \" at depth \" + depth);\n}\n/**\n * Given a model instance, returns `true` if the object has a parent of given type, that is, is part of another object, map or array\n *\n * @param target\n * @param type\n * @returns\n */\nfunction hasParentOfType(target, type) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsType(type, 2);\n    var parent = getStateTreeNode(target).parent;\n    while (parent) {\n        if (type.is(parent.storedValue))\n            return true;\n        parent = parent.parent;\n    }\n    return false;\n}\n/**\n * Returns the target's parent of a given type, or throws.\n *\n * @param target\n * @param type\n * @returns\n */\nfunction getParentOfType(target, type) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsType(type, 2);\n    var parent = getStateTreeNode(target).parent;\n    while (parent) {\n        if (type.is(parent.storedValue))\n            return parent.storedValue;\n        parent = parent.parent;\n    }\n    throw fail$1(\"Failed to find the parent of \" + getStateTreeNode(target) + \" of a given type\");\n}\n/**\n * Given an object in a model tree, returns the root object of that tree.\n *\n * Please note that in child nodes access to the root is only possible\n * once the `afterAttach` hook has fired.\n *\n * @param target\n * @returns\n */\nfunction getRoot(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).root.storedValue;\n}\n/**\n * Returns the path of the given object in the model tree\n *\n * @param target\n * @returns\n */\nfunction getPath(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).path;\n}\n/**\n * Returns the path of the given object as unescaped string array.\n *\n * @param target\n * @returns\n */\nfunction getPathParts(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return splitJsonPath(getStateTreeNode(target).path);\n}\n/**\n * Returns true if the given object is the root of a model tree.\n *\n * @param target\n * @returns\n */\nfunction isRoot(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).isRoot;\n}\n/**\n * Resolves a path relatively to a given object.\n * Returns undefined if no value can be found.\n *\n * @param target\n * @param path escaped json path\n * @returns\n */\nfunction resolvePath(target, path) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsString(path, 2);\n    var node = resolveNodeByPath(getStateTreeNode(target), path);\n    return node ? node.value : undefined;\n}\n/**\n * Resolves a model instance given a root target, the type and the identifier you are searching for.\n * Returns undefined if no value can be found.\n *\n * @param type\n * @param target\n * @param identifier\n * @returns\n */\nfunction resolveIdentifier(type, target, identifier) {\n    // check all arguments\n    assertIsType(type, 1);\n    assertIsStateTreeNode(target, 2);\n    assertIsValidIdentifier(identifier, 3);\n    var node = getStateTreeNode(target).root.identifierCache.resolve(type, normalizeIdentifier(identifier));\n    return node === null || node === void 0 ? void 0 : node.value;\n}\n/**\n * Returns the identifier of the target node.\n * This is the *string normalized* identifier, which might not match the type of the identifier attribute\n *\n * @param target\n * @returns\n */\nfunction getIdentifier(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).identifier;\n}\n/**\n * Tests if a reference is valid (pointing to an existing node and optionally if alive) and returns such reference if it the check passes,\n * else it returns undefined.\n *\n * @param getter Function to access the reference.\n * @param checkIfAlive true to also make sure the referenced node is alive (default), false to skip this check.\n * @returns\n */\nfunction tryReference(getter, checkIfAlive) {\n    if (checkIfAlive === void 0) { checkIfAlive = true; }\n    try {\n        var node = getter();\n        if (node === undefined || node === null) {\n            return undefined;\n        }\n        else if (isStateTreeNode(node)) {\n            if (!checkIfAlive) {\n                return node;\n            }\n            else {\n                return isAlive(node) ? node : undefined;\n            }\n        }\n        else {\n            throw fail$1(\"The reference to be checked is not one of node, null or undefined\");\n        }\n    }\n    catch (e) {\n        if (e instanceof InvalidReferenceError) {\n            return undefined;\n        }\n        throw e;\n    }\n}\n/**\n * Tests if a reference is valid (pointing to an existing node and optionally if alive) and returns if the check passes or not.\n *\n * @param getter Function to access the reference.\n * @param checkIfAlive true to also make sure the referenced node is alive (default), false to skip this check.\n * @returns\n */\nfunction isValidReference(getter, checkIfAlive) {\n    if (checkIfAlive === void 0) { checkIfAlive = true; }\n    try {\n        var node = getter();\n        if (node === undefined || node === null) {\n            return false;\n        }\n        else if (isStateTreeNode(node)) {\n            return checkIfAlive ? isAlive(node) : true;\n        }\n        else {\n            throw fail$1(\"The reference to be checked is not one of node, null or undefined\");\n        }\n    }\n    catch (e) {\n        if (e instanceof InvalidReferenceError) {\n            return false;\n        }\n        throw e;\n    }\n}\n/**\n * Try to resolve a given path relative to a given node.\n *\n * @param target\n * @param path\n * @returns\n */\nfunction tryResolve(target, path) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsString(path, 2);\n    var node = resolveNodeByPath(getStateTreeNode(target), path, false);\n    if (node === undefined)\n        return undefined;\n    try {\n        return node.value;\n    }\n    catch (e) {\n        // For what ever reason not resolvable (e.g. totally not existing path, or value that cannot be fetched)\n        // see test / issue: 'try resolve doesn't work #686'\n        return undefined;\n    }\n}\n/**\n * Given two state tree nodes that are part of the same tree,\n * returns the shortest jsonpath needed to navigate from the one to the other\n *\n * @param base\n * @param target\n * @returns\n */\nfunction getRelativePath(base, target) {\n    // check all arguments\n    assertIsStateTreeNode(base, 1);\n    assertIsStateTreeNode(target, 2);\n    return getRelativePathBetweenNodes(getStateTreeNode(base), getStateTreeNode(target));\n}\n/**\n * Returns a deep copy of the given state tree node as new tree.\n * Short hand for `snapshot(x) = getType(x).create(getSnapshot(x))`\n *\n * _Tip: clone will create a literal copy, including the same identifiers. To modify identifiers etc during cloning, don't use clone but take a snapshot of the tree, modify it, and create new instance_\n *\n * @param source\n * @param keepEnvironment indicates whether the clone should inherit the same environment (`true`, the default), or not have an environment (`false`). If an object is passed in as second argument, that will act as the environment for the cloned tree.\n * @returns\n */\nfunction clone(source, keepEnvironment) {\n    if (keepEnvironment === void 0) { keepEnvironment = true; }\n    // check all arguments\n    assertIsStateTreeNode(source, 1);\n    var node = getStateTreeNode(source);\n    return node.type.create(node.snapshot, keepEnvironment === true\n        ? node.root.environment\n        : keepEnvironment === false\n            ? undefined\n            : keepEnvironment); // it's an object or something else\n}\n/**\n * Removes a model element from the state tree, and let it live on as a new state tree\n */\nfunction detach(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    getStateTreeNode(target).detach();\n    return target;\n}\n/**\n * Removes a model element from the state tree, and mark it as end-of-life; the element should not be used anymore\n */\nfunction destroy(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    var node = getStateTreeNode(target);\n    if (node.isRoot)\n        node.die();\n    else\n        node.parent.removeChild(node.subpath);\n}\n/**\n * Returns true if the given state tree node is not killed yet.\n * This means that the node is still a part of a tree, and that `destroy`\n * has not been called. If a node is not alive anymore, the only thing one can do with it\n * is requesting it's last path and snapshot\n *\n * @param target\n * @returns\n */\nfunction isAlive(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).observableIsAlive;\n}\n/**\n * Use this utility to register a function that should be called whenever the\n * targeted state tree node is destroyed. This is a useful alternative to managing\n * cleanup methods yourself using the `beforeDestroy` hook.\n *\n * This methods returns the same disposer that was passed as argument.\n *\n * Example:\n * ```ts\n * const Todo = types.model({\n *   title: types.string\n * }).actions(self => ({\n *   afterCreate() {\n *     const autoSaveDisposer = reaction(\n *       () => getSnapshot(self),\n *       snapshot => sendSnapshotToServerSomehow(snapshot)\n *     )\n *     // stop sending updates to server if this\n *     // instance is destroyed\n *     addDisposer(self, autoSaveDisposer)\n *   }\n * }))\n * ```\n *\n * @param target\n * @param disposer\n * @returns The same disposer that was passed as argument\n */\nfunction addDisposer(target, disposer) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsFunction(disposer, 2);\n    var node = getStateTreeNode(target);\n    node.addDisposer(disposer);\n    return disposer;\n}\n/**\n * Returns the environment of the current state tree. For more info on environments,\n * see [Dependency injection](https://github.com/mobxjs/mobx-state-tree#dependency-injection)\n *\n * Please note that in child nodes access to the root is only possible\n * once the `afterAttach` hook has fired\n *\n * Returns an empty environment if the tree wasn't initialized with an environment\n *\n * @param target\n * @returns\n */\nfunction getEnv(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    var node = getStateTreeNode(target);\n    var env = node.root.environment;\n    if (!env)\n        return EMPTY_OBJECT;\n    return env;\n}\n/**\n * Performs a depth first walk through a tree.\n */\nfunction walk(target, processor) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsFunction(processor, 2);\n    var node = getStateTreeNode(target);\n    // tslint:disable-next-line:no_unused-variable\n    node.getChildren().forEach(function (child) {\n        if (isStateTreeNode(child.storedValue))\n            walk(child.storedValue, processor);\n    });\n    processor(node.storedValue);\n}\n/**\n * Returns a reflection of the model type properties and name for either a model type or model node.\n *\n * @param typeOrNode\n * @returns\n */\nfunction getPropertyMembers(typeOrNode) {\n    var type;\n    if (isStateTreeNode(typeOrNode)) {\n        type = getType(typeOrNode);\n    }\n    else {\n        type = typeOrNode;\n    }\n    assertArg(type, function (t) { return isModelType(t); }, \"model type or model instance\", 1);\n    return {\n        name: type.name,\n        properties: __assign({}, type.properties)\n    };\n}\n/**\n * Returns a reflection of the model node, including name, properties, views, volatile and actions.\n *\n * @param target\n * @returns\n */\nfunction getMembers(target) {\n    var type = getStateTreeNode(target).type;\n    var reflected = __assign(__assign({}, getPropertyMembers(type)), { actions: [], volatile: [], views: [] });\n    var props = Object.getOwnPropertyNames(target);\n    props.forEach(function (key) {\n        if (key in reflected.properties)\n            return;\n        var descriptor = Object.getOwnPropertyDescriptor(target, key);\n        if (descriptor.get) {\n            if (isComputedProp(target, key))\n                reflected.views.push(key);\n            else\n                reflected.volatile.push(key);\n            return;\n        }\n        if (descriptor.value._isMSTAction === true)\n            reflected.actions.push(key);\n        else if (isObservableProp(target, key))\n            reflected.volatile.push(key);\n        else\n            reflected.views.push(key);\n    });\n    return reflected;\n}\n/**\n * Casts a node snapshot or instance type to an instance type so it can be assigned to a type instance.\n * Note that this is just a cast for the type system, this is, it won't actually convert a snapshot to an instance,\n * but just fool typescript into thinking so.\n * Either way, casting when outside an assignation operation won't compile.\n *\n * Example:\n * ```ts\n * const ModelA = types.model({\n *   n: types.number\n * }).actions(self => ({\n *   setN(aNumber: number) {\n *     self.n = aNumber\n *   }\n * }))\n *\n * const ModelB = types.model({\n *   innerModel: ModelA\n * }).actions(self => ({\n *   someAction() {\n *     // this will allow the compiler to assign a snapshot to the property\n *     self.innerModel = cast({ a: 5 })\n *   }\n * }))\n * ```\n *\n * @param snapshotOrInstance Snapshot or instance\n * @returns The same object casted as an instance\n */\nfunction cast(snapshotOrInstance) {\n    return snapshotOrInstance;\n}\n/**\n * Casts a node instance type to an snapshot type so it can be assigned to a type snapshot (e.g. to be used inside a create call).\n * Note that this is just a cast for the type system, this is, it won't actually convert an instance to a snapshot,\n * but just fool typescript into thinking so.\n *\n * Example:\n * ```ts\n * const ModelA = types.model({\n *   n: types.number\n * }).actions(self => ({\n *   setN(aNumber: number) {\n *     self.n = aNumber\n *   }\n * }))\n *\n * const ModelB = types.model({\n *   innerModel: ModelA\n * })\n *\n * const a = ModelA.create({ n: 5 });\n * // this will allow the compiler to use a model as if it were a snapshot\n * const b = ModelB.create({ innerModel: castToSnapshot(a)})\n * ```\n *\n * @param snapshotOrInstance Snapshot or instance\n * @returns The same object casted as an input (creation) snapshot\n */\nfunction castToSnapshot(snapshotOrInstance) {\n    return snapshotOrInstance;\n}\n/**\n * Casts a node instance type to a reference snapshot type so it can be assigned to a refernence snapshot (e.g. to be used inside a create call).\n * Note that this is just a cast for the type system, this is, it won't actually convert an instance to a refererence snapshot,\n * but just fool typescript into thinking so.\n *\n * Example:\n * ```ts\n * const ModelA = types.model({\n *   id: types.identifier,\n *   n: types.number\n * }).actions(self => ({\n *   setN(aNumber: number) {\n *     self.n = aNumber\n *   }\n * }))\n *\n * const ModelB = types.model({\n *   refA: types.reference(ModelA)\n * })\n *\n * const a = ModelA.create({ id: 'someId', n: 5 });\n * // this will allow the compiler to use a model as if it were a reference snapshot\n * const b = ModelB.create({ refA: castToReferenceSnapshot(a)})\n * ```\n *\n * @param instance Instance\n * @returns The same object casted as an reference snapshot (string or number)\n */\nfunction castToReferenceSnapshot(instance) {\n    return instance;\n}\n/**\n * Returns the unique node id (not to be confused with the instance identifier) for a\n * given instance.\n * This id is a number that is unique for each instance.\n *\n * @export\n * @param target\n * @returns\n */\nfunction getNodeId(target) {\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).nodeId;\n}\n\n/**\n * @internal\n * @hidden\n */\nvar BaseNode = /** @class */ (function () {\n    function BaseNode(type, parent, subpath, environment) {\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: type\n        });\n        Object.defineProperty(this, \"environment\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: environment\n        });\n        Object.defineProperty(this, \"_escapedSubpath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_subpath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_subpathUponDeath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_pathUponDeath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"storedValue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // usually the same type as the value, but not always (such as with references)\n        Object.defineProperty(this, \"aliveAtom\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: NodeLifeCycle.INITIALIZING\n        });\n        Object.defineProperty(this, \"_hookSubscribers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_parent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"pathAtom\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.environment = environment;\n        this.baseSetParent(parent, subpath);\n    }\n    Object.defineProperty(BaseNode.prototype, \"subpath\", {\n        get: function () {\n            return this._subpath;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"subpathUponDeath\", {\n        get: function () {\n            return this._subpathUponDeath;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"pathUponDeath\", {\n        get: function () {\n            return this._pathUponDeath;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"value\", {\n        get: function () {\n            return this.type.getValue(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"state\", {\n        get: function () {\n            return this._state;\n        },\n        set: function (val) {\n            var wasAlive = this.isAlive;\n            this._state = val;\n            var isAlive = this.isAlive;\n            if (this.aliveAtom && wasAlive !== isAlive) {\n                this.aliveAtom.reportChanged();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"fireInternalHook\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (name) {\n            if (this._hookSubscribers) {\n                this._hookSubscribers.emit(name, this, name);\n            }\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"registerHook\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (hook, hookHandler) {\n            if (!this._hookSubscribers) {\n                this._hookSubscribers = new EventHandlers();\n            }\n            return this._hookSubscribers.register(hook, hookHandler);\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"parent\", {\n        get: function () {\n            return this._parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"getReconciliationType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.type;\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"baseSetParent\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath) {\n            this._parent = parent;\n            this._subpath = subpath;\n            this._escapedSubpath = undefined; // regenerate when needed\n            if (this.pathAtom) {\n                this.pathAtom.reportChanged();\n            }\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"path\", {\n        /*\n         * Returns (escaped) path representation as string\n         */\n        get: function () {\n            return this.getEscapedPath(true);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"getEscapedPath\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (reportObserved) {\n            if (reportObserved) {\n                if (!this.pathAtom) {\n                    this.pathAtom = createAtom(\"path\");\n                }\n                this.pathAtom.reportObserved();\n            }\n            if (!this.parent)\n                return \"\";\n            // regenerate escaped subpath if needed\n            if (this._escapedSubpath === undefined) {\n                this._escapedSubpath = !this._subpath ? \"\" : escapeJsonPath(this._subpath);\n            }\n            return this.parent.getEscapedPath(reportObserved) + \"/\" + this._escapedSubpath;\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"isRoot\", {\n        get: function () {\n            return this.parent === null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"isAlive\", {\n        get: function () {\n            return this.state !== NodeLifeCycle.DEAD;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"isDetaching\", {\n        get: function () {\n            return this.state === NodeLifeCycle.DETACHING;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"observableIsAlive\", {\n        get: function () {\n            if (!this.aliveAtom) {\n                this.aliveAtom = createAtom(\"alive\");\n            }\n            this.aliveAtom.reportObserved();\n            return this.isAlive;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"baseFinalizeCreation\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (whenFinalized) {\n            if (devMode()) {\n                if (!this.isAlive) {\n                    // istanbul ignore next\n                    throw fail(\"assertion failed: cannot finalize the creation of a node that is already dead\");\n                }\n            }\n            // goal: afterCreate hooks runs depth-first. After attach runs parent first, so on afterAttach the parent has completed already\n            if (this.state === NodeLifeCycle.CREATED) {\n                if (this.parent) {\n                    if (this.parent.state !== NodeLifeCycle.FINALIZED) {\n                        // parent not ready yet, postpone\n                        return;\n                    }\n                    this.fireHook(Hook.afterAttach);\n                }\n                this.state = NodeLifeCycle.FINALIZED;\n                if (whenFinalized) {\n                    whenFinalized();\n                }\n            }\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"baseFinalizeDeath\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this._hookSubscribers) {\n                this._hookSubscribers.clearAll();\n            }\n            this._subpathUponDeath = this._subpath;\n            this._pathUponDeath = this.getEscapedPath(false);\n            this.baseSetParent(null, \"\");\n            this.state = NodeLifeCycle.DEAD;\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"baseAboutToDie\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.fireHook(Hook.beforeDestroy);\n        }\n    });\n    return BaseNode;\n}());\n\n/**\n * @internal\n * @hidden\n */\nvar ScalarNode = /** @class */ (function (_super) {\n    __extends(ScalarNode, _super);\n    function ScalarNode(simpleType, parent, subpath, environment, initialSnapshot) {\n        var _this = _super.call(this, simpleType, parent, subpath, environment) || this;\n        try {\n            _this.storedValue = simpleType.createNewInstance(initialSnapshot);\n        }\n        catch (e) {\n            // short-cut to die the instance, to avoid the snapshot computed starting to throw...\n            _this.state = NodeLifeCycle.DEAD;\n            throw e;\n        }\n        _this.state = NodeLifeCycle.CREATED;\n        // for scalar nodes there's no point in firing this event since it would fire on the constructor, before\n        // anybody can actually register for/listen to it\n        // this.fireHook(Hook.AfterCreate)\n        _this.finalizeCreation();\n        return _this;\n    }\n    Object.defineProperty(ScalarNode.prototype, \"root\", {\n        get: function () {\n            // future optimization: store root ref in the node and maintain it\n            if (!this.parent)\n                throw fail$1(\"This scalar node is not part of a tree\");\n            return this.parent.root;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScalarNode.prototype, \"setParent\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (newParent, subpath) {\n            var parentChanged = this.parent !== newParent;\n            var subpathChanged = this.subpath !== subpath;\n            if (!parentChanged && !subpathChanged) {\n                return;\n            }\n            if (devMode()) {\n                if (!subpath) {\n                    // istanbul ignore next\n                    throw fail$1(\"assertion failed: subpath expected\");\n                }\n                if (!newParent) {\n                    // istanbul ignore next\n                    throw fail$1(\"assertion failed: parent expected\");\n                }\n                if (parentChanged) {\n                    // istanbul ignore next\n                    throw fail$1(\"assertion failed: scalar nodes cannot change their parent\");\n                }\n            }\n            this.environment = undefined; // use parent's\n            this.baseSetParent(this.parent, subpath);\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"snapshot\", {\n        get: function () {\n            return freeze(this.getSnapshot());\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScalarNode.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.type.getSnapshot(this);\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"toString\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var path = (this.isAlive ? this.path : this.pathUponDeath) || \"<root>\";\n            return this.type.name + \"@\" + path + (this.isAlive ? \"\" : \" [dead]\");\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"die\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (!this.isAlive || this.state === NodeLifeCycle.DETACHING)\n                return;\n            this.aboutToDie();\n            this.finalizeDeath();\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"finalizeCreation\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.baseFinalizeCreation();\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"aboutToDie\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.baseAboutToDie();\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"finalizeDeath\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.baseFinalizeDeath();\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"fireHook\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (name) {\n            this.fireInternalHook(name);\n        }\n    });\n    return ScalarNode;\n}(BaseNode));\nScalarNode.prototype.die = action(ScalarNode.prototype.die);\n\nvar nextNodeId = 1;\nvar snapshotReactionOptions = {\n    onError: function (e) {\n        throw e;\n    }\n};\n/**\n * @internal\n * @hidden\n */\nvar ObjectNode = /** @class */ (function (_super) {\n    __extends(ObjectNode, _super);\n    function ObjectNode(complexType, parent, subpath, environment, initialValue) {\n        var _this = _super.call(this, complexType, parent, subpath, environment) || this;\n        Object.defineProperty(_this, \"nodeId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: ++nextNodeId\n        });\n        Object.defineProperty(_this, \"identifierAttribute\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"identifier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // Identifier is always normalized to string, even if the identifier property isn't\n        Object.defineProperty(_this, \"unnormalizedIdentifier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"identifierCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"isProtectionEnabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(_this, \"middlewares\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_applyPatches\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_applySnapshot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_autoUnbox\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        }); // unboxing is disabled when reading child nodes\n        Object.defineProperty(_this, \"_isRunningAction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        }); // only relevant for root\n        Object.defineProperty(_this, \"_hasSnapshotReaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(_this, \"_observableInstanceState\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0 /* UNINITIALIZED */\n        });\n        Object.defineProperty(_this, \"_childNodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_initialSnapshot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_cachedInitialSnapshot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_cachedInitialSnapshotCreated\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(_this, \"_snapshotComputed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_snapshotUponDeath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // #region internal event handling\n        Object.defineProperty(_this, \"_internalEvents\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        _this._snapshotComputed = computed(function () { return freeze(_this.getSnapshot()); });\n        _this.unbox = _this.unbox.bind(_this);\n        _this._initialSnapshot = freeze(initialValue);\n        _this.identifierAttribute = complexType.identifierAttribute;\n        if (!parent) {\n            _this.identifierCache = new IdentifierCache();\n        }\n        _this._childNodes = complexType.initializeChildNodes(_this, _this._initialSnapshot);\n        // identifier can not be changed during lifecycle of a node\n        // so we safely can read it from initial snapshot\n        _this.identifier = null;\n        _this.unnormalizedIdentifier = null;\n        if (_this.identifierAttribute && _this._initialSnapshot) {\n            var id = _this._initialSnapshot[_this.identifierAttribute];\n            if (id === undefined) {\n                // try with the actual node if not (for optional identifiers)\n                var childNode = _this._childNodes[_this.identifierAttribute];\n                if (childNode) {\n                    id = childNode.value;\n                }\n            }\n            if (typeof id !== \"string\" && typeof id !== \"number\") {\n                throw fail$1(\"Instance identifier '\" + _this.identifierAttribute + \"' for type '\" + _this.type.name + \"' must be a string or a number\");\n            }\n            // normalize internal identifier to string\n            _this.identifier = normalizeIdentifier(id);\n            _this.unnormalizedIdentifier = id;\n        }\n        if (!parent) {\n            _this.identifierCache.addNodeToCache(_this);\n        }\n        else {\n            parent.root.identifierCache.addNodeToCache(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(ObjectNode.prototype, \"applyPatches\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (patches) {\n            this.createObservableInstanceIfNeeded();\n            this._applyPatches(patches);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"applySnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot) {\n            this.createObservableInstanceIfNeeded();\n            this._applySnapshot(snapshot);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"createObservableInstanceIfNeeded\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this._observableInstanceState === 0 /* UNINITIALIZED */) {\n                this.createObservableInstance();\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"createObservableInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var e_1, _a;\n            if (devMode()) {\n                if (this.state !== NodeLifeCycle.INITIALIZING) {\n                    // istanbul ignore next\n                    throw fail$1(\"assertion failed: the creation of the observable instance must be done on the initializing phase\");\n                }\n            }\n            this._observableInstanceState = 1 /* CREATING */;\n            // make sure the parent chain is created as well\n            // array with parent chain from parent to child\n            var parentChain = [];\n            var parent = this.parent;\n            // for performance reasons we never go back further than the most direct\n            // uninitialized parent\n            // this is done to avoid traversing the whole tree to the root when using\n            // the same reference again\n            while (parent &&\n                parent._observableInstanceState === 0 /* UNINITIALIZED */) {\n                parentChain.unshift(parent);\n                parent = parent.parent;\n            }\n            try {\n                // initialize the uninitialized parent chain from parent to child\n                for (var parentChain_1 = __values(parentChain), parentChain_1_1 = parentChain_1.next(); !parentChain_1_1.done; parentChain_1_1 = parentChain_1.next()) {\n                    var p = parentChain_1_1.value;\n                    p.createObservableInstanceIfNeeded();\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (parentChain_1_1 && !parentChain_1_1.done && (_a = parentChain_1.return)) _a.call(parentChain_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            var type = this.type;\n            try {\n                this.storedValue = type.createNewInstance(this._childNodes);\n                this.preboot();\n                this._isRunningAction = true;\n                type.finalizeNewInstance(this, this.storedValue);\n            }\n            catch (e) {\n                // short-cut to die the instance, to avoid the snapshot computed starting to throw...\n                this.state = NodeLifeCycle.DEAD;\n                throw e;\n            }\n            finally {\n                this._isRunningAction = false;\n            }\n            this._observableInstanceState = 2 /* CREATED */;\n            this._snapshotComputed.trackAndCompute();\n            if (this.isRoot)\n                this._addSnapshotReaction();\n            this._childNodes = EMPTY_OBJECT;\n            this.state = NodeLifeCycle.CREATED;\n            this.fireHook(Hook.afterCreate);\n            this.finalizeCreation();\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"root\", {\n        get: function () {\n            var parent = this.parent;\n            return parent ? parent.root : this;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ObjectNode.prototype, \"clearParent\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (!this.parent)\n                return;\n            // detach if attached\n            this.fireHook(Hook.beforeDetach);\n            var previousState = this.state;\n            this.state = NodeLifeCycle.DETACHING;\n            var root = this.root;\n            var newEnv = root.environment;\n            var newIdCache = root.identifierCache.splitCache(this);\n            try {\n                this.parent.removeChild(this.subpath);\n                this.baseSetParent(null, \"\");\n                this.environment = newEnv;\n                this.identifierCache = newIdCache;\n            }\n            finally {\n                this.state = previousState;\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"setParent\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (newParent, subpath) {\n            var parentChanged = newParent !== this.parent;\n            var subpathChanged = subpath !== this.subpath;\n            if (!parentChanged && !subpathChanged) {\n                return;\n            }\n            if (devMode()) {\n                if (!subpath) {\n                    // istanbul ignore next\n                    throw fail$1(\"assertion failed: subpath expected\");\n                }\n                if (!newParent) {\n                    // istanbul ignore next\n                    throw fail$1(\"assertion failed: new parent expected\");\n                }\n                if (this.parent && parentChanged) {\n                    throw fail$1(\"A node cannot exists twice in the state tree. Failed to add \" + this + \" to path '\" + newParent.path + \"/\" + subpath + \"'.\");\n                }\n                if (!this.parent && newParent.root === this) {\n                    throw fail$1(\"A state tree is not allowed to contain itself. Cannot assign \" + this + \" to path '\" + newParent.path + \"/\" + subpath + \"'\");\n                }\n                if (!this.parent &&\n                    !!this.environment &&\n                    this.environment !== newParent.root.environment) {\n                    throw fail$1(\"A state tree cannot be made part of another state tree as long as their environments are different.\");\n                }\n            }\n            if (parentChanged) {\n                // attach to new parent\n                this.environment = undefined; // will use root's\n                newParent.root.identifierCache.mergeCache(this);\n                this.baseSetParent(newParent, subpath);\n                this.fireHook(Hook.afterAttach);\n            }\n            else if (subpathChanged) {\n                // moving to a new subpath on the same parent\n                this.baseSetParent(this.parent, subpath);\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"fireHook\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (name) {\n            var _this = this;\n            this.fireInternalHook(name);\n            var fn = this.storedValue &&\n                typeof this.storedValue === \"object\" &&\n                this.storedValue[name];\n            if (typeof fn === \"function\") {\n                // we check for it to allow old mobx peer dependencies that don't have the method to work (even when still bugged)\n                if (_allowStateChangesInsideComputed) {\n                    _allowStateChangesInsideComputed(function () {\n                        fn.apply(_this.storedValue);\n                    });\n                }\n                else {\n                    fn.apply(this.storedValue);\n                }\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"snapshot\", {\n        // advantage of using computed for a snapshot is that nicely respects transactions etc.\n        get: function () {\n            return this._snapshotComputed.get();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // NOTE: we use this method to get snapshot without creating @computed overhead\n    Object.defineProperty(ObjectNode.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (!this.isAlive)\n                return this._snapshotUponDeath;\n            return this._observableInstanceState === 2 /* CREATED */\n                ? this._getActualSnapshot()\n                : this._getCachedInitialSnapshot();\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_getActualSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.type.getSnapshot(this);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_getCachedInitialSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (!this._cachedInitialSnapshotCreated) {\n                var type = this.type;\n                var childNodes = this._childNodes;\n                var snapshot = this._initialSnapshot;\n                this._cachedInitialSnapshot = type.processInitialSnapshot(childNodes, snapshot);\n                this._cachedInitialSnapshotCreated = true;\n            }\n            return this._cachedInitialSnapshot;\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"isRunningAction\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this._isRunningAction)\n                return true;\n            if (this.isRoot)\n                return false;\n            return this.parent.isRunningAction();\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"assertAlive\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (context) {\n            var livelinessChecking = getLivelinessChecking();\n            if (!this.isAlive && livelinessChecking !== \"ignore\") {\n                var error = this._getAssertAliveError(context);\n                switch (livelinessChecking) {\n                    case \"error\":\n                        throw fail$1(error);\n                    case \"warn\":\n                        warnError(error);\n                }\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_getAssertAliveError\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (context) {\n            var escapedPath = this.getEscapedPath(false) || this.pathUponDeath || \"\";\n            var subpath = (context.subpath && escapeJsonPath(context.subpath)) || \"\";\n            var actionContext = context.actionContext || getCurrentActionContext();\n            // try to use a real action context if possible since it includes the action name\n            if (actionContext && actionContext.type !== \"action\" && actionContext.parentActionEvent) {\n                actionContext = actionContext.parentActionEvent;\n            }\n            var actionFullPath = \"\";\n            if (actionContext && actionContext.name != null) {\n                // try to use the context, and if it not available use the node one\n                var actionPath = (actionContext && actionContext.context && getPath(actionContext.context)) ||\n                    escapedPath;\n                actionFullPath = actionPath + \".\" + actionContext.name + \"()\";\n            }\n            return \"You are trying to read or write to an object that is no longer part of a state tree. (Object type: '\" + this.type.name + \"', Path upon death: '\" + escapedPath + \"', Subpath: '\" + subpath + \"', Action: '\" + actionFullPath + \"'). Either detach nodes first, or don't use objects after removing / replacing them in the tree.\";\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"getChildNode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (subpath) {\n            this.assertAlive({\n                subpath: subpath\n            });\n            this._autoUnbox = false;\n            try {\n                return this._observableInstanceState === 2 /* CREATED */\n                    ? this.type.getChildNode(this, subpath)\n                    : this._childNodes[subpath];\n            }\n            finally {\n                this._autoUnbox = true;\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"getChildren\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.assertAlive(EMPTY_OBJECT);\n            this._autoUnbox = false;\n            try {\n                return this._observableInstanceState === 2 /* CREATED */\n                    ? this.type.getChildren(this)\n                    : convertChildNodesToArray(this._childNodes);\n            }\n            finally {\n                this._autoUnbox = true;\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"getChildType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (propertyName) {\n            return this.type.getChildType(propertyName);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"isProtected\", {\n        get: function () {\n            return this.root.isProtectionEnabled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ObjectNode.prototype, \"assertWritable\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (context) {\n            this.assertAlive(context);\n            if (!this.isRunningAction() && this.isProtected) {\n                throw fail$1(\"Cannot modify '\" + this + \"', the object is protected and can only be modified by using an action.\");\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"removeChild\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (subpath) {\n            this.type.removeChild(this, subpath);\n        }\n    });\n    // bound on the constructor\n    Object.defineProperty(ObjectNode.prototype, \"unbox\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNode) {\n            if (!childNode)\n                return childNode;\n            this.assertAlive({\n                subpath: childNode.subpath || childNode.subpathUponDeath\n            });\n            return this._autoUnbox ? childNode.value : childNode;\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"toString\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var path = (this.isAlive ? this.path : this.pathUponDeath) || \"<root>\";\n            var identifier = this.identifier ? \"(id: \" + this.identifier + \")\" : \"\";\n            return this.type.name + \"@\" + path + identifier + (this.isAlive ? \"\" : \" [dead]\");\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"finalizeCreation\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var _this = this;\n            this.baseFinalizeCreation(function () {\n                var e_2, _a;\n                try {\n                    for (var _b = __values(_this.getChildren()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var child = _c.value;\n                        child.finalizeCreation();\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n                _this.fireInternalHook(Hook.afterCreationFinalization);\n            });\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"detach\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (!this.isAlive)\n                throw fail$1(\"Error while detaching, node is not alive.\");\n            this.clearParent();\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"preboot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var self = this;\n            this._applyPatches = createActionInvoker(this.storedValue, \"@APPLY_PATCHES\", function (patches) {\n                patches.forEach(function (patch) {\n                    if (!patch.path) {\n                        self.type.applySnapshot(self, patch.value);\n                        return;\n                    }\n                    var parts = splitJsonPath(patch.path);\n                    var node = resolveNodeByPathParts(self, parts.slice(0, -1));\n                    node.applyPatchLocally(parts[parts.length - 1], patch);\n                });\n            });\n            this._applySnapshot = createActionInvoker(this.storedValue, \"@APPLY_SNAPSHOT\", function (snapshot) {\n                // if the snapshot is the same as the current one, avoid performing a reconcile\n                if (snapshot === self.snapshot)\n                    return;\n                // else, apply it by calling the type logic\n                return self.type.applySnapshot(self, snapshot);\n            });\n            addHiddenFinalProp(this.storedValue, \"$treenode\", this);\n            addHiddenFinalProp(this.storedValue, \"toJSON\", toJSON);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"die\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (!this.isAlive || this.state === NodeLifeCycle.DETACHING)\n                return;\n            this.aboutToDie();\n            this.finalizeDeath();\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"aboutToDie\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this._observableInstanceState === 0 /* UNINITIALIZED */) {\n                return;\n            }\n            this.getChildren().forEach(function (node) {\n                node.aboutToDie();\n            });\n            // beforeDestroy should run before the disposers since else we could end up in a situation where\n            // a disposer added with addDisposer at this stage (beforeDestroy) is actually never released\n            this.baseAboutToDie();\n            this._internalEventsEmit(\"dispose\" /* Dispose */);\n            this._internalEventsClear(\"dispose\" /* Dispose */);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"finalizeDeath\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            // invariant: not called directly but from \"die\"\n            this.getChildren().forEach(function (node) {\n                node.finalizeDeath();\n            });\n            this.root.identifierCache.notifyDied(this);\n            // \"kill\" the computed prop and just store the last snapshot\n            var snapshot = this.snapshot;\n            this._snapshotUponDeath = snapshot;\n            this._internalEventsClearAll();\n            this.baseFinalizeDeath();\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"onSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (onChange) {\n            this._addSnapshotReaction();\n            return this._internalEventsRegister(\"snapshot\" /* Snapshot */, onChange);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"emitSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot) {\n            this._internalEventsEmit(\"snapshot\" /* Snapshot */, snapshot);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"onPatch\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (handler) {\n            return this._internalEventsRegister(\"patch\" /* Patch */, handler);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"emitPatch\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (basePatch, source) {\n            if (this._internalEventsHasSubscribers(\"patch\" /* Patch */)) {\n                var localizedPatch = extend({}, basePatch, {\n                    path: source.path.substr(this.path.length) + \"/\" + basePatch.path // calculate the relative path of the patch\n                });\n                var _a = __read(splitPatch(localizedPatch), 2), patch = _a[0], reversePatch = _a[1];\n                this._internalEventsEmit(\"patch\" /* Patch */, patch, reversePatch);\n            }\n            if (this.parent)\n                this.parent.emitPatch(basePatch, source);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"hasDisposer\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (disposer) {\n            return this._internalEventsHas(\"dispose\" /* Dispose */, disposer);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"addDisposer\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (disposer) {\n            if (!this.hasDisposer(disposer)) {\n                this._internalEventsRegister(\"dispose\" /* Dispose */, disposer, true);\n                return;\n            }\n            throw fail$1(\"cannot add a disposer when it is already registered for execution\");\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"removeDisposer\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (disposer) {\n            if (!this._internalEventsHas(\"dispose\" /* Dispose */, disposer)) {\n                throw fail$1(\"cannot remove a disposer which was never registered for execution\");\n            }\n            this._internalEventsUnregister(\"dispose\" /* Dispose */, disposer);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"removeMiddleware\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (middleware) {\n            if (this.middlewares) {\n                var index = this.middlewares.indexOf(middleware);\n                if (index >= 0) {\n                    this.middlewares.splice(index, 1);\n                }\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"addMiddleWare\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (handler, includeHooks) {\n            var _this = this;\n            if (includeHooks === void 0) { includeHooks = true; }\n            var middleware = { handler: handler, includeHooks: includeHooks };\n            if (!this.middlewares)\n                this.middlewares = [middleware];\n            else\n                this.middlewares.push(middleware);\n            return function () {\n                _this.removeMiddleware(middleware);\n            };\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"applyPatchLocally\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (subpath, patch) {\n            this.assertWritable({\n                subpath: subpath\n            });\n            this.createObservableInstanceIfNeeded();\n            this.type.applyPatchLocally(this, subpath, patch);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_addSnapshotReaction\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var _this = this;\n            if (!this._hasSnapshotReaction) {\n                var snapshotDisposer = reaction(function () { return _this.snapshot; }, function (snapshot) { return _this.emitSnapshot(snapshot); }, snapshotReactionOptions);\n                this.addDisposer(snapshotDisposer);\n                this._hasSnapshotReaction = true;\n            }\n        }\n    });\n    // we proxy the methods to avoid creating an EventHandlers instance when it is not needed\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsHasSubscribers\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event) {\n            return !!this._internalEvents && this._internalEvents.hasSubscribers(event);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsRegister\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event, eventHandler, atTheBeginning) {\n            if (atTheBeginning === void 0) { atTheBeginning = false; }\n            if (!this._internalEvents) {\n                this._internalEvents = new EventHandlers();\n            }\n            return this._internalEvents.register(event, eventHandler, atTheBeginning);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsHas\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event, eventHandler) {\n            return !!this._internalEvents && this._internalEvents.has(event, eventHandler);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsUnregister\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event, eventHandler) {\n            if (this._internalEvents) {\n                this._internalEvents.unregister(event, eventHandler);\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsEmit\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event) {\n            var _a;\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            if (this._internalEvents) {\n                (_a = this._internalEvents).emit.apply(_a, __spread([event], args));\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsClear\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event) {\n            if (this._internalEvents) {\n                this._internalEvents.clear(event);\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsClearAll\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this._internalEvents) {\n                this._internalEvents.clearAll();\n            }\n        }\n    });\n    return ObjectNode;\n}(BaseNode));\nObjectNode.prototype.createObservableInstance = action(ObjectNode.prototype.createObservableInstance);\nObjectNode.prototype.detach = action(ObjectNode.prototype.detach);\nObjectNode.prototype.die = action(ObjectNode.prototype.die);\n\nvar _a;\n/**\n * @internal\n * @hidden\n */\nvar TypeFlags;\n(function (TypeFlags) {\n    TypeFlags[TypeFlags[\"String\"] = 1] = \"String\";\n    TypeFlags[TypeFlags[\"Number\"] = 2] = \"Number\";\n    TypeFlags[TypeFlags[\"Boolean\"] = 4] = \"Boolean\";\n    TypeFlags[TypeFlags[\"Date\"] = 8] = \"Date\";\n    TypeFlags[TypeFlags[\"Literal\"] = 16] = \"Literal\";\n    TypeFlags[TypeFlags[\"Array\"] = 32] = \"Array\";\n    TypeFlags[TypeFlags[\"Map\"] = 64] = \"Map\";\n    TypeFlags[TypeFlags[\"Object\"] = 128] = \"Object\";\n    TypeFlags[TypeFlags[\"Frozen\"] = 256] = \"Frozen\";\n    TypeFlags[TypeFlags[\"Optional\"] = 512] = \"Optional\";\n    TypeFlags[TypeFlags[\"Reference\"] = 1024] = \"Reference\";\n    TypeFlags[TypeFlags[\"Identifier\"] = 2048] = \"Identifier\";\n    TypeFlags[TypeFlags[\"Late\"] = 4096] = \"Late\";\n    TypeFlags[TypeFlags[\"Refinement\"] = 8192] = \"Refinement\";\n    TypeFlags[TypeFlags[\"Union\"] = 16384] = \"Union\";\n    TypeFlags[TypeFlags[\"Null\"] = 32768] = \"Null\";\n    TypeFlags[TypeFlags[\"Undefined\"] = 65536] = \"Undefined\";\n    TypeFlags[TypeFlags[\"Integer\"] = 131072] = \"Integer\";\n    TypeFlags[TypeFlags[\"Custom\"] = 262144] = \"Custom\";\n    TypeFlags[TypeFlags[\"SnapshotProcessor\"] = 524288] = \"SnapshotProcessor\";\n})(TypeFlags || (TypeFlags = {}));\n/**\n * @internal\n * @hidden\n */\nvar cannotDetermineSubtype = \"cannotDetermine\";\n/** @hidden */\nvar $type = Symbol(\"$type\");\n/**\n * A base type produces a MST node (Node in the state tree)\n *\n * @internal\n * @hidden\n */\nvar BaseType = /** @class */ (function () {\n    function BaseType(name) {\n        Object.defineProperty(this, _a, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // these are just to make inner types avaialable to inherited classes\n        Object.defineProperty(this, \"C\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"S\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"T\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"N\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"isType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name;\n    }\n    Object.defineProperty(BaseType.prototype, \"create\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot, environment) {\n            typecheckInternal(this, snapshot);\n            return this.instantiate(null, \"\", environment, snapshot).value;\n        }\n    });\n    Object.defineProperty(BaseType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, applyPostProcess) {\n            // istanbul ignore next\n            throw fail$1(\"unimplemented method\");\n        }\n    });\n    Object.defineProperty(BaseType.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            return type === this;\n        }\n    });\n    Object.defineProperty(BaseType.prototype, \"validate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var node = getStateTreeNodeSafe(value);\n            if (node) {\n                var valueType = getType(value);\n                return this.isAssignableFrom(valueType)\n                    ? typeCheckSuccess()\n                    : typeCheckFailure(context, value);\n                // it is tempting to compare snapshots, but in that case we should always clone on assignments...\n            }\n            return this.isValidSnapshot(value, context);\n        }\n    });\n    Object.defineProperty(BaseType.prototype, \"is\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (thing) {\n            return this.validate(thing, [{ path: \"\", type: this }]).length === 0;\n        }\n    });\n    Object.defineProperty(BaseType.prototype, \"Type\", {\n        get: function () {\n            // istanbul ignore next\n            throw fail$1(\"Factory.Type should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.Type`\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseType.prototype, \"TypeWithoutSTN\", {\n        get: function () {\n            // istanbul ignore next\n            throw fail$1(\"Factory.TypeWithoutSTN should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.TypeWithoutSTN`\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseType.prototype, \"SnapshotType\", {\n        get: function () {\n            // istanbul ignore next\n            throw fail$1(\"Factory.SnapshotType should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.SnapshotType`\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseType.prototype, \"CreationType\", {\n        get: function () {\n            // istanbul ignore next\n            throw fail$1(\"Factory.CreationType should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.CreationType`\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return BaseType;\n}());\n_a = $type;\nBaseType.prototype.create = action(BaseType.prototype.create);\n/**\n * A complex type produces a MST node (Node in the state tree)\n *\n * @internal\n * @hidden\n */\nvar ComplexType = /** @class */ (function (_super) {\n    __extends(ComplexType, _super);\n    function ComplexType(name) {\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"identifierAttribute\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        return _this;\n    }\n    Object.defineProperty(ComplexType.prototype, \"create\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot, environment) {\n            if (snapshot === void 0) { snapshot = this.getDefaultSnapshot(); }\n            return _super.prototype.create.call(this, snapshot, environment);\n        }\n    });\n    Object.defineProperty(ComplexType.prototype, \"getValue\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            node.createObservableInstanceIfNeeded();\n            return node.storedValue;\n        }\n    });\n    Object.defineProperty(ComplexType.prototype, \"isMatchingSnapshotId\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, snapshot) {\n            return (!current.identifierAttribute ||\n                current.identifier ===\n                    normalizeIdentifier(snapshot[current.identifierAttribute]));\n        }\n    });\n    Object.defineProperty(ComplexType.prototype, \"tryToReconcileNode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue) {\n            if (current.isDetaching)\n                return false;\n            if (current.snapshot === newValue) {\n                // newValue is the current snapshot of the node, noop\n                return true;\n            }\n            if (isStateTreeNode(newValue) && getStateTreeNode(newValue) === current) {\n                // the current node is the same as the new one\n                return true;\n            }\n            if (current.type === this &&\n                isMutable(newValue) &&\n                !isStateTreeNode(newValue) &&\n                this.isMatchingSnapshotId(current, newValue)) {\n                // the newValue has no node, so can be treated like a snapshot\n                // we can reconcile\n                current.applySnapshot(newValue);\n                return true;\n            }\n            return false;\n        }\n    });\n    Object.defineProperty(ComplexType.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            var nodeReconciled = this.tryToReconcileNode(current, newValue);\n            if (nodeReconciled) {\n                current.setParent(parent, subpath);\n                return current;\n            }\n            // current node cannot be recycled in any way\n            current.die(); // noop if detaching\n            // attempt to reuse the new one\n            if (isStateTreeNode(newValue) && this.isAssignableFrom(getType(newValue))) {\n                // newValue is a Node as well, move it here..\n                var newNode = getStateTreeNode(newValue);\n                newNode.setParent(parent, subpath);\n                return newNode;\n            }\n            // nothing to do, we have to create a new node\n            return this.instantiate(parent, subpath, undefined, newValue);\n        }\n    });\n    Object.defineProperty(ComplexType.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return null;\n        }\n    });\n    return ComplexType;\n}(BaseType));\nComplexType.prototype.create = action(ComplexType.prototype.create);\n/**\n * @internal\n * @hidden\n */\nvar SimpleType = /** @class */ (function (_super) {\n    __extends(SimpleType, _super);\n    function SimpleType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SimpleType.prototype, \"createNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot) {\n            return snapshot;\n        }\n    });\n    Object.defineProperty(SimpleType.prototype, \"getValue\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            // if we ever find a case where scalar nodes can be accessed without iterating through its parent\n            // uncomment this to make sure the parent chain is created when this is accessed\n            // if (node.parent) {\n            //     node.parent.createObservableInstanceIfNeeded()\n            // }\n            return node.storedValue;\n        }\n    });\n    Object.defineProperty(SimpleType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            return node.storedValue;\n        }\n    });\n    Object.defineProperty(SimpleType.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            // reconcile only if type and value are still the same, and only if the node is not detaching\n            if (!current.isDetaching && current.type === this && current.storedValue === newValue) {\n                return current;\n            }\n            var res = this.instantiate(parent, subpath, undefined, newValue);\n            current.die(); // noop if detaching\n            return res;\n        }\n    });\n    Object.defineProperty(SimpleType.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return null;\n        }\n    });\n    return SimpleType;\n}(BaseType));\n/**\n * Returns if a given value represents a type.\n *\n * @param value Value to check.\n * @returns `true` if the value is a type.\n */\nfunction isType(value) {\n    return typeof value === \"object\" && value && value.isType === true;\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertIsType(type, argNumber) {\n    assertArg(type, isType, \"mobx-state-tree type\", argNumber);\n}\n\nvar runningActions = new Map();\n/**\n * Note: Consider migrating to `createActionTrackingMiddleware2`, it is easier to use.\n *\n * Convenience utility to create action based middleware that supports async processes more easily.\n * All hooks are called for both synchronous and asynchronous actions. Except that either `onSuccess` or `onFail` is called\n *\n * The create middleware tracks the process of an action (assuming it passes the `filter`).\n * `onResume` can return any value, which will be passed as second argument to any other hook. This makes it possible to keep state during a process.\n *\n * See the `atomic` middleware for an example\n *\n * @param hooks\n * @returns\n */\nfunction createActionTrackingMiddleware(hooks) {\n    return function actionTrackingMiddleware(call, next, abort) {\n        switch (call.type) {\n            case \"action\": {\n                if (!hooks.filter || hooks.filter(call) === true) {\n                    var context = hooks.onStart(call);\n                    hooks.onResume(call, context);\n                    runningActions.set(call.id, {\n                        call: call,\n                        context: context,\n                        async: false\n                    });\n                    try {\n                        var res = next(call);\n                        hooks.onSuspend(call, context);\n                        if (runningActions.get(call.id).async === false) {\n                            runningActions.delete(call.id);\n                            hooks.onSuccess(call, context, res);\n                        }\n                        return res;\n                    }\n                    catch (e) {\n                        runningActions.delete(call.id);\n                        hooks.onFail(call, context, e);\n                        throw e;\n                    }\n                }\n                else {\n                    return next(call);\n                }\n            }\n            case \"flow_spawn\": {\n                var root = runningActions.get(call.rootId);\n                root.async = true;\n                return next(call);\n            }\n            case \"flow_resume\":\n            case \"flow_resume_error\": {\n                var root = runningActions.get(call.rootId);\n                hooks.onResume(call, root.context);\n                try {\n                    return next(call);\n                }\n                finally {\n                    hooks.onSuspend(call, root.context);\n                }\n            }\n            case \"flow_throw\": {\n                var root = runningActions.get(call.rootId);\n                runningActions.delete(call.rootId);\n                hooks.onFail(call, root.context, call.args[0]);\n                return next(call);\n            }\n            case \"flow_return\": {\n                var root = runningActions.get(call.rootId);\n                runningActions.delete(call.rootId);\n                hooks.onSuccess(call, root.context, call.args[0]);\n                return next(call);\n            }\n        }\n    };\n}\n\nvar RunningAction = /** @class */ (function () {\n    function RunningAction(hooks, call) {\n        Object.defineProperty(this, \"hooks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: hooks\n        });\n        Object.defineProperty(this, \"call\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: call\n        });\n        Object.defineProperty(this, \"flowsPending\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"running\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        if (hooks) {\n            hooks.onStart(call);\n        }\n    }\n    Object.defineProperty(RunningAction.prototype, \"finish\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (error) {\n            if (this.running) {\n                this.running = false;\n                if (this.hooks) {\n                    this.hooks.onFinish(this.call, error);\n                }\n            }\n        }\n    });\n    Object.defineProperty(RunningAction.prototype, \"incFlowsPending\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.flowsPending++;\n        }\n    });\n    Object.defineProperty(RunningAction.prototype, \"decFlowsPending\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.flowsPending--;\n        }\n    });\n    Object.defineProperty(RunningAction.prototype, \"hasFlowsPending\", {\n        get: function () {\n            return this.flowsPending > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return RunningAction;\n}());\n/**\n * Convenience utility to create action based middleware that supports async processes more easily.\n * The flow is like this:\n * - for each action: if filter passes -> `onStart` -> (inner actions recursively) -> `onFinish`\n *\n * Example: if we had an action `a` that called inside an action `b1`, then `b2` the flow would be:\n * - `filter(a)`\n * - `onStart(a)`\n *   - `filter(b1)`\n *   - `onStart(b1)`\n *   - `onFinish(b1)`\n *   - `filter(b2)`\n *   - `onStart(b2)`\n *   - `onFinish(b2)`\n * - `onFinish(a)`\n *\n * The flow is the same no matter if the actions are sync or async.\n *\n * See the `atomic` middleware for an example\n *\n * @param hooks\n * @returns\n */\nfunction createActionTrackingMiddleware2(middlewareHooks) {\n    var runningActions = new WeakMap();\n    return function actionTrackingMiddleware(call, next) {\n        // find parentRunningAction\n        var parentRunningAction = call.parentActionEvent\n            ? runningActions.get(call.parentActionEvent)\n            : undefined;\n        if (call.type === \"action\") {\n            var newCall = __assign(__assign({}, call), { \n                // make a shallow copy of the parent action env\n                env: parentRunningAction && parentRunningAction.call.env, parentCall: parentRunningAction && parentRunningAction.call });\n            var passesFilter = !middlewareHooks.filter || middlewareHooks.filter(newCall);\n            var hooks = passesFilter ? middlewareHooks : undefined;\n            var runningAction = new RunningAction(hooks, newCall);\n            runningActions.set(call, runningAction);\n            var res = void 0;\n            try {\n                res = next(call);\n            }\n            catch (e) {\n                runningAction.finish(e);\n                throw e;\n            }\n            if (!runningAction.hasFlowsPending) {\n                // sync action finished\n                runningAction.finish();\n            }\n            return res;\n        }\n        else {\n            if (!parentRunningAction) {\n                return next(call);\n            }\n            switch (call.type) {\n                case \"flow_spawn\": {\n                    parentRunningAction.incFlowsPending();\n                    return next(call);\n                }\n                case \"flow_resume\":\n                case \"flow_resume_error\": {\n                    return next(call);\n                }\n                case \"flow_throw\": {\n                    var error = call.args[0];\n                    try {\n                        return next(call);\n                    }\n                    finally {\n                        parentRunningAction.decFlowsPending();\n                        if (!parentRunningAction.hasFlowsPending) {\n                            parentRunningAction.finish(error);\n                        }\n                    }\n                }\n                case \"flow_return\": {\n                    try {\n                        return next(call);\n                    }\n                    finally {\n                        parentRunningAction.decFlowsPending();\n                        if (!parentRunningAction.hasFlowsPending) {\n                            parentRunningAction.finish();\n                        }\n                    }\n                }\n            }\n        }\n    };\n}\n\nfunction serializeArgument(node, actionName, index, arg) {\n    if (arg instanceof Date)\n        return { $MST_DATE: arg.getTime() };\n    if (isPrimitive(arg))\n        return arg;\n    // We should not serialize MST nodes, even if we can, because we don't know if the receiving party can handle a raw snapshot instead of an\n    // MST type instance. So if one wants to serialize a MST node that was pass in, either explitly pass: 1: an id, 2: a (relative) path, 3: a snapshot\n    if (isStateTreeNode(arg))\n        return serializeTheUnserializable(\"[MSTNode: \" + getType(arg).name + \"]\");\n    if (typeof arg === \"function\")\n        return serializeTheUnserializable(\"[function]\");\n    if (typeof arg === \"object\" && !isPlainObject(arg) && !isArray(arg))\n        return serializeTheUnserializable(\"[object \" + ((arg && arg.constructor && arg.constructor.name) ||\n            \"Complex Object\") + \"]\");\n    try {\n        // Check if serializable, cycle free etc...\n        // MWE: there must be a better way....\n        JSON.stringify(arg); // or throws\n        return arg;\n    }\n    catch (e) {\n        return serializeTheUnserializable(\"\" + e);\n    }\n}\nfunction deserializeArgument(adm, value) {\n    if (value && typeof value === \"object\" && \"$MST_DATE\" in value)\n        return new Date(value[\"$MST_DATE\"]);\n    return value;\n}\nfunction serializeTheUnserializable(baseType) {\n    return {\n        $MST_UNSERIALIZABLE: true,\n        type: baseType\n    };\n}\n/**\n * Applies an action or a series of actions in a single MobX transaction.\n * Does not return any value\n * Takes an action description as produced by the `onAction` middleware.\n *\n * @param target\n * @param actions\n */\nfunction applyAction(target, actions) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertArg(actions, function (a) { return typeof a === \"object\"; }, \"object or array\", 2);\n    runInAction(function () {\n        asArray(actions).forEach(function (action) { return baseApplyAction(target, action); });\n    });\n}\nfunction baseApplyAction(target, action) {\n    var resolvedTarget = tryResolve(target, action.path || \"\");\n    if (!resolvedTarget)\n        throw fail$1(\"Invalid action path: \" + (action.path || \"\"));\n    var node = getStateTreeNode(resolvedTarget);\n    // Reserved functions\n    if (action.name === \"@APPLY_PATCHES\") {\n        return applyPatch.call(null, resolvedTarget, action.args[0]);\n    }\n    if (action.name === \"@APPLY_SNAPSHOT\") {\n        return applySnapshot.call(null, resolvedTarget, action.args[0]);\n    }\n    if (!(typeof resolvedTarget[action.name] === \"function\"))\n        throw fail$1(\"Action '\" + action.name + \"' does not exist in '\" + node.path + \"'\");\n    return resolvedTarget[action.name].apply(resolvedTarget, action.args ? action.args.map(function (v) { return deserializeArgument(node, v); }) : []);\n}\n/**\n * Small abstraction around `onAction` and `applyAction`, attaches an action listener to a tree and records all the actions emitted.\n * Returns an recorder object with the following signature:\n *\n * Example:\n * ```ts\n * export interface IActionRecorder {\n *      // the recorded actions\n *      actions: ISerializedActionCall[]\n *      // true if currently recording\n *      recording: boolean\n *      // stop recording actions\n *      stop(): void\n *      // resume recording actions\n *      resume(): void\n *      // apply all the recorded actions on the given object\n *      replay(target: IAnyStateTreeNode): void\n * }\n * ```\n *\n * The optional filter function allows to skip recording certain actions.\n *\n * @param subject\n * @returns\n */\nfunction recordActions(subject, filter) {\n    // check all arguments\n    assertIsStateTreeNode(subject, 1);\n    var actions = [];\n    var listener = function (call) {\n        var recordThis = filter ? filter(call, getRunningActionContext()) : true;\n        if (recordThis) {\n            actions.push(call);\n        }\n    };\n    var disposer;\n    var recorder = {\n        actions: actions,\n        get recording() {\n            return !!disposer;\n        },\n        stop: function () {\n            if (disposer) {\n                disposer();\n                disposer = undefined;\n            }\n        },\n        resume: function () {\n            if (disposer)\n                return;\n            disposer = onAction(subject, listener);\n        },\n        replay: function (target) {\n            applyAction(target, actions);\n        }\n    };\n    recorder.resume();\n    return recorder;\n}\n/**\n * Registers a function that will be invoked for each action that is called on the provided model instance, or to any of its children.\n * See [actions](https://github.com/mobxjs/mobx-state-tree#actions) for more details. onAction events are emitted only for the outermost called action in the stack.\n * Action can also be intercepted by middleware using addMiddleware to change the function call before it will be run.\n *\n * Not all action arguments might be serializable. For unserializable arguments, a struct like `{ $MST_UNSERIALIZABLE: true, type: \"someType\" }` will be generated.\n * MST Nodes are considered non-serializable as well (they could be serialized as there snapshot, but it is uncertain whether an replaying party will be able to handle such a non-instantiated snapshot).\n * Rather, when using `onAction` middleware, one should consider in passing arguments which are 1: an id, 2: a (relative) path, or 3: a snapshot. Instead of a real MST node.\n *\n * Example:\n * ```ts\n * const Todo = types.model({\n *   task: types.string\n * })\n *\n * const TodoStore = types.model({\n *   todos: types.array(Todo)\n * }).actions(self => ({\n *   add(todo) {\n *     self.todos.push(todo);\n *   }\n * }))\n *\n * const s = TodoStore.create({ todos: [] })\n *\n * let disposer = onAction(s, (call) => {\n *   console.log(call);\n * })\n *\n * s.add({ task: \"Grab a coffee\" })\n * // Logs: { name: \"add\", path: \"\", args: [{ task: \"Grab a coffee\" }] }\n * ```\n *\n * @param target\n * @param listener\n * @param attachAfter (default false) fires the listener *after* the action has executed instead of before.\n * @returns\n */\nfunction onAction(target, listener, attachAfter) {\n    if (attachAfter === void 0) { attachAfter = false; }\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    if (devMode()) {\n        if (!isRoot(target))\n            warnError(\"Warning: Attaching onAction listeners to non root nodes is dangerous: No events will be emitted for actions initiated higher up in the tree.\");\n        if (!isProtected(target))\n            warnError(\"Warning: Attaching onAction listeners to non protected nodes is dangerous: No events will be emitted for direct modifications without action.\");\n    }\n    return addMiddleware(target, function handler(rawCall, next) {\n        if (rawCall.type === \"action\" && rawCall.id === rawCall.rootId) {\n            var sourceNode_1 = getStateTreeNode(rawCall.context);\n            var info = {\n                name: rawCall.name,\n                path: getRelativePathBetweenNodes(getStateTreeNode(target), sourceNode_1),\n                args: rawCall.args.map(function (arg, index) {\n                    return serializeArgument(sourceNode_1, rawCall.name, index, arg);\n                })\n            };\n            if (attachAfter) {\n                var res = next(rawCall);\n                listener(info);\n                return res;\n            }\n            else {\n                listener(info);\n                return next(rawCall);\n            }\n        }\n        else {\n            return next(rawCall);\n        }\n    });\n}\n\nvar nextActionId = 1;\nvar currentActionContext;\n/**\n * @internal\n * @hidden\n */\nfunction getCurrentActionContext() {\n    return currentActionContext;\n}\n/**\n * @internal\n * @hidden\n */\nfunction getNextActionId() {\n    return nextActionId++;\n}\n// TODO: optimize away entire action context if there is no middleware in tree?\n/**\n * @internal\n * @hidden\n */\nfunction runWithActionContext(context, fn) {\n    var node = getStateTreeNode(context.context);\n    if (context.type === \"action\") {\n        node.assertAlive({\n            actionContext: context\n        });\n    }\n    var baseIsRunningAction = node._isRunningAction;\n    node._isRunningAction = true;\n    var previousContext = currentActionContext;\n    currentActionContext = context;\n    try {\n        return runMiddleWares(node, context, fn);\n    }\n    finally {\n        currentActionContext = previousContext;\n        node._isRunningAction = baseIsRunningAction;\n    }\n}\n/**\n * @internal\n * @hidden\n */\nfunction getParentActionContext(parentContext) {\n    if (!parentContext)\n        return undefined;\n    if (parentContext.type === \"action\")\n        return parentContext;\n    return parentContext.parentActionEvent;\n}\n/**\n * @internal\n * @hidden\n */\nfunction createActionInvoker(target, name, fn) {\n    var res = function () {\n        var id = getNextActionId();\n        var parentContext = currentActionContext;\n        var parentActionContext = getParentActionContext(parentContext);\n        return runWithActionContext({\n            type: \"action\",\n            name: name,\n            id: id,\n            args: argsToArray(arguments),\n            context: target,\n            tree: getRoot(target),\n            rootId: parentContext ? parentContext.rootId : id,\n            parentId: parentContext ? parentContext.id : 0,\n            allParentIds: parentContext\n                ? __spread(parentContext.allParentIds, [parentContext.id]) : [],\n            parentEvent: parentContext,\n            parentActionEvent: parentActionContext\n        }, fn);\n    };\n    res._isMSTAction = true;\n    return res;\n}\n/**\n * Middleware can be used to intercept any action is invoked on the subtree where it is attached.\n * If a tree is protected (by default), this means that any mutation of the tree will pass through your middleware.\n *\n * For more details, see the [middleware docs](concepts/middleware.md)\n *\n * @param target Node to apply the middleware to.\n * @param middleware Middleware to apply.\n * @returns A callable function to dispose the middleware.\n */\nfunction addMiddleware(target, handler, includeHooks) {\n    if (includeHooks === void 0) { includeHooks = true; }\n    var node = getStateTreeNode(target);\n    if (devMode()) {\n        if (!node.isProtectionEnabled) {\n            warnError(\"It is recommended to protect the state tree before attaching action middleware, as otherwise it cannot be guaranteed that all changes are passed through middleware. See `protect`\");\n        }\n    }\n    return node.addMiddleWare(handler, includeHooks);\n}\n/**\n * Binds middleware to a specific action.\n *\n * Example:\n * ```ts\n * type.actions(self => {\n *   function takeA____() {\n *       self.toilet.donate()\n *       self.wipe()\n *       self.wipe()\n *       self.toilet.flush()\n *   }\n *   return {\n *     takeA____: decorate(atomic, takeA____)\n *   }\n * })\n * ```\n *\n * @param handler\n * @param fn\n * @param includeHooks\n * @returns The original function\n */\nfunction decorate(handler, fn, includeHooks) {\n    if (includeHooks === void 0) { includeHooks = true; }\n    var middleware = { handler: handler, includeHooks: includeHooks };\n    fn.$mst_middleware = fn.$mst_middleware || [];\n    fn.$mst_middleware.push(middleware);\n    return fn;\n}\nvar CollectedMiddlewares = /** @class */ (function () {\n    function CollectedMiddlewares(node, fn) {\n        Object.defineProperty(this, \"arrayIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"inArrayIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"middlewares\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // we just push middleware arrays into an array of arrays to avoid making copies\n        if (fn.$mst_middleware) {\n            this.middlewares.push(fn.$mst_middleware);\n        }\n        var n = node;\n        // Find all middlewares. Optimization: cache this?\n        while (n) {\n            if (n.middlewares)\n                this.middlewares.push(n.middlewares);\n            n = n.parent;\n        }\n    }\n    Object.defineProperty(CollectedMiddlewares.prototype, \"isEmpty\", {\n        get: function () {\n            return this.middlewares.length <= 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CollectedMiddlewares.prototype, \"getNextMiddleware\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var array = this.middlewares[this.arrayIndex];\n            if (!array)\n                return undefined;\n            var item = array[this.inArrayIndex++];\n            if (!item) {\n                this.arrayIndex++;\n                this.inArrayIndex = 0;\n                return this.getNextMiddleware();\n            }\n            return item;\n        }\n    });\n    return CollectedMiddlewares;\n}());\nfunction runMiddleWares(node, baseCall, originalFn) {\n    var middlewares = new CollectedMiddlewares(node, originalFn);\n    // Short circuit\n    if (middlewares.isEmpty)\n        return action(originalFn).apply(null, baseCall.args);\n    var result = null;\n    function runNextMiddleware(call) {\n        var middleware = middlewares.getNextMiddleware();\n        var handler = middleware && middleware.handler;\n        if (!handler) {\n            return action(originalFn).apply(null, call.args);\n        }\n        // skip hooks if asked to\n        if (!middleware.includeHooks && Hook[call.name]) {\n            return runNextMiddleware(call);\n        }\n        var nextInvoked = false;\n        function next(call2, callback) {\n            nextInvoked = true;\n            // the result can contain\n            // - the non manipulated return value from an action\n            // - the non manipulated abort value\n            // - one of the above but manipulated through the callback function\n            result = runNextMiddleware(call2);\n            if (callback) {\n                result = callback(result);\n            }\n        }\n        var abortInvoked = false;\n        function abort(value) {\n            abortInvoked = true;\n            // overwrite the result\n            // can be manipulated through middlewares earlier in the queue using the callback fn\n            result = value;\n        }\n        handler(call, next, abort);\n        if (devMode()) {\n            if (!nextInvoked && !abortInvoked) {\n                var node2 = getStateTreeNode(call.tree);\n                throw fail$1(\"Neither the next() nor the abort() callback within the middleware \" + handler.name + \" for the action: \\\"\" + call.name + \"\\\" on the node: \" + node2.type.name + \" was invoked.\");\n            }\n            else if (nextInvoked && abortInvoked) {\n                var node2 = getStateTreeNode(call.tree);\n                throw fail$1(\"The next() and abort() callback within the middleware \" + handler.name + \" for the action: \\\"\" + call.name + \"\\\" on the node: \" + node2.type.name + \" were invoked.\");\n            }\n        }\n        return result;\n    }\n    return runNextMiddleware(baseCall);\n}\n\n/**\n * Returns the currently executing MST action context, or undefined if none.\n */\nfunction getRunningActionContext() {\n    var current = getCurrentActionContext();\n    while (current && current.type !== \"action\") {\n        current = current.parentActionEvent;\n    }\n    return current;\n}\nfunction _isActionContextThisOrChildOf(actionContext, sameOrParent, includeSame) {\n    var parentId = typeof sameOrParent === \"number\" ? sameOrParent : sameOrParent.id;\n    var current = includeSame\n        ? actionContext\n        : actionContext.parentActionEvent;\n    while (current) {\n        if (current.id === parentId) {\n            return true;\n        }\n        current = current.parentActionEvent;\n    }\n    return false;\n}\n/**\n * Returns if the given action context is a parent of this action context.\n */\nfunction isActionContextChildOf(actionContext, parent) {\n    return _isActionContextThisOrChildOf(actionContext, parent, false);\n}\n/**\n * Returns if the given action context is this or a parent of this action context.\n */\nfunction isActionContextThisOrChildOf(actionContext, parentOrThis) {\n    return _isActionContextThisOrChildOf(actionContext, parentOrThis, true);\n}\n\nfunction safeStringify(value) {\n    try {\n        return JSON.stringify(value);\n    }\n    catch (e) {\n        // istanbul ignore next\n        return \"<Unserializable: \" + e + \">\";\n    }\n}\n/**\n * @internal\n * @hidden\n */\nfunction prettyPrintValue(value) {\n    return typeof value === \"function\"\n        ? \"<function\" + (value.name ? \" \" + value.name : \"\") + \">\"\n        : isStateTreeNode(value)\n            ? \"<\" + value + \">\"\n            : \"`\" + safeStringify(value) + \"`\";\n}\nfunction shortenPrintValue(valueInString) {\n    return valueInString.length < 280\n        ? valueInString\n        : valueInString.substring(0, 272) + \"......\" + valueInString.substring(valueInString.length - 8);\n}\nfunction toErrorString(error) {\n    var value = error.value;\n    var type = error.context[error.context.length - 1].type;\n    var fullPath = error.context\n        .map(function (_a) {\n        var path = _a.path;\n        return path;\n    })\n        .filter(function (path) { return path.length > 0; })\n        .join(\"/\");\n    var pathPrefix = fullPath.length > 0 ? \"at path \\\"/\" + fullPath + \"\\\" \" : \"\";\n    var currentTypename = isStateTreeNode(value)\n        ? \"value of type \" + getStateTreeNode(value).type.name + \":\"\n        : isPrimitive(value)\n            ? \"value\"\n            : \"snapshot\";\n    var isSnapshotCompatible = type && isStateTreeNode(value) && type.is(getStateTreeNode(value).snapshot);\n    return (\"\" + pathPrefix + currentTypename + \" \" + prettyPrintValue(value) + \" is not assignable \" + (type ? \"to type: `\" + type.name + \"`\" : \"\") +\n        (error.message ? \" (\" + error.message + \")\" : \"\") +\n        (type\n            ? isPrimitiveType(type) || isPrimitive(value)\n                ? \".\"\n                : \", expected an instance of `\" + type.name + \"` or a snapshot like `\" + type.describe() + \"` instead.\" +\n                    (isSnapshotCompatible\n                        ? \" (Note that a snapshot of the provided value is compatible with the targeted type)\"\n                        : \"\")\n            : \".\"));\n}\n/**\n * @internal\n * @hidden\n */\nfunction getContextForPath(context, path, type) {\n    return context.concat([{ path: path, type: type }]);\n}\n/**\n * @internal\n * @hidden\n */\nfunction typeCheckSuccess() {\n    return EMPTY_ARRAY;\n}\n/**\n * @internal\n * @hidden\n */\nfunction typeCheckFailure(context, value, message) {\n    return [{ context: context, value: value, message: message }];\n}\n/**\n * @internal\n * @hidden\n */\nfunction flattenTypeErrors(errors) {\n    return errors.reduce(function (a, i) { return a.concat(i); }, []);\n}\n// TODO; doublecheck: typecheck should only needed to be invoked from: type.create and array / map / value.property will change\n/**\n * @internal\n * @hidden\n */\nfunction typecheckInternal(type, value) {\n    // runs typeChecking if it is in dev-mode or through a process.env.ENABLE_TYPE_CHECK flag\n    if (isTypeCheckingEnabled()) {\n        typecheck(type, value);\n    }\n}\n/**\n * Run's the typechecker for the given type on the given value, which can be a snapshot or an instance.\n * Throws if the given value is not according the provided type specification.\n * Use this if you need typechecks even in a production build (by default all automatic runtime type checks will be skipped in production builds)\n *\n * @param type Type to check against.\n * @param value Value to be checked, either a snapshot or an instance.\n */\nfunction typecheck(type, value) {\n    var errors = type.validate(value, [{ path: \"\", type: type }]);\n    if (errors.length > 0) {\n        throw fail$1(validationErrorsToString(type, value, errors));\n    }\n}\nfunction validationErrorsToString(type, value, errors) {\n    if (errors.length === 0) {\n        return undefined;\n    }\n    return (\"Error while converting \" + shortenPrintValue(prettyPrintValue(value)) + \" to `\" + type.name + \"`:\\n\\n    \" + errors.map(toErrorString).join(\"\\n    \"));\n}\n\nvar identifierCacheId = 0;\n/**\n * @internal\n * @hidden\n */\nvar IdentifierCache = /** @class */ (function () {\n    function IdentifierCache() {\n        Object.defineProperty(this, \"cacheId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: identifierCacheId++\n        });\n        // n.b. in cache all identifiers are normalized to strings\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: observable.map()\n        });\n        // last time the cache (array) for a given time changed\n        // n.b. it is not really the time, but just an integer that gets increased after each modification to the array\n        Object.defineProperty(this, \"lastCacheModificationPerId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: observable.map()\n        });\n    }\n    Object.defineProperty(IdentifierCache.prototype, \"updateLastCacheModificationPerId\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (identifier) {\n            var lcm = this.lastCacheModificationPerId.get(identifier);\n            // we start at 1 since 0 means no update since cache creation\n            this.lastCacheModificationPerId.set(identifier, lcm === undefined ? 1 : lcm + 1);\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"getLastCacheModificationPerId\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (identifier) {\n            var modificationId = this.lastCacheModificationPerId.get(identifier) || 0;\n            return this.cacheId + \"-\" + modificationId;\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"addNodeToCache\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, lastCacheUpdate) {\n            if (lastCacheUpdate === void 0) { lastCacheUpdate = true; }\n            if (node.identifierAttribute) {\n                var identifier = node.identifier;\n                if (!this.cache.has(identifier)) {\n                    this.cache.set(identifier, observable.array([], mobxShallow));\n                }\n                var set = this.cache.get(identifier);\n                if (set.indexOf(node) !== -1)\n                    throw fail$1(\"Already registered\");\n                set.push(node);\n                if (lastCacheUpdate) {\n                    this.updateLastCacheModificationPerId(identifier);\n                }\n            }\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"mergeCache\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            var _this = this;\n            values(node.identifierCache.cache).forEach(function (nodes) {\n                return nodes.forEach(function (child) {\n                    _this.addNodeToCache(child);\n                });\n            });\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"notifyDied\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            if (node.identifierAttribute) {\n                var id = node.identifier;\n                var set = this.cache.get(id);\n                if (set) {\n                    set.remove(node);\n                    // remove empty sets from cache\n                    if (!set.length) {\n                        this.cache.delete(id);\n                    }\n                    this.updateLastCacheModificationPerId(node.identifier);\n                }\n            }\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"splitCache\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            var _this = this;\n            var res = new IdentifierCache();\n            var basePath = node.path;\n            entries(this.cache).forEach(function (_a) {\n                var _b = __read(_a, 2), id = _b[0], nodes = _b[1];\n                var modified = false;\n                for (var i = nodes.length - 1; i >= 0; i--) {\n                    if (nodes[i].path.indexOf(basePath) === 0) {\n                        res.addNodeToCache(nodes[i], false); // no need to update lastUpdated since it is a whole new cache\n                        nodes.splice(i, 1);\n                        modified = true;\n                    }\n                }\n                if (modified) {\n                    _this.updateLastCacheModificationPerId(id);\n                }\n            });\n            return res;\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"has\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type, identifier) {\n            var set = this.cache.get(identifier);\n            if (!set)\n                return false;\n            return set.some(function (candidate) { return type.isAssignableFrom(candidate.type); });\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"resolve\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type, identifier) {\n            var set = this.cache.get(identifier);\n            if (!set)\n                return null;\n            var matches = set.filter(function (candidate) { return type.isAssignableFrom(candidate.type); });\n            switch (matches.length) {\n                case 0:\n                    return null;\n                case 1:\n                    return matches[0];\n                default:\n                    throw fail$1(\"Cannot resolve a reference to type '\" + type.name + \"' with id: '\" + identifier + \"' unambigously, there are multiple candidates: \" + matches\n                        .map(function (n) { return n.path; })\n                        .join(\", \"));\n            }\n        }\n    });\n    return IdentifierCache;\n}());\n\n/**\n * @internal\n * @hidden\n */\nfunction createObjectNode(type, parent, subpath, environment, initialValue) {\n    var existingNode = getStateTreeNodeSafe(initialValue);\n    if (existingNode) {\n        if (existingNode.parent) {\n            // istanbul ignore next\n            throw fail$1(\"Cannot add an object to a state tree if it is already part of the same or another state tree. Tried to assign an object to '\" + (parent ? parent.path : \"\") + \"/\" + subpath + \"', but it lives already at '\" + existingNode.path + \"'\");\n        }\n        if (parent) {\n            existingNode.setParent(parent, subpath);\n        }\n        // else it already has no parent since it is a pre-requisite\n        return existingNode;\n    }\n    // not a node, a snapshot\n    return new ObjectNode(type, parent, subpath, environment, initialValue);\n}\n/**\n * @internal\n * @hidden\n */\nfunction createScalarNode(type, parent, subpath, environment, initialValue) {\n    return new ScalarNode(type, parent, subpath, environment, initialValue);\n}\n/**\n * @internal\n * @hidden\n */\nfunction isNode(value) {\n    return value instanceof ScalarNode || value instanceof ObjectNode;\n}\n\n/**\n * @internal\n * @hidden\n */\nvar NodeLifeCycle;\n(function (NodeLifeCycle) {\n    NodeLifeCycle[NodeLifeCycle[\"INITIALIZING\"] = 0] = \"INITIALIZING\";\n    NodeLifeCycle[NodeLifeCycle[\"CREATED\"] = 1] = \"CREATED\";\n    NodeLifeCycle[NodeLifeCycle[\"FINALIZED\"] = 2] = \"FINALIZED\";\n    NodeLifeCycle[NodeLifeCycle[\"DETACHING\"] = 3] = \"DETACHING\";\n    NodeLifeCycle[NodeLifeCycle[\"DEAD\"] = 4] = \"DEAD\"; // no coming back from this one\n})(NodeLifeCycle || (NodeLifeCycle = {}));\n/**\n * Returns true if the given value is a node in a state tree.\n * More precisely, that is, if the value is an instance of a\n * `types.model`, `types.array` or `types.map`.\n *\n * @param value\n * @returns true if the value is a state tree node.\n */\nfunction isStateTreeNode(value) {\n    return !!(value && value.$treenode);\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertIsStateTreeNode(value, argNumber) {\n    assertArg(value, isStateTreeNode, \"mobx-state-tree node\", argNumber);\n}\n/**\n * @internal\n * @hidden\n */\nfunction getStateTreeNode(value) {\n    if (!isStateTreeNode(value)) {\n        // istanbul ignore next\n        throw fail$1(\"Value \" + value + \" is no MST Node\");\n    }\n    return value.$treenode;\n}\n/**\n * @internal\n * @hidden\n */\nfunction getStateTreeNodeSafe(value) {\n    return (value && value.$treenode) || null;\n}\n/**\n * @internal\n * @hidden\n */\nfunction toJSON() {\n    return getStateTreeNode(this).snapshot;\n}\nvar doubleDot = function (_) { return \"..\"; };\n/**\n * @internal\n * @hidden\n */\nfunction getRelativePathBetweenNodes(base, target) {\n    // PRE condition target is (a child of) base!\n    if (base.root !== target.root) {\n        throw fail$1(\"Cannot calculate relative path: objects '\" + base + \"' and '\" + target + \"' are not part of the same object tree\");\n    }\n    var baseParts = splitJsonPath(base.path);\n    var targetParts = splitJsonPath(target.path);\n    var common = 0;\n    for (; common < baseParts.length; common++) {\n        if (baseParts[common] !== targetParts[common])\n            break;\n    }\n    // TODO: assert that no targetParts paths are \"..\", \".\" or \"\"!\n    return (baseParts.slice(common).map(doubleDot).join(\"/\") + joinJsonPath(targetParts.slice(common)));\n}\n/**\n * @internal\n * @hidden\n */\nfunction resolveNodeByPath(base, path, failIfResolveFails) {\n    if (failIfResolveFails === void 0) { failIfResolveFails = true; }\n    return resolveNodeByPathParts(base, splitJsonPath(path), failIfResolveFails);\n}\n/**\n * @internal\n * @hidden\n */\nfunction resolveNodeByPathParts(base, pathParts, failIfResolveFails) {\n    if (failIfResolveFails === void 0) { failIfResolveFails = true; }\n    var current = base;\n    for (var i = 0; i < pathParts.length; i++) {\n        var part = pathParts[i];\n        if (part === \"..\") {\n            current = current.parent;\n            if (current)\n                continue; // not everything has a parent\n        }\n        else if (part === \".\") {\n            continue;\n        }\n        else if (current) {\n            if (current instanceof ScalarNode) {\n                // check if the value of a scalar resolves to a state tree node (e.g. references)\n                // then we can continue resolving...\n                try {\n                    var value = current.value;\n                    if (isStateTreeNode(value)) {\n                        current = getStateTreeNode(value);\n                        // fall through\n                    }\n                }\n                catch (e) {\n                    if (!failIfResolveFails) {\n                        return undefined;\n                    }\n                    throw e;\n                }\n            }\n            if (current instanceof ObjectNode) {\n                var subType = current.getChildType(part);\n                if (subType) {\n                    current = current.getChildNode(part);\n                    if (current)\n                        continue;\n                }\n            }\n        }\n        if (failIfResolveFails)\n            throw fail$1(\"Could not resolve '\" + part + \"' in path '\" + (joinJsonPath(pathParts.slice(0, i)) || \"/\") + \"' while resolving '\" + joinJsonPath(pathParts) + \"'\");\n        else\n            return undefined;\n    }\n    return current;\n}\n/**\n * @internal\n * @hidden\n */\nfunction convertChildNodesToArray(childNodes) {\n    if (!childNodes)\n        return EMPTY_ARRAY;\n    var keys = Object.keys(childNodes);\n    if (!keys.length)\n        return EMPTY_ARRAY;\n    var result = new Array(keys.length);\n    keys.forEach(function (key, index) {\n        result[index] = childNodes[key];\n    });\n    return result;\n}\n\n// based on: https://github.com/mobxjs/mobx-utils/blob/master/src/async-action.ts\n/*\n    All contents of this file are deprecated.\n\n    The term `process` has been replaced with `flow` to avoid conflicts with the\n    global `process` object.\n\n    Refer to `flow.ts` for any further changes to this implementation.\n*/\nvar DEPRECATION_MESSAGE = \"See https://github.com/mobxjs/mobx-state-tree/issues/399 for more information. \" +\n    \"Note that the middleware event types starting with `process` now start with `flow`.\";\n/**\n * @hidden\n *\n * @deprecated has been renamed to `flow()`.\n * See https://github.com/mobxjs/mobx-state-tree/issues/399 for more information.\n * Note that the middleware event types starting with `process` now start with `flow`.\n *\n * @returns {Promise}\n */\nfunction process$1(asyncAction) {\n    deprecated(\"process\", \"`process()` has been renamed to `flow()`. \" + DEPRECATION_MESSAGE);\n    return flow(asyncAction);\n}\n\nvar plainObjectString = Object.toString();\n/**\n * @internal\n * @hidden\n */\nvar EMPTY_ARRAY = Object.freeze([]);\n/**\n * @internal\n * @hidden\n */\nvar EMPTY_OBJECT = Object.freeze({});\n/**\n * @internal\n * @hidden\n */\nvar mobxShallow = _getGlobalState().useProxies\n    ? { deep: false }\n    : { deep: false, proxy: false };\nObject.freeze(mobxShallow);\n/**\n * @internal\n * @hidden\n */\nfunction fail$1(message) {\n    if (message === void 0) { message = \"Illegal state\"; }\n    return new Error(\"[mobx-state-tree] \" + message);\n}\n/**\n * @internal\n * @hidden\n */\nfunction identity(_) {\n    return _;\n}\n/**\n * pollyfill (for IE) suggested in MDN:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n * @internal\n * @hidden\n */\nvar isInteger = Number.isInteger ||\n    function (value) {\n        return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n    };\n/**\n * @internal\n * @hidden\n */\nfunction isArray(val) {\n    return Array.isArray(val) || isObservableArray(val);\n}\n/**\n * @internal\n * @hidden\n */\nfunction asArray(val) {\n    if (!val)\n        return EMPTY_ARRAY;\n    if (isArray(val))\n        return val;\n    return [val];\n}\n/**\n * @internal\n * @hidden\n */\nfunction extend(a) {\n    var b = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        b[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < b.length; i++) {\n        var current = b[i];\n        for (var key in current)\n            a[key] = current[key];\n    }\n    return a;\n}\n/**\n * @internal\n * @hidden\n */\nfunction isPlainObject(value) {\n    var _a;\n    if (value === null || typeof value !== \"object\")\n        return false;\n    var proto = Object.getPrototypeOf(value);\n    if (proto == null)\n        return true;\n    return ((_a = proto.constructor) === null || _a === void 0 ? void 0 : _a.toString()) === plainObjectString;\n}\n/**\n * @internal\n * @hidden\n */\nfunction isMutable(value) {\n    return (value !== null &&\n        typeof value === \"object\" &&\n        !(value instanceof Date) &&\n        !(value instanceof RegExp));\n}\n/**\n * @internal\n * @hidden\n */\nfunction isPrimitive(value, includeDate) {\n    if (includeDate === void 0) { includeDate = true; }\n    return (value === null ||\n        value === undefined ||\n        typeof value === \"string\" ||\n        typeof value === \"number\" ||\n        typeof value === \"boolean\" ||\n        (includeDate && value instanceof Date));\n}\n/**\n * @internal\n * @hidden\n * Freeze a value and return it (if not in production)\n */\nfunction freeze(value) {\n    if (!devMode())\n        return value;\n    return isPrimitive(value) || isObservableArray(value) ? value : Object.freeze(value);\n}\n/**\n * @internal\n * @hidden\n * Recursively freeze a value (if not in production)\n */\nfunction deepFreeze(value) {\n    if (!devMode())\n        return value;\n    freeze(value);\n    if (isPlainObject(value)) {\n        Object.keys(value).forEach(function (propKey) {\n            if (!isPrimitive(value[propKey]) &&\n                !Object.isFrozen(value[propKey])) {\n                deepFreeze(value[propKey]);\n            }\n        });\n    }\n    return value;\n}\n/**\n * @internal\n * @hidden\n */\nfunction isSerializable(value) {\n    return typeof value !== \"function\";\n}\n/**\n * @internal\n * @hidden\n */\nfunction defineProperty(object, key, descriptor) {\n    isObservableObject(object)\n        ? defineProperty$1(object, key, descriptor)\n        : Object.defineProperty(object, key, descriptor);\n}\n/**\n * @internal\n * @hidden\n */\nfunction addHiddenFinalProp(object, propName, value) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value: value\n    });\n}\n/**\n * @internal\n * @hidden\n */\nfunction addHiddenWritableProp(object, propName, value) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value: value\n    });\n}\n/**\n * @internal\n * @hidden\n */\nvar EventHandler = /** @class */ (function () {\n    function EventHandler() {\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    Object.defineProperty(EventHandler.prototype, \"hasSubscribers\", {\n        get: function () {\n            return this.handlers.length > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EventHandler.prototype, \"register\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn, atTheBeginning) {\n            var _this = this;\n            if (atTheBeginning === void 0) { atTheBeginning = false; }\n            if (atTheBeginning) {\n                this.handlers.unshift(fn);\n            }\n            else {\n                this.handlers.push(fn);\n            }\n            return function () {\n                _this.unregister(fn);\n            };\n        }\n    });\n    Object.defineProperty(EventHandler.prototype, \"has\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            return this.handlers.indexOf(fn) >= 0;\n        }\n    });\n    Object.defineProperty(EventHandler.prototype, \"unregister\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            var index = this.handlers.indexOf(fn);\n            if (index >= 0) {\n                this.handlers.splice(index, 1);\n            }\n        }\n    });\n    Object.defineProperty(EventHandler.prototype, \"clear\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.handlers.length = 0;\n        }\n    });\n    Object.defineProperty(EventHandler.prototype, \"emit\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // make a copy just in case it changes\n            var handlers = this.handlers.slice();\n            handlers.forEach(function (f) { return f.apply(void 0, __spread(args)); });\n        }\n    });\n    return EventHandler;\n}());\n/**\n * @internal\n * @hidden\n */\nvar EventHandlers = /** @class */ (function () {\n    function EventHandlers() {\n        Object.defineProperty(this, \"eventHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    Object.defineProperty(EventHandlers.prototype, \"hasSubscribers\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event) {\n            var handler = this.eventHandlers && this.eventHandlers[event];\n            return !!handler && handler.hasSubscribers;\n        }\n    });\n    Object.defineProperty(EventHandlers.prototype, \"register\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event, fn, atTheBeginning) {\n            if (atTheBeginning === void 0) { atTheBeginning = false; }\n            if (!this.eventHandlers) {\n                this.eventHandlers = {};\n            }\n            var handler = this.eventHandlers[event];\n            if (!handler) {\n                handler = this.eventHandlers[event] = new EventHandler();\n            }\n            return handler.register(fn, atTheBeginning);\n        }\n    });\n    Object.defineProperty(EventHandlers.prototype, \"has\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event, fn) {\n            var handler = this.eventHandlers && this.eventHandlers[event];\n            return !!handler && handler.has(fn);\n        }\n    });\n    Object.defineProperty(EventHandlers.prototype, \"unregister\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event, fn) {\n            var handler = this.eventHandlers && this.eventHandlers[event];\n            if (handler) {\n                handler.unregister(fn);\n            }\n        }\n    });\n    Object.defineProperty(EventHandlers.prototype, \"clear\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event) {\n            if (this.eventHandlers) {\n                delete this.eventHandlers[event];\n            }\n        }\n    });\n    Object.defineProperty(EventHandlers.prototype, \"clearAll\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.eventHandlers = undefined;\n        }\n    });\n    Object.defineProperty(EventHandlers.prototype, \"emit\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event) {\n            var _a;\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var handler = this.eventHandlers && this.eventHandlers[event];\n            if (handler) {\n                (_a = handler).emit.apply(_a, __spread(args));\n            }\n        }\n    });\n    return EventHandlers;\n}());\n/**\n * @internal\n * @hidden\n */\nfunction argsToArray(args) {\n    var res = new Array(args.length);\n    for (var i = 0; i < args.length; i++)\n        res[i] = args[i];\n    return res;\n}\n/**\n * @internal\n * @hidden\n */\nfunction stringStartsWith(str, beginning) {\n    return str.indexOf(beginning) === 0;\n}\n/**\n * @internal\n * @hidden\n */\nvar deprecated = function (id, message) {\n    // skip if running production\n    if (!devMode())\n        return;\n    // warn if hasn't been warned before\n    if (deprecated.ids && !deprecated.ids.hasOwnProperty(id)) {\n        warnError(\"Deprecation warning: \" + message);\n    }\n    // mark as warned to avoid duplicate warn message\n    if (deprecated.ids)\n        deprecated.ids[id] = true;\n};\ndeprecated.ids = {};\n/**\n * @internal\n * @hidden\n */\nfunction warnError(msg) {\n    console.warn(new Error(\"[mobx-state-tree] \" + msg));\n}\n/**\n * @internal\n * @hidden\n */\nfunction isTypeCheckingEnabled() {\n    return (devMode() ||\n        (typeof process !== \"undefined\" && process.env && process.env.ENABLE_TYPE_CHECK === \"true\"));\n}\n/**\n * @internal\n * @hidden\n */\nfunction devMode() {\n    return process.env.NODE_ENV !== \"production\";\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertArg(value, fn, typeName, argNumber) {\n    if (devMode()) {\n        if (!fn(value)) {\n            // istanbul ignore next\n            throw fail$1(\"expected \" + typeName + \" as argument \" + asArray(argNumber).join(\" or \") + \", got \" + value + \" instead\");\n        }\n    }\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertIsFunction(value, argNumber) {\n    assertArg(value, function (fn) { return typeof fn === \"function\"; }, \"function\", argNumber);\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertIsNumber(value, argNumber, min, max) {\n    assertArg(value, function (n) { return typeof n === \"number\"; }, \"number\", argNumber);\n    if (min !== undefined) {\n        assertArg(value, function (n) { return n >= min; }, \"number greater than \" + min, argNumber);\n    }\n    if (max !== undefined) {\n        assertArg(value, function (n) { return n <= max; }, \"number lesser than \" + max, argNumber);\n    }\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertIsString(value, argNumber, canBeEmpty) {\n    if (canBeEmpty === void 0) { canBeEmpty = true; }\n    assertArg(value, function (s) { return typeof s === \"string\"; }, \"string\", argNumber);\n    if (!canBeEmpty) {\n        assertArg(value, function (s) { return s !== \"\"; }, \"not empty string\", argNumber);\n    }\n}\n/**\n * @internal\n * @hidden\n */\nfunction setImmediateWithFallback(fn) {\n    if (typeof queueMicrotask === \"function\") {\n        queueMicrotask(fn);\n    }\n    else if (typeof setImmediate === \"function\") {\n        setImmediate(fn);\n    }\n    else {\n        setTimeout(fn, 1);\n    }\n}\n\n/**\n * See [asynchronous actions](concepts/async-actions.md).\n *\n * @returns The flow as a promise.\n */\nfunction flow(generator) {\n    return createFlowSpawner(generator.name, generator);\n}\n/**\n * @deprecated Not needed since TS3.6.\n * Used for TypeScript to make flows that return a promise return the actual promise result.\n *\n * @param val\n * @returns\n */\nfunction castFlowReturn(val) {\n    return val;\n}\n/**\n * @experimental\n * experimental api - might change on minor/patch releases\n *\n * Convert a promise-returning function to a generator-returning one.\n * This is intended to allow for usage of `yield*` in async actions to\n * retain the promise return type.\n *\n * Example:\n * ```ts\n * function getDataAsync(input: string): Promise<number> { ... }\n * const getDataGen = toGeneratorFunction(getDataAsync);\n *\n * const someModel.actions(self => ({\n *   someAction: flow(function*() {\n *     // value is typed as number\n *     const value = yield* getDataGen(\"input value\");\n *     ...\n *   })\n * }))\n * ```\n */\nfunction toGeneratorFunction(p) {\n    return function () {\n        var _i;\n        var args = [];\n        for (_i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, p.apply(void 0, __spread(args))];\n                case 1: return [2 /*return*/, (_a.sent())];\n            }\n        });\n    };\n}\n/**\n * @experimental\n * experimental api - might change on minor/patch releases\n *\n * Convert a promise to a generator yielding that promise\n * This is intended to allow for usage of `yield*` in async actions to\n * retain the promise return type.\n *\n * Example:\n * ```ts\n * function getDataAsync(input: string): Promise<number> { ... }\n *\n * const someModel.actions(self => ({\n *   someAction: flow(function*() {\n *     // value is typed as number\n *     const value = yield* toGenerator(getDataAsync(\"input value\"));\n *     ...\n *   })\n * }))\n * ```\n */\nfunction toGenerator(p) {\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, p];\n            case 1: return [2 /*return*/, (_a.sent())];\n        }\n    });\n}\n/**\n * @internal\n * @hidden\n */\nfunction createFlowSpawner(name, generator) {\n    var spawner = function flowSpawner() {\n        // Implementation based on https://github.com/tj/co/blob/master/index.js\n        var runId = getNextActionId();\n        var parentContext = getCurrentActionContext();\n        if (!parentContext) {\n            throw fail$1(\"a mst flow must always have a parent context\");\n        }\n        var parentActionContext = getParentActionContext(parentContext);\n        if (!parentActionContext) {\n            throw fail$1(\"a mst flow must always have a parent action context\");\n        }\n        var contextBase = {\n            name: name,\n            id: runId,\n            tree: parentContext.tree,\n            context: parentContext.context,\n            parentId: parentContext.id,\n            allParentIds: __spread(parentContext.allParentIds, [parentContext.id]),\n            rootId: parentContext.rootId,\n            parentEvent: parentContext,\n            parentActionEvent: parentActionContext\n        };\n        var args = arguments;\n        function wrap(fn, type, arg) {\n            fn.$mst_middleware = spawner.$mst_middleware; // pick up any middleware attached to the flow\n            runWithActionContext(__assign(__assign({}, contextBase), { type: type, args: [arg] }), fn);\n        }\n        return new Promise(function (resolve, reject) {\n            var gen;\n            var init = function asyncActionInit() {\n                gen = generator.apply(null, arguments);\n                onFulfilled(undefined); // kick off the flow\n            };\n            init.$mst_middleware = spawner.$mst_middleware;\n            runWithActionContext(__assign(__assign({}, contextBase), { type: \"flow_spawn\", args: argsToArray(args) }), init);\n            function onFulfilled(res) {\n                var ret;\n                try {\n                    // prettier-ignore\n                    wrap(function (r) { ret = gen.next(r); }, \"flow_resume\", res);\n                }\n                catch (e) {\n                    // prettier-ignore\n                    setImmediateWithFallback(function () {\n                        wrap(function (r) { reject(e); }, \"flow_throw\", e);\n                    });\n                    return;\n                }\n                next(ret);\n                return;\n            }\n            function onRejected(err) {\n                var ret;\n                try {\n                    // prettier-ignore\n                    wrap(function (r) { ret = gen.throw(r); }, \"flow_resume_error\", err); // or yieldError?\n                }\n                catch (e) {\n                    // prettier-ignore\n                    setImmediateWithFallback(function () {\n                        wrap(function (r) { reject(e); }, \"flow_throw\", e);\n                    });\n                    return;\n                }\n                next(ret);\n            }\n            function next(ret) {\n                if (ret.done) {\n                    // prettier-ignore\n                    setImmediateWithFallback(function () {\n                        wrap(function (r) { resolve(r); }, \"flow_return\", ret.value);\n                    });\n                    return;\n                }\n                // TODO: support more type of values? See https://github.com/tj/co/blob/249bbdc72da24ae44076afd716349d2089b31c4c/index.js#L100\n                if (!ret.value || typeof ret.value.then !== \"function\") {\n                    // istanbul ignore next\n                    throw fail$1(\"Only promises can be yielded to `async`, got: \" + ret);\n                }\n                return ret.value.then(onFulfilled, onRejected);\n            }\n        });\n    };\n    return spawner;\n}\n\n/**\n * @internal\n * @hidden\n */\nfunction splitPatch(patch) {\n    if (!(\"oldValue\" in patch))\n        throw fail$1(\"Patches without `oldValue` field cannot be inversed\");\n    return [stripPatch(patch), invertPatch(patch)];\n}\n/**\n * @internal\n * @hidden\n */\nfunction stripPatch(patch) {\n    // strips `oldvalue` information from the patch, so that it becomes a patch conform the json-patch spec\n    // this removes the ability to undo the patch\n    switch (patch.op) {\n        case \"add\":\n            return { op: \"add\", path: patch.path, value: patch.value };\n        case \"remove\":\n            return { op: \"remove\", path: patch.path };\n        case \"replace\":\n            return { op: \"replace\", path: patch.path, value: patch.value };\n    }\n}\nfunction invertPatch(patch) {\n    switch (patch.op) {\n        case \"add\":\n            return {\n                op: \"remove\",\n                path: patch.path\n            };\n        case \"remove\":\n            return {\n                op: \"add\",\n                path: patch.path,\n                value: patch.oldValue\n            };\n        case \"replace\":\n            return {\n                op: \"replace\",\n                path: patch.path,\n                value: patch.oldValue\n            };\n    }\n}\n/**\n * Simple simple check to check it is a number.\n */\nfunction isNumber(x) {\n    return typeof x === \"number\";\n}\n/**\n * Escape slashes and backslashes.\n *\n * http://tools.ietf.org/html/rfc6901\n */\nfunction escapeJsonPath(path) {\n    if (isNumber(path) === true) {\n        return \"\" + path;\n    }\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\n        return path;\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescape slashes and backslashes.\n */\nfunction unescapeJsonPath(path) {\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\n/**\n * Generates a json-path compliant json path from path parts.\n *\n * @param path\n * @returns\n */\nfunction joinJsonPath(path) {\n    // `/` refers to property with an empty name, while `` refers to root itself!\n    if (path.length === 0)\n        return \"\";\n    var getPathStr = function (p) { return p.map(escapeJsonPath).join(\"/\"); };\n    if (path[0] === \".\" || path[0] === \"..\") {\n        // relative\n        return getPathStr(path);\n    }\n    else {\n        // absolute\n        return \"/\" + getPathStr(path);\n    }\n}\n/**\n * Splits and decodes a json path into several parts.\n *\n * @param path\n * @returns\n */\nfunction splitJsonPath(path) {\n    // `/` refers to property with an empty name, while `` refers to root itself!\n    var parts = path.split(\"/\").map(unescapeJsonPath);\n    var valid = path === \"\" ||\n        path === \".\" ||\n        path === \"..\" ||\n        stringStartsWith(path, \"/\") ||\n        stringStartsWith(path, \"./\") ||\n        stringStartsWith(path, \"../\");\n    if (!valid) {\n        throw fail$1(\"a json path must be either rooted, empty or relative, but got '\" + path + \"'\");\n    }\n    // '/a/b/c' -> [\"a\", \"b\", \"c\"]\n    // '../../b/c' -> [\"..\", \"..\", \"b\", \"c\"]\n    // '' -> []\n    // '/' -> ['']\n    // './a' -> [\".\", \"a\"]\n    // /./a' -> [\".\", \"a\"] equivalent to './a'\n    if (parts[0] === \"\") {\n        parts.shift();\n    }\n    return parts;\n}\n\n/** @hidden */\nvar $preProcessorFailed = Symbol(\"$preProcessorFailed\");\nvar SnapshotProcessor = /** @class */ (function (_super) {\n    __extends(SnapshotProcessor, _super);\n    function SnapshotProcessor(_subtype, _processors, name) {\n        var _this = _super.call(this, name || _subtype.name) || this;\n        Object.defineProperty(_this, \"_subtype\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _subtype\n        });\n        Object.defineProperty(_this, \"_processors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _processors\n        });\n        return _this;\n    }\n    Object.defineProperty(SnapshotProcessor.prototype, \"flags\", {\n        get: function () {\n            return this._subtype.flags | TypeFlags.SnapshotProcessor;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return \"snapshotProcessor(\" + this._subtype.describe() + \")\";\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"preProcessSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (sn) {\n            if (this._processors.preProcessor) {\n                return this._processors.preProcessor.call(null, sn);\n            }\n            return sn;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"preProcessSnapshotSafe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (sn) {\n            try {\n                return this.preProcessSnapshot(sn);\n            }\n            catch (e) {\n                return $preProcessorFailed;\n            }\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"postProcessSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (sn) {\n            if (this._processors.postProcessor) {\n                return this._processors.postProcessor.call(null, sn);\n            }\n            return sn;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"_fixNode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            var _this = this;\n            // the node has to use these methods rather than the original type ones\n            proxyNodeTypeMethods(node.type, this, \"create\");\n            var oldGetSnapshot = node.getSnapshot;\n            node.getSnapshot = function () {\n                return _this.postProcessSnapshot(oldGetSnapshot.call(node));\n            };\n            node.getReconciliationType = function () {\n                return _this;\n            };\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            var processedInitialValue = isStateTreeNode(initialValue)\n                ? initialValue\n                : this.preProcessSnapshot(initialValue);\n            var node = this._subtype.instantiate(parent, subpath, environment, processedInitialValue);\n            this._fixNode(node);\n            return node;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            var node = this._subtype.reconcile(current, isStateTreeNode(newValue) ? newValue : this.preProcessSnapshot(newValue), parent, subpath);\n            if (node !== current) {\n                this._fixNode(node);\n            }\n            return node;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, applyPostProcess) {\n            if (applyPostProcess === void 0) { applyPostProcess = true; }\n            var sn = this._subtype.getSnapshot(node);\n            return applyPostProcess ? this.postProcessSnapshot(sn) : sn;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var processedSn = this.preProcessSnapshotSafe(value);\n            if (processedSn === $preProcessorFailed) {\n                return typeCheckFailure(context, value, \"Failed to preprocess value\");\n            }\n            return this._subtype.validate(processedSn, context);\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subtype;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"is\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (thing) {\n            var value = isType(thing)\n                ? this._subtype\n                : isStateTreeNode(thing)\n                    ? getSnapshot(thing, false)\n                    : this.preProcessSnapshotSafe(thing);\n            if (value === $preProcessorFailed) {\n                return false;\n            }\n            return this._subtype.validate(value, [{ path: \"\", type: this._subtype }]).length === 0;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            return this._subtype.isAssignableFrom(type);\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"isMatchingSnapshotId\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, snapshot) {\n            if (!(this._subtype instanceof ComplexType)) {\n                return false;\n            }\n            var processedSn = this.preProcessSnapshot(snapshot);\n            return this._subtype.isMatchingSnapshotId(current, processedSn);\n        }\n    });\n    return SnapshotProcessor;\n}(BaseType));\nfunction proxyNodeTypeMethods(nodeType, snapshotProcessorType) {\n    var e_1, _a;\n    var methods = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        methods[_i - 2] = arguments[_i];\n    }\n    try {\n        for (var methods_1 = __values(methods), methods_1_1 = methods_1.next(); !methods_1_1.done; methods_1_1 = methods_1.next()) {\n            var method = methods_1_1.value;\n            nodeType[method] = snapshotProcessorType[method].bind(snapshotProcessorType);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (methods_1_1 && !methods_1_1.done && (_a = methods_1.return)) _a.call(methods_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n/**\n * `types.snapshotProcessor` - Runs a pre/post snapshot processor before/after serializing a given type.\n *\n * Example:\n * ```ts\n * const Todo1 = types.model({ text: types.string })\n * // in the backend the text type must be null when empty\n * interface BackendTodo {\n *     text: string | null\n * }\n * const Todo2 = types.snapshotProcessor(Todo1, {\n *     // from snapshot to instance\n *     preProcessor(sn: BackendTodo) {\n *         return {\n *             text: sn.text || \"\";\n *         }\n *     },\n *     // from instance to snapshot\n *     postProcessor(sn): BackendTodo {\n *         return {\n *             text: !sn.text ? null : sn.text\n *         }\n *     }\n * })\n * ```\n *\n * @param type Type to run the processors over.\n * @param processors Processors to run.\n * @param name Type name, or undefined to inherit the inner type one.\n * @returns\n */\nfunction snapshotProcessor(type, processors, name) {\n    assertIsType(type, 1);\n    if (devMode()) {\n        if (processors.postProcessor && typeof processors.postProcessor !== \"function\") {\n            // istanbul ignore next\n            throw fail(\"postSnapshotProcessor must be a function\");\n        }\n        if (processors.preProcessor && typeof processors.preProcessor !== \"function\") {\n            // istanbul ignore next\n            throw fail(\"preSnapshotProcessor must be a function\");\n        }\n    }\n    return new SnapshotProcessor(type, processors, name);\n}\n\nvar needsIdentifierError = \"Map.put can only be used to store complex values that have an identifier type attribute\";\nfunction tryCollectModelTypes(type, modelTypes) {\n    var e_1, _a;\n    var subtypes = type.getSubTypes();\n    if (subtypes === cannotDetermineSubtype) {\n        return false;\n    }\n    if (subtypes) {\n        var subtypesArray = asArray(subtypes);\n        try {\n            for (var subtypesArray_1 = __values(subtypesArray), subtypesArray_1_1 = subtypesArray_1.next(); !subtypesArray_1_1.done; subtypesArray_1_1 = subtypesArray_1.next()) {\n                var subtype = subtypesArray_1_1.value;\n                if (!tryCollectModelTypes(subtype, modelTypes))\n                    return false;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (subtypesArray_1_1 && !subtypesArray_1_1.done && (_a = subtypesArray_1.return)) _a.call(subtypesArray_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    if (type instanceof ModelType) {\n        modelTypes.push(type);\n    }\n    return true;\n}\n/**\n * @internal\n * @hidden\n */\nvar MapIdentifierMode;\n(function (MapIdentifierMode) {\n    MapIdentifierMode[MapIdentifierMode[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    MapIdentifierMode[MapIdentifierMode[\"YES\"] = 1] = \"YES\";\n    MapIdentifierMode[MapIdentifierMode[\"NO\"] = 2] = \"NO\";\n})(MapIdentifierMode || (MapIdentifierMode = {}));\nvar MSTMap = /** @class */ (function (_super) {\n    __extends(MSTMap, _super);\n    function MSTMap(initialData) {\n        return _super.call(this, initialData, observable.ref.enhancer) || this;\n    }\n    Object.defineProperty(MSTMap.prototype, \"get\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (key) {\n            // maybe this is over-enthousiastic? normalize numeric keys to strings\n            return _super.prototype.get.call(this, \"\" + key);\n        }\n    });\n    Object.defineProperty(MSTMap.prototype, \"has\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (key) {\n            return _super.prototype.has.call(this, \"\" + key);\n        }\n    });\n    Object.defineProperty(MSTMap.prototype, \"delete\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (key) {\n            return _super.prototype.delete.call(this, \"\" + key);\n        }\n    });\n    Object.defineProperty(MSTMap.prototype, \"set\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (key, value) {\n            return _super.prototype.set.call(this, \"\" + key, value);\n        }\n    });\n    Object.defineProperty(MSTMap.prototype, \"put\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value) {\n            if (!value)\n                throw fail$1(\"Map.put cannot be used to set empty values\");\n            if (isStateTreeNode(value)) {\n                var node = getStateTreeNode(value);\n                if (devMode()) {\n                    if (!node.identifierAttribute) {\n                        throw fail$1(needsIdentifierError);\n                    }\n                }\n                if (node.identifier === null) {\n                    throw fail$1(needsIdentifierError);\n                }\n                this.set(node.identifier, value);\n                return value;\n            }\n            else if (!isMutable(value)) {\n                throw fail$1(\"Map.put can only be used to store complex values\");\n            }\n            else {\n                var mapNode = getStateTreeNode(this);\n                var mapType = mapNode.type;\n                if (mapType.identifierMode !== MapIdentifierMode.YES) {\n                    throw fail$1(needsIdentifierError);\n                }\n                var idAttr = mapType.mapIdentifierAttribute;\n                var id = value[idAttr];\n                if (!isValidIdentifier(id)) {\n                    // try again but this time after creating a node for the value\n                    // since it might be an optional identifier\n                    var newNode = this.put(mapType.getChildType().create(value, mapNode.environment));\n                    return this.put(getSnapshot(newNode));\n                }\n                var key = normalizeIdentifier(id);\n                this.set(key, value);\n                return this.get(key);\n            }\n        }\n    });\n    return MSTMap;\n}(ObservableMap));\n/**\n * @internal\n * @hidden\n */\nvar MapType = /** @class */ (function (_super) {\n    __extends(MapType, _super);\n    function MapType(name, _subType, hookInitializers) {\n        if (hookInitializers === void 0) { hookInitializers = []; }\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"_subType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _subType\n        });\n        Object.defineProperty(_this, \"identifierMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: MapIdentifierMode.UNKNOWN\n        });\n        Object.defineProperty(_this, \"mapIdentifierAttribute\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Map\n        });\n        Object.defineProperty(_this, \"hookInitializers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        _this._determineIdentifierMode();\n        _this.hookInitializers = hookInitializers;\n        return _this;\n    }\n    Object.defineProperty(MapType.prototype, \"hooks\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (hooks) {\n            var hookInitializers = this.hookInitializers.length > 0 ? this.hookInitializers.concat(hooks) : [hooks];\n            return new MapType(this.name, this._subType, hookInitializers);\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            this._determineIdentifierMode();\n            return createObjectNode(this, parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"_determineIdentifierMode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this.identifierMode !== MapIdentifierMode.UNKNOWN) {\n                return;\n            }\n            var modelTypes = [];\n            if (tryCollectModelTypes(this._subType, modelTypes)) {\n                var identifierAttribute = modelTypes.reduce(function (current, type) {\n                    if (!type.identifierAttribute)\n                        return current;\n                    if (current && current !== type.identifierAttribute) {\n                        throw fail$1(\"The objects in a map should all have the same identifier attribute, expected '\" + current + \"', but child of type '\" + type.name + \"' declared attribute '\" + type.identifierAttribute + \"' as identifier\");\n                    }\n                    return type.identifierAttribute;\n                }, undefined);\n                if (identifierAttribute) {\n                    this.identifierMode = MapIdentifierMode.YES;\n                    this.mapIdentifierAttribute = identifierAttribute;\n                }\n                else {\n                    this.identifierMode = MapIdentifierMode.NO;\n                }\n            }\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"initializeChildNodes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (objNode, initialSnapshot) {\n            if (initialSnapshot === void 0) { initialSnapshot = {}; }\n            var subType = objNode.type._subType;\n            var result = {};\n            Object.keys(initialSnapshot).forEach(function (name) {\n                result[name] = subType.instantiate(objNode, name, undefined, initialSnapshot[name]);\n            });\n            return result;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"createNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNodes) {\n            return new MSTMap(childNodes);\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"finalizeNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, instance) {\n            _interceptReads(instance, node.unbox);\n            var type = node.type;\n            type.hookInitializers.forEach(function (initializer) {\n                var hooks = initializer(instance);\n                Object.keys(hooks).forEach(function (name) {\n                    var hook = hooks[name];\n                    var actionInvoker = createActionInvoker(instance, name, hook);\n                    (!devMode() ? addHiddenFinalProp : addHiddenWritableProp)(instance, name, actionInvoker);\n                });\n            });\n            intercept(instance, this.willChange);\n            observe(instance, this.didChange);\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return \"Map<string, \" + this._subType.describe() + \">\";\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"getChildren\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            // return (node.storedValue as ObservableMap<any>).values()\n            return values(node.storedValue);\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"getChildNode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, key) {\n            var childNode = node.storedValue.get(\"\" + key);\n            if (!childNode)\n                throw fail$1(\"Not a child \" + key);\n            return childNode;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"willChange\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (change) {\n            var node = getStateTreeNode(change.object);\n            var key = change.name;\n            node.assertWritable({ subpath: key });\n            var mapType = node.type;\n            var subType = mapType._subType;\n            switch (change.type) {\n                case \"update\":\n                    {\n                        var newValue = change.newValue;\n                        var oldValue = change.object.get(key);\n                        if (newValue === oldValue)\n                            return null;\n                        typecheckInternal(subType, newValue);\n                        change.newValue = subType.reconcile(node.getChildNode(key), change.newValue, node, key);\n                        mapType.processIdentifier(key, change.newValue);\n                    }\n                    break;\n                case \"add\":\n                    {\n                        typecheckInternal(subType, change.newValue);\n                        change.newValue = subType.instantiate(node, key, undefined, change.newValue);\n                        mapType.processIdentifier(key, change.newValue);\n                    }\n                    break;\n            }\n            return change;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"processIdentifier\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (expected, node) {\n            if (this.identifierMode === MapIdentifierMode.YES && node instanceof ObjectNode) {\n                var identifier = node.identifier;\n                if (identifier !== expected)\n                    throw fail$1(\"A map of objects containing an identifier should always store the object under their own identifier. Trying to store key '\" + identifier + \"', but expected: '\" + expected + \"'\");\n            }\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            var res = {};\n            node.getChildren().forEach(function (childNode) {\n                res[childNode.subpath] = childNode.snapshot;\n            });\n            return res;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"processInitialSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNodes) {\n            var processed = {};\n            Object.keys(childNodes).forEach(function (key) {\n                processed[key] = childNodes[key].getSnapshot();\n            });\n            return processed;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"didChange\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (change) {\n            var node = getStateTreeNode(change.object);\n            switch (change.type) {\n                case \"update\":\n                    return void node.emitPatch({\n                        op: \"replace\",\n                        path: escapeJsonPath(change.name),\n                        value: change.newValue.snapshot,\n                        oldValue: change.oldValue ? change.oldValue.snapshot : undefined\n                    }, node);\n                case \"add\":\n                    return void node.emitPatch({\n                        op: \"add\",\n                        path: escapeJsonPath(change.name),\n                        value: change.newValue.snapshot,\n                        oldValue: undefined\n                    }, node);\n                case \"delete\":\n                    // a node got deleted, get the old snapshot and make the node die\n                    var oldSnapshot = change.oldValue.snapshot;\n                    change.oldValue.die();\n                    // emit the patch\n                    return void node.emitPatch({\n                        op: \"remove\",\n                        path: escapeJsonPath(change.name),\n                        oldValue: oldSnapshot\n                    }, node);\n            }\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"applyPatchLocally\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, subpath, patch) {\n            var target = node.storedValue;\n            switch (patch.op) {\n                case \"add\":\n                case \"replace\":\n                    target.set(subpath, patch.value);\n                    break;\n                case \"remove\":\n                    target.delete(subpath);\n                    break;\n            }\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"applySnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, snapshot) {\n            typecheckInternal(this, snapshot);\n            var target = node.storedValue;\n            var currentKeys = {};\n            Array.from(target.keys()).forEach(function (key) {\n                currentKeys[key] = false;\n            });\n            if (snapshot) {\n                // Don't use target.replace, as it will throw away all existing items first\n                for (var key in snapshot) {\n                    target.set(key, snapshot[key]);\n                    currentKeys[\"\" + key] = true;\n                }\n            }\n            Object.keys(currentKeys).forEach(function (key) {\n                if (currentKeys[key] === false)\n                    target.delete(key);\n            });\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"getChildType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subType;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var _this = this;\n            if (!isPlainObject(value)) {\n                return typeCheckFailure(context, value, \"Value is not a plain object\");\n            }\n            return flattenTypeErrors(Object.keys(value).map(function (path) {\n                return _this._subType.validate(value[path], getContextForPath(context, path, _this._subType));\n            }));\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"getDefaultSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return EMPTY_OBJECT;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"removeChild\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, subpath) {\n            node.storedValue.delete(subpath);\n        }\n    });\n    return MapType;\n}(ComplexType));\nMapType.prototype.applySnapshot = action(MapType.prototype.applySnapshot);\n/**\n * `types.map` - Creates a key based collection type who's children are all of a uniform declared type.\n * If the type stored in a map has an identifier, it is mandatory to store the child under that identifier in the map.\n *\n * This type will always produce [observable maps](https://mobx.js.org/api.html#observablemap)\n *\n * Example:\n * ```ts\n * const Todo = types.model({\n *   id: types.identifier,\n *   task: types.string\n * })\n *\n * const TodoStore = types.model({\n *   todos: types.map(Todo)\n * })\n *\n * const s = TodoStore.create({ todos: {} })\n * unprotect(s)\n * s.todos.set(17, { task: \"Grab coffee\", id: 17 })\n * s.todos.put({ task: \"Grab cookie\", id: 18 }) // put will infer key from the identifier\n * console.log(s.todos.get(17).task) // prints: \"Grab coffee\"\n * ```\n *\n * @param subtype\n * @returns\n */\nfunction map(subtype) {\n    return new MapType(\"map<string, \" + subtype.name + \">\", subtype);\n}\n/**\n * Returns if a given value represents a map type.\n *\n * @param type\n * @returns `true` if it is a map type.\n */\nfunction isMapType(type) {\n    return isType(type) && (type.flags & TypeFlags.Map) > 0;\n}\n\n/**\n * @internal\n * @hidden\n */\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(name, _subType, hookInitializers) {\n        if (hookInitializers === void 0) { hookInitializers = []; }\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"_subType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _subType\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Array\n        });\n        Object.defineProperty(_this, \"hookInitializers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        _this.hookInitializers = hookInitializers;\n        return _this;\n    }\n    Object.defineProperty(ArrayType.prototype, \"hooks\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (hooks) {\n            var hookInitializers = this.hookInitializers.length > 0 ? this.hookInitializers.concat(hooks) : [hooks];\n            return new ArrayType(this.name, this._subType, hookInitializers);\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            return createObjectNode(this, parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"initializeChildNodes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (objNode, snapshot) {\n            if (snapshot === void 0) { snapshot = []; }\n            var subType = objNode.type._subType;\n            var result = {};\n            snapshot.forEach(function (item, index) {\n                var subpath = \"\" + index;\n                result[subpath] = subType.instantiate(objNode, subpath, undefined, item);\n            });\n            return result;\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"createNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNodes) {\n            return observable.array(convertChildNodesToArray(childNodes), mobxShallow);\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"finalizeNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, instance) {\n            _getAdministration(instance).dehancer = node.unbox;\n            var type = node.type;\n            type.hookInitializers.forEach(function (initializer) {\n                var hooks = initializer(instance);\n                Object.keys(hooks).forEach(function (name) {\n                    var hook = hooks[name];\n                    var actionInvoker = createActionInvoker(instance, name, hook);\n                    (!devMode() ? addHiddenFinalProp : addHiddenWritableProp)(instance, name, actionInvoker);\n                });\n            });\n            intercept(instance, this.willChange);\n            observe(instance, this.didChange);\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subType.describe() + \"[]\";\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"getChildren\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            return node.storedValue.slice();\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"getChildNode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, key) {\n            var index = Number(key);\n            if (index < node.storedValue.length)\n                return node.storedValue[index];\n            throw fail$1(\"Not a child: \" + key);\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"willChange\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (change) {\n            var node = getStateTreeNode(change.object);\n            node.assertWritable({ subpath: \"\" + change.index });\n            var subType = node.type._subType;\n            var childNodes = node.getChildren();\n            switch (change.type) {\n                case \"update\":\n                    {\n                        if (change.newValue === change.object[change.index])\n                            return null;\n                        var updatedNodes = reconcileArrayChildren(node, subType, [childNodes[change.index]], [change.newValue], [change.index]);\n                        if (!updatedNodes) {\n                            return null;\n                        }\n                        change.newValue = updatedNodes[0];\n                    }\n                    break;\n                case \"splice\":\n                    {\n                        var index_1 = change.index, removedCount = change.removedCount, added = change.added;\n                        var addedNodes = reconcileArrayChildren(node, subType, childNodes.slice(index_1, index_1 + removedCount), added, added.map(function (_, i) { return index_1 + i; }));\n                        if (!addedNodes) {\n                            return null;\n                        }\n                        change.added = addedNodes;\n                        // update paths of remaining items\n                        for (var i = index_1 + removedCount; i < childNodes.length; i++) {\n                            childNodes[i].setParent(node, \"\" + (i + added.length - removedCount));\n                        }\n                    }\n                    break;\n            }\n            return change;\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            return node.getChildren().map(function (childNode) { return childNode.snapshot; });\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"processInitialSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNodes) {\n            var processed = [];\n            Object.keys(childNodes).forEach(function (key) {\n                processed.push(childNodes[key].getSnapshot());\n            });\n            return processed;\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"didChange\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (change) {\n            var node = getStateTreeNode(change.object);\n            switch (change.type) {\n                case \"update\":\n                    return void node.emitPatch({\n                        op: \"replace\",\n                        path: \"\" + change.index,\n                        value: change.newValue.snapshot,\n                        oldValue: change.oldValue ? change.oldValue.snapshot : undefined\n                    }, node);\n                case \"splice\":\n                    for (var i = change.removedCount - 1; i >= 0; i--)\n                        node.emitPatch({\n                            op: \"remove\",\n                            path: \"\" + (change.index + i),\n                            oldValue: change.removed[i].snapshot\n                        }, node);\n                    for (var i = 0; i < change.addedCount; i++)\n                        node.emitPatch({\n                            op: \"add\",\n                            path: \"\" + (change.index + i),\n                            value: node.getChildNode(\"\" + (change.index + i)).snapshot,\n                            oldValue: undefined\n                        }, node);\n                    return;\n            }\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"applyPatchLocally\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, subpath, patch) {\n            var target = node.storedValue;\n            var index = subpath === \"-\" ? target.length : Number(subpath);\n            switch (patch.op) {\n                case \"replace\":\n                    target[index] = patch.value;\n                    break;\n                case \"add\":\n                    target.splice(index, 0, patch.value);\n                    break;\n                case \"remove\":\n                    target.splice(index, 1);\n                    break;\n            }\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"applySnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, snapshot) {\n            typecheckInternal(this, snapshot);\n            var target = node.storedValue;\n            target.replace(snapshot);\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"getChildType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subType;\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var _this = this;\n            if (!isArray(value)) {\n                return typeCheckFailure(context, value, \"Value is not an array\");\n            }\n            return flattenTypeErrors(value.map(function (item, index) {\n                return _this._subType.validate(item, getContextForPath(context, \"\" + index, _this._subType));\n            }));\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"getDefaultSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return EMPTY_ARRAY;\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"removeChild\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, subpath) {\n            node.storedValue.splice(Number(subpath), 1);\n        }\n    });\n    return ArrayType;\n}(ComplexType));\nArrayType.prototype.applySnapshot = action(ArrayType.prototype.applySnapshot);\n/**\n * `types.array` - Creates an index based collection type who's children are all of a uniform declared type.\n *\n * This type will always produce [observable arrays](https://mobx.js.org/api.html#observablearray)\n *\n * Example:\n * ```ts\n * const Todo = types.model({\n *   task: types.string\n * })\n *\n * const TodoStore = types.model({\n *   todos: types.array(Todo)\n * })\n *\n * const s = TodoStore.create({ todos: [] })\n * unprotect(s) // needed to allow modifying outside of an action\n * s.todos.push({ task: \"Grab coffee\" })\n * console.log(s.todos[0]) // prints: \"Grab coffee\"\n * ```\n *\n * @param subtype\n * @returns\n */\nfunction array(subtype) {\n    assertIsType(subtype, 1);\n    return new ArrayType(subtype.name + \"[]\", subtype);\n}\nfunction reconcileArrayChildren(parent, childType, oldNodes, newValues, newPaths) {\n    var nothingChanged = true;\n    for (var i = 0;; i++) {\n        var hasNewNode = i <= newValues.length - 1;\n        var oldNode = oldNodes[i];\n        var newValue = hasNewNode ? newValues[i] : undefined;\n        var newPath = \"\" + newPaths[i];\n        // for some reason, instead of newValue we got a node, fallback to the storedValue\n        // TODO: https://github.com/mobxjs/mobx-state-tree/issues/340#issuecomment-325581681\n        if (isNode(newValue))\n            newValue = newValue.storedValue;\n        if (!oldNode && !hasNewNode) {\n            // both are empty, end\n            break;\n        }\n        else if (!hasNewNode) {\n            // new one does not exists\n            nothingChanged = false;\n            oldNodes.splice(i, 1);\n            if (oldNode instanceof ObjectNode) {\n                // since it is going to be returned by pop/splice/shift better create it before killing it\n                // so it doesn't end up in an undead state\n                oldNode.createObservableInstanceIfNeeded();\n            }\n            oldNode.die();\n            i--;\n        }\n        else if (!oldNode) {\n            // there is no old node, create it\n            // check if already belongs to the same parent. if so, avoid pushing item in. only swapping can occur.\n            if (isStateTreeNode(newValue) && getStateTreeNode(newValue).parent === parent) {\n                // this node is owned by this parent, but not in the reconcilable set, so it must be double\n                throw fail$1(\"Cannot add an object to a state tree if it is already part of the same or another state tree. Tried to assign an object to '\" + parent.path + \"/\" + newPath + \"', but it lives already at '\" + getStateTreeNode(newValue).path + \"'\");\n            }\n            nothingChanged = false;\n            var newNode = valueAsNode(childType, parent, newPath, newValue);\n            oldNodes.splice(i, 0, newNode);\n        }\n        else if (areSame(oldNode, newValue)) {\n            // both are the same, reconcile\n            oldNodes[i] = valueAsNode(childType, parent, newPath, newValue, oldNode);\n        }\n        else {\n            // nothing to do, try to reorder\n            var oldMatch = undefined;\n            // find a possible candidate to reuse\n            for (var j = i; j < oldNodes.length; j++) {\n                if (areSame(oldNodes[j], newValue)) {\n                    oldMatch = oldNodes.splice(j, 1)[0];\n                    break;\n                }\n            }\n            nothingChanged = false;\n            var newNode = valueAsNode(childType, parent, newPath, newValue, oldMatch);\n            oldNodes.splice(i, 0, newNode);\n        }\n    }\n    return nothingChanged ? null : oldNodes;\n}\n/**\n * Convert a value to a node at given parent and subpath. Attempts to reuse old node if possible and given.\n */\nfunction valueAsNode(childType, parent, subpath, newValue, oldNode) {\n    // ensure the value is valid-ish\n    typecheckInternal(childType, newValue);\n    function getNewNode() {\n        // the new value has a MST node\n        if (isStateTreeNode(newValue)) {\n            var childNode = getStateTreeNode(newValue);\n            childNode.assertAlive(EMPTY_OBJECT);\n            // the node lives here\n            if (childNode.parent !== null && childNode.parent === parent) {\n                childNode.setParent(parent, subpath);\n                return childNode;\n            }\n        }\n        // there is old node and new one is a value/snapshot\n        if (oldNode) {\n            return childType.reconcile(oldNode, newValue, parent, subpath);\n        }\n        // nothing to do, create from scratch\n        return childType.instantiate(parent, subpath, undefined, newValue);\n    }\n    var newNode = getNewNode();\n    if (oldNode && oldNode !== newNode) {\n        if (oldNode instanceof ObjectNode) {\n            // since it is going to be returned by pop/splice/shift better create it before killing it\n            // so it doesn't end up in an undead state\n            oldNode.createObservableInstanceIfNeeded();\n        }\n        oldNode.die();\n    }\n    return newNode;\n}\n/**\n * Check if a node holds a value.\n */\nfunction areSame(oldNode, newValue) {\n    // never consider dead old nodes for reconciliation\n    if (!oldNode.isAlive) {\n        return false;\n    }\n    // the new value has the same node\n    if (isStateTreeNode(newValue)) {\n        var newNode = getStateTreeNode(newValue);\n        return newNode.isAlive && newNode === oldNode;\n    }\n    // the provided value is the snapshot of the old node\n    if (oldNode.snapshot === newValue) {\n        return true;\n    }\n    // Non object nodes don't get reconciled\n    if (!(oldNode instanceof ObjectNode)) {\n        return false;\n    }\n    var oldNodeType = oldNode.getReconciliationType();\n    // new value is a snapshot with the correct identifier\n    return (oldNode.identifier !== null &&\n        oldNode.identifierAttribute &&\n        isPlainObject(newValue) &&\n        oldNodeType.is(newValue) &&\n        oldNodeType.isMatchingSnapshotId(oldNode, newValue));\n}\n/**\n * Returns if a given value represents an array type.\n *\n * @param type\n * @returns `true` if the type is an array type.\n */\nfunction isArrayType(type) {\n    return isType(type) && (type.flags & TypeFlags.Array) > 0;\n}\n\nvar PRE_PROCESS_SNAPSHOT = \"preProcessSnapshot\";\nvar POST_PROCESS_SNAPSHOT = \"postProcessSnapshot\";\nfunction objectTypeToString() {\n    return getStateTreeNode(this).toString();\n}\nvar defaultObjectOptions = {\n    name: \"AnonymousModel\",\n    properties: {},\n    initializers: EMPTY_ARRAY\n};\nfunction toPropertiesObject(declaredProps) {\n    // loop through properties and ensures that all items are types\n    return Object.keys(declaredProps).reduce(function (props, key) {\n        var _a, _b, _c;\n        // warn if user intended a HOOK\n        if (key in Hook)\n            throw fail$1(\"Hook '\" + key + \"' was defined as property. Hooks should be defined as part of the actions\");\n        // the user intended to use a view\n        var descriptor = Object.getOwnPropertyDescriptor(props, key);\n        if (\"get\" in descriptor) {\n            throw fail$1(\"Getters are not supported as properties. Please use views instead\");\n        }\n        // undefined and null are not valid\n        var value = descriptor.value;\n        if (value === null || value === undefined) {\n            throw fail$1(\"The default value of an attribute cannot be null or undefined as the type cannot be inferred. Did you mean `types.maybe(someType)`?\");\n            // its a primitive, convert to its type\n        }\n        else if (isPrimitive(value)) {\n            return Object.assign({}, props, (_a = {},\n                _a[key] = optional(getPrimitiveFactoryFromValue(value), value),\n                _a));\n            // map defaults to empty object automatically for models\n        }\n        else if (value instanceof MapType) {\n            return Object.assign({}, props, (_b = {},\n                _b[key] = optional(value, {}),\n                _b));\n        }\n        else if (value instanceof ArrayType) {\n            return Object.assign({}, props, (_c = {}, _c[key] = optional(value, []), _c));\n            // its already a type\n        }\n        else if (isType(value)) {\n            return props;\n            // its a function, maybe the user wanted a view?\n        }\n        else if (devMode() && typeof value === \"function\") {\n            throw fail$1(\"Invalid type definition for property '\" + key + \"', it looks like you passed a function. Did you forget to invoke it, or did you intend to declare a view / action?\");\n            // no other complex values\n        }\n        else if (devMode() && typeof value === \"object\") {\n            throw fail$1(\"Invalid type definition for property '\" + key + \"', it looks like you passed an object. Try passing another model type or a types.frozen.\");\n            // WTF did you pass in mate?\n        }\n        else {\n            throw fail$1(\"Invalid type definition for property '\" + key + \"', cannot infer a type from a value like '\" + value + \"' (\" + typeof value + \")\");\n        }\n    }, declaredProps);\n}\n/**\n * @internal\n * @hidden\n */\nvar ModelType = /** @class */ (function (_super) {\n    __extends(ModelType, _super);\n    function ModelType(opts) {\n        var _this = _super.call(this, opts.name || defaultObjectOptions.name) || this;\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Object\n        });\n        /*\n         * The original object definition\n         */\n        Object.defineProperty(_this, \"initializers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"properties\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"preProcessor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"postProcessor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"propertyNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"named\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function (name) {\n                return _this.cloneAndEnhance({ name: name });\n            }\n        });\n        Object.defineProperty(_this, \"props\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function (properties) {\n                return _this.cloneAndEnhance({ properties: properties });\n            }\n        });\n        Object.defineProperty(_this, \"preProcessSnapshot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function (preProcessor) {\n                var currentPreprocessor = _this.preProcessor;\n                if (!currentPreprocessor)\n                    return _this.cloneAndEnhance({ preProcessor: preProcessor });\n                else\n                    return _this.cloneAndEnhance({\n                        preProcessor: function (snapshot) { return currentPreprocessor(preProcessor(snapshot)); }\n                    });\n            }\n        });\n        Object.defineProperty(_this, \"postProcessSnapshot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function (postProcessor) {\n                var currentPostprocessor = _this.postProcessor;\n                if (!currentPostprocessor)\n                    return _this.cloneAndEnhance({ postProcessor: postProcessor });\n                else\n                    return _this.cloneAndEnhance({\n                        postProcessor: function (snapshot) { return postProcessor(currentPostprocessor(snapshot)); }\n                    });\n            }\n        });\n        Object.assign(_this, defaultObjectOptions, opts);\n        // ensures that any default value gets converted to its related type\n        _this.properties = toPropertiesObject(_this.properties);\n        freeze(_this.properties); // make sure nobody messes with it\n        _this.propertyNames = Object.keys(_this.properties);\n        _this.identifierAttribute = _this._getIdentifierAttribute();\n        return _this;\n    }\n    Object.defineProperty(ModelType.prototype, \"_getIdentifierAttribute\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var identifierAttribute = undefined;\n            this.forAllProps(function (propName, propType) {\n                if (propType.flags & TypeFlags.Identifier) {\n                    if (identifierAttribute)\n                        throw fail$1(\"Cannot define property '\" + propName + \"' as object identifier, property '\" + identifierAttribute + \"' is already defined as identifier property\");\n                    identifierAttribute = propName;\n                }\n            });\n            return identifierAttribute;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"cloneAndEnhance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (opts) {\n            return new ModelType({\n                name: opts.name || this.name,\n                properties: Object.assign({}, this.properties, opts.properties),\n                initializers: this.initializers.concat(opts.initializers || []),\n                preProcessor: opts.preProcessor || this.preProcessor,\n                postProcessor: opts.postProcessor || this.postProcessor\n            });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"actions\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            var _this = this;\n            var actionInitializer = function (self) {\n                _this.instantiateActions(self, fn(self));\n                return self;\n            };\n            return this.cloneAndEnhance({ initializers: [actionInitializer] });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"instantiateActions\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (self, actions) {\n            // check if return is correct\n            if (!isPlainObject(actions))\n                throw fail$1(\"actions initializer should return a plain object containing actions\");\n            // bind actions to the object created\n            Object.keys(actions).forEach(function (name) {\n                // warn if preprocessor was given\n                if (name === PRE_PROCESS_SNAPSHOT)\n                    throw fail$1(\"Cannot define action '\" + PRE_PROCESS_SNAPSHOT + \"', it should be defined using 'type.preProcessSnapshot(fn)' instead\");\n                // warn if postprocessor was given\n                if (name === POST_PROCESS_SNAPSHOT)\n                    throw fail$1(\"Cannot define action '\" + POST_PROCESS_SNAPSHOT + \"', it should be defined using 'type.postProcessSnapshot(fn)' instead\");\n                var action2 = actions[name];\n                // apply hook composition\n                var baseAction = self[name];\n                if (name in Hook && baseAction) {\n                    var specializedAction_1 = action2;\n                    action2 = function () {\n                        baseAction.apply(null, arguments);\n                        specializedAction_1.apply(null, arguments);\n                    };\n                }\n                // the goal of this is to make sure actions using \"this\" can call themselves,\n                // while still allowing the middlewares to register them\n                var middlewares = action2.$mst_middleware; // make sure middlewares are not lost\n                var boundAction = action2.bind(actions);\n                boundAction.$mst_middleware = middlewares;\n                var actionInvoker = createActionInvoker(self, name, boundAction);\n                actions[name] = actionInvoker;\n                (!devMode() ? addHiddenFinalProp : addHiddenWritableProp)(self, name, actionInvoker);\n            });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"volatile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            var _this = this;\n            if (typeof fn !== \"function\") {\n                throw fail$1(\"You passed an \" + typeof fn + \" to volatile state as an argument, when function is expected\");\n            }\n            var stateInitializer = function (self) {\n                _this.instantiateVolatileState(self, fn(self));\n                return self;\n            };\n            return this.cloneAndEnhance({ initializers: [stateInitializer] });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"instantiateVolatileState\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (self, state) {\n            // check views return\n            if (!isPlainObject(state))\n                throw fail$1(\"volatile state initializer should return a plain object containing state\");\n            set(self, state);\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"extend\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            var _this = this;\n            var initializer = function (self) {\n                var _a = fn(self), actions = _a.actions, views = _a.views, state = _a.state, rest = __rest(_a, [\"actions\", \"views\", \"state\"]);\n                for (var key in rest)\n                    throw fail$1(\"The `extend` function should return an object with a subset of the fields 'actions', 'views' and 'state'. Found invalid key '\" + key + \"'\");\n                if (state)\n                    _this.instantiateVolatileState(self, state);\n                if (views)\n                    _this.instantiateViews(self, views);\n                if (actions)\n                    _this.instantiateActions(self, actions);\n                return self;\n            };\n            return this.cloneAndEnhance({ initializers: [initializer] });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"views\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            var _this = this;\n            var viewInitializer = function (self) {\n                _this.instantiateViews(self, fn(self));\n                return self;\n            };\n            return this.cloneAndEnhance({ initializers: [viewInitializer] });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"instantiateViews\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (self, views) {\n            // check views return\n            if (!isPlainObject(views))\n                throw fail$1(\"views initializer should return a plain object containing views\");\n            Object.keys(views).forEach(function (key) {\n                var _a;\n                // is this a computed property?\n                var descriptor = Object.getOwnPropertyDescriptor(views, key);\n                if (\"get\" in descriptor) {\n                    defineProperty$1(self, key, descriptor);\n                    makeObservable(self, (_a = {}, _a[key] = computed, _a));\n                }\n                else if (typeof descriptor.value === \"function\") {\n                    (!devMode() ? addHiddenFinalProp : addHiddenWritableProp)(self, key, descriptor.value);\n                }\n                else {\n                    throw fail$1(\"A view member should either be a function or getter based property\");\n                }\n            });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            var value = isStateTreeNode(initialValue)\n                ? initialValue\n                : this.applySnapshotPreProcessor(initialValue);\n            return createObjectNode(this, parent, subpath, environment, value);\n            // Optimization: record all prop- view- and action names after first construction, and generate an optimal base class\n            // that pre-reserves all these fields for fast object-member lookups\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"initializeChildNodes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (objNode, initialSnapshot) {\n            if (initialSnapshot === void 0) { initialSnapshot = {}; }\n            var type = objNode.type;\n            var result = {};\n            type.forAllProps(function (name, childType) {\n                result[name] = childType.instantiate(objNode, name, undefined, initialSnapshot[name]);\n            });\n            return result;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"createNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNodes) {\n            return observable.object(childNodes, EMPTY_OBJECT, mobxShallow);\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"finalizeNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, instance) {\n            addHiddenFinalProp(instance, \"toString\", objectTypeToString);\n            this.forAllProps(function (name) {\n                _interceptReads(instance, name, node.unbox);\n            });\n            this.initializers.reduce(function (self, fn) { return fn(self); }, instance);\n            intercept(instance, this.willChange);\n            observe(instance, this.didChange);\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"willChange\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (chg) {\n            // TODO: mobx typings don't seem to take into account that newValue can be set even when removing a prop\n            var change = chg;\n            var node = getStateTreeNode(change.object);\n            var subpath = change.name;\n            node.assertWritable({ subpath: subpath });\n            var childType = node.type.properties[subpath];\n            // only properties are typed, state are stored as-is references\n            if (childType) {\n                typecheckInternal(childType, change.newValue);\n                change.newValue = childType.reconcile(node.getChildNode(subpath), change.newValue, node, subpath);\n            }\n            return change;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"didChange\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (chg) {\n            // TODO: mobx typings don't seem to take into account that newValue can be set even when removing a prop\n            var change = chg;\n            var childNode = getStateTreeNode(change.object);\n            var childType = childNode.type.properties[change.name];\n            if (!childType) {\n                // don't emit patches for volatile state\n                return;\n            }\n            var oldChildValue = change.oldValue ? change.oldValue.snapshot : undefined;\n            childNode.emitPatch({\n                op: \"replace\",\n                path: escapeJsonPath(change.name),\n                value: change.newValue.snapshot,\n                oldValue: oldChildValue\n            }, childNode);\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"getChildren\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            var _this = this;\n            var res = [];\n            this.forAllProps(function (name) {\n                res.push(_this.getChildNode(node, name));\n            });\n            return res;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"getChildNode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, key) {\n            if (!(key in this.properties))\n                throw fail$1(\"Not a value property: \" + key);\n            var adm = _getAdministration(node.storedValue, key);\n            var childNode = adm.raw();\n            if (!childNode)\n                throw fail$1(\"Node not available for property \" + key);\n            return childNode;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, applyPostProcess) {\n            var _this = this;\n            if (applyPostProcess === void 0) { applyPostProcess = true; }\n            var res = {};\n            this.forAllProps(function (name, type) {\n                getAtom(node.storedValue, name).reportObserved();\n                res[name] = _this.getChildNode(node, name).snapshot;\n            });\n            if (applyPostProcess) {\n                return this.applySnapshotPostProcessor(res);\n            }\n            return res;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"processInitialSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNodes) {\n            var processed = {};\n            Object.keys(childNodes).forEach(function (key) {\n                processed[key] = childNodes[key].getSnapshot();\n            });\n            return this.applySnapshotPostProcessor(processed);\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"applyPatchLocally\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, subpath, patch) {\n            if (!(patch.op === \"replace\" || patch.op === \"add\")) {\n                throw fail$1(\"object does not support operation \" + patch.op);\n            }\n            node.storedValue[subpath] = patch.value;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"applySnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, snapshot) {\n            var preProcessedSnapshot = this.applySnapshotPreProcessor(snapshot);\n            typecheckInternal(this, preProcessedSnapshot);\n            this.forAllProps(function (name) {\n                node.storedValue[name] = preProcessedSnapshot[name];\n            });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"applySnapshotPreProcessor\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot) {\n            var processor = this.preProcessor;\n            return processor ? processor.call(null, snapshot) : snapshot;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"applySnapshotPostProcessor\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot) {\n            var postProcessor = this.postProcessor;\n            if (postProcessor)\n                return postProcessor.call(null, snapshot);\n            return snapshot;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"getChildType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (propertyName) {\n            assertIsString(propertyName, 1);\n            return this.properties[propertyName];\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var _this = this;\n            var snapshot = this.applySnapshotPreProcessor(value);\n            if (!isPlainObject(snapshot)) {\n                return typeCheckFailure(context, snapshot, \"Value is not a plain object\");\n            }\n            return flattenTypeErrors(this.propertyNames.map(function (key) {\n                return _this.properties[key].validate(snapshot[key], getContextForPath(context, key, _this.properties[key]));\n            }));\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"forAllProps\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            var _this = this;\n            this.propertyNames.forEach(function (key) { return fn(key, _this.properties[key]); });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var _this = this;\n            // optimization: cache\n            return (\"{ \" +\n                this.propertyNames\n                    .map(function (key) { return key + \": \" + _this.properties[key].describe(); })\n                    .join(\"; \") +\n                \" }\");\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"getDefaultSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return EMPTY_OBJECT;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"removeChild\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, subpath) {\n            node.storedValue[subpath] = undefined;\n        }\n    });\n    return ModelType;\n}(ComplexType));\nModelType.prototype.applySnapshot = action(ModelType.prototype.applySnapshot);\n/**\n * `types.model` - Creates a new model type by providing a name, properties, volatile state and actions.\n *\n * See the [model type](/concepts/trees#creating-models) description or the [getting started](intro/getting-started.md#getting-started-1) tutorial.\n */\nfunction model() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var name = typeof args[0] === \"string\" ? args.shift() : \"AnonymousModel\";\n    var properties = args.shift() || {};\n    return new ModelType({ name: name, properties: properties });\n}\n/**\n * `types.compose` - Composes a new model from one or more existing model types.\n * This method can be invoked in two forms:\n * Given 2 or more model types, the types are composed into a new Type.\n * Given first parameter as a string and 2 or more model types,\n * the types are composed into a new Type with the given name\n */\nfunction compose() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    // TODO: just join the base type names if no name is provided\n    var hasTypename = typeof args[0] === \"string\";\n    var typeName = hasTypename ? args[0] : \"AnonymousModel\";\n    if (hasTypename) {\n        args.shift();\n    }\n    // check all parameters\n    if (devMode()) {\n        args.forEach(function (type, i) {\n            assertArg(type, isModelType, \"mobx-state-tree model type\", hasTypename ? i + 2 : i + 1);\n        });\n    }\n    return args\n        .reduce(function (prev, cur) {\n        return prev.cloneAndEnhance({\n            name: prev.name + \"_\" + cur.name,\n            properties: cur.properties,\n            initializers: cur.initializers,\n            preProcessor: function (snapshot) {\n                return cur.applySnapshotPreProcessor(prev.applySnapshotPreProcessor(snapshot));\n            },\n            postProcessor: function (snapshot) {\n                return cur.applySnapshotPostProcessor(prev.applySnapshotPostProcessor(snapshot));\n            }\n        });\n    })\n        .named(typeName);\n}\n/**\n * Returns if a given value represents a model type.\n *\n * @param type\n * @returns\n */\nfunction isModelType(type) {\n    return isType(type) && (type.flags & TypeFlags.Object) > 0;\n}\n\n// TODO: implement CoreType using types.custom ?\n/**\n * @internal\n * @hidden\n */\nvar CoreType = /** @class */ (function (_super) {\n    __extends(CoreType, _super);\n    function CoreType(name, flags, checker, initializer) {\n        if (initializer === void 0) { initializer = identity; }\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: flags\n        });\n        Object.defineProperty(_this, \"checker\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: checker\n        });\n        Object.defineProperty(_this, \"initializer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: initializer\n        });\n        _this.flags = flags;\n        return _this;\n    }\n    Object.defineProperty(CoreType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.name;\n        }\n    });\n    Object.defineProperty(CoreType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            return createScalarNode(this, parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(CoreType.prototype, \"createNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot) {\n            return this.initializer(snapshot);\n        }\n    });\n    Object.defineProperty(CoreType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            if (isPrimitive(value) && this.checker(value)) {\n                return typeCheckSuccess();\n            }\n            var typeName = this.name === \"Date\" ? \"Date or a unix milliseconds timestamp\" : this.name;\n            return typeCheckFailure(context, value, \"Value is not a \" + typeName);\n        }\n    });\n    return CoreType;\n}(SimpleType));\n/**\n * `types.string` - Creates a type that can only contain a string value.\n * This type is used for string values by default\n *\n * Example:\n * ```ts\n * const Person = types.model({\n *   firstName: types.string,\n *   lastName: \"Doe\"\n * })\n * ```\n */\n// tslint:disable-next-line:variable-name\nvar string = new CoreType(\"string\", TypeFlags.String, function (v) { return typeof v === \"string\"; });\n/**\n * `types.number` - Creates a type that can only contain a numeric value.\n * This type is used for numeric values by default\n *\n * Example:\n * ```ts\n * const Vector = types.model({\n *   x: types.number,\n *   y: 1.5\n * })\n * ```\n */\n// tslint:disable-next-line:variable-name\nvar number = new CoreType(\"number\", TypeFlags.Number, function (v) { return typeof v === \"number\"; });\n/**\n * `types.integer` - Creates a type that can only contain an integer value.\n * This type is used for integer values by default\n *\n * Example:\n * ```ts\n * const Size = types.model({\n *   width: types.integer,\n *   height: 10\n * })\n * ```\n */\n// tslint:disable-next-line:variable-name\nvar integer = new CoreType(\"integer\", TypeFlags.Integer, function (v) { return isInteger(v); });\n/**\n * `types.boolean` - Creates a type that can only contain a boolean value.\n * This type is used for boolean values by default\n *\n * Example:\n * ```ts\n * const Thing = types.model({\n *   isCool: types.boolean,\n *   isAwesome: false\n * })\n * ```\n */\n// tslint:disable-next-line:variable-name\nvar boolean = new CoreType(\"boolean\", TypeFlags.Boolean, function (v) { return typeof v === \"boolean\"; });\n/**\n * `types.null` - The type of the value `null`\n */\nvar nullType = new CoreType(\"null\", TypeFlags.Null, function (v) { return v === null; });\n/**\n * `types.undefined` - The type of the value `undefined`\n */\nvar undefinedType = new CoreType(\"undefined\", TypeFlags.Undefined, function (v) { return v === undefined; });\nvar _DatePrimitive = new CoreType(\"Date\", TypeFlags.Date, function (v) { return typeof v === \"number\" || v instanceof Date; }, function (v) { return (v instanceof Date ? v : new Date(v)); });\n_DatePrimitive.getSnapshot = function (node) {\n    return node.storedValue.getTime();\n};\n/**\n * `types.Date` - Creates a type that can only contain a javascript Date value.\n *\n * Example:\n * ```ts\n * const LogLine = types.model({\n *   timestamp: types.Date,\n * })\n *\n * LogLine.create({ timestamp: new Date() })\n * ```\n */\nvar DatePrimitive = _DatePrimitive;\n/**\n * @internal\n * @hidden\n */\nfunction getPrimitiveFactoryFromValue(value) {\n    switch (typeof value) {\n        case \"string\":\n            return string;\n        case \"number\":\n            return number; // In the future, isInteger(value) ? integer : number would be interesting, but would be too breaking for now\n        case \"boolean\":\n            return boolean;\n        case \"object\":\n            if (value instanceof Date)\n                return DatePrimitive;\n    }\n    throw fail$1(\"Cannot determine primitive type from value \" + value);\n}\n/**\n * Returns if a given value represents a primitive type.\n *\n * @param type\n * @returns\n */\nfunction isPrimitiveType(type) {\n    return (isType(type) &&\n        (type.flags &\n            (TypeFlags.String |\n                TypeFlags.Number |\n                TypeFlags.Integer |\n                TypeFlags.Boolean |\n                TypeFlags.Date)) >\n            0);\n}\n\n/**\n * @internal\n * @hidden\n */\nvar Literal = /** @class */ (function (_super) {\n    __extends(Literal, _super);\n    function Literal(value) {\n        var _this = _super.call(this, JSON.stringify(value)) || this;\n        Object.defineProperty(_this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Literal\n        });\n        _this.value = value;\n        return _this;\n    }\n    Object.defineProperty(Literal.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            return createScalarNode(this, parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(Literal.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return JSON.stringify(this.value);\n        }\n    });\n    Object.defineProperty(Literal.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            if (isPrimitive(value) && value === this.value) {\n                return typeCheckSuccess();\n            }\n            return typeCheckFailure(context, value, \"Value is not a literal \" + JSON.stringify(this.value));\n        }\n    });\n    return Literal;\n}(SimpleType));\n/**\n * `types.literal` - The literal type will return a type that will match only the exact given type.\n * The given value must be a primitive, in order to be serialized to a snapshot correctly.\n * You can use literal to match exact strings for example the exact male or female string.\n *\n * Example:\n * ```ts\n * const Person = types.model({\n *     name: types.string,\n *     gender: types.union(types.literal('male'), types.literal('female'))\n * })\n * ```\n *\n * @param value The value to use in the strict equal check\n * @returns\n */\nfunction literal(value) {\n    // check that the given value is a primitive\n    assertArg(value, isPrimitive, \"primitive\", 1);\n    return new Literal(value);\n}\n/**\n * Returns if a given value represents a literal type.\n *\n * @param type\n * @returns\n */\nfunction isLiteralType(type) {\n    return isType(type) && (type.flags & TypeFlags.Literal) > 0;\n}\n\nvar Refinement = /** @class */ (function (_super) {\n    __extends(Refinement, _super);\n    function Refinement(name, _subtype, _predicate, _message) {\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"_subtype\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _subtype\n        });\n        Object.defineProperty(_this, \"_predicate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _predicate\n        });\n        Object.defineProperty(_this, \"_message\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _message\n        });\n        return _this;\n    }\n    Object.defineProperty(Refinement.prototype, \"flags\", {\n        get: function () {\n            return this._subtype.flags | TypeFlags.Refinement;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Refinement.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.name;\n        }\n    });\n    Object.defineProperty(Refinement.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            // create the child type\n            return this._subtype.instantiate(parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(Refinement.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            return this._subtype.isAssignableFrom(type);\n        }\n    });\n    Object.defineProperty(Refinement.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var subtypeErrors = this._subtype.validate(value, context);\n            if (subtypeErrors.length > 0)\n                return subtypeErrors;\n            var snapshot = isStateTreeNode(value) ? getStateTreeNode(value).snapshot : value;\n            if (!this._predicate(snapshot)) {\n                return typeCheckFailure(context, value, this._message(value));\n            }\n            return typeCheckSuccess();\n        }\n    });\n    Object.defineProperty(Refinement.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            return this._subtype.reconcile(current, newValue, parent, subpath);\n        }\n    });\n    Object.defineProperty(Refinement.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subtype;\n        }\n    });\n    return Refinement;\n}(BaseType));\n/**\n * `types.refinement` - Creates a type that is more specific than the base type, e.g. `types.refinement(types.string, value => value.length > 5)` to create a type of strings that can only be longer then 5.\n *\n * @param name\n * @param type\n * @param predicate\n * @returns\n */\nfunction refinement() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var name = typeof args[0] === \"string\" ? args.shift() : isType(args[0]) ? args[0].name : null;\n    var type = args[0];\n    var predicate = args[1];\n    var message = args[2]\n        ? args[2]\n        : function (v) { return \"Value does not respect the refinement predicate\"; };\n    // ensures all parameters are correct\n    assertIsType(type, [1, 2]);\n    assertIsString(name, 1);\n    assertIsFunction(predicate, [2, 3]);\n    assertIsFunction(message, [3, 4]);\n    return new Refinement(name, type, predicate, message);\n}\n/**\n * Returns if a given value is a refinement type.\n *\n * @param type\n * @returns\n */\nfunction isRefinementType(type) {\n    return (type.flags & TypeFlags.Refinement) > 0;\n}\n\n/**\n * `types.enumeration` - Can be used to create an string based enumeration.\n * (note: this methods is just sugar for a union of string literals)\n *\n * Example:\n * ```ts\n * const TrafficLight = types.model({\n *   color: types.enumeration(\"Color\", [\"Red\", \"Orange\", \"Green\"])\n * })\n * ```\n *\n * @param name descriptive name of the enumeration (optional)\n * @param options possible values this enumeration can have\n * @returns\n */\nfunction enumeration(name, options) {\n    var realOptions = typeof name === \"string\" ? options : name;\n    // check all options\n    if (devMode()) {\n        realOptions.forEach(function (option, i) {\n            assertIsString(option, i + 1);\n        });\n    }\n    var type = union.apply(void 0, __spread(realOptions.map(function (option) { return literal(\"\" + option); })));\n    if (typeof name === \"string\")\n        type.name = name;\n    return type;\n}\n\n/**\n * @internal\n * @hidden\n */\nvar Union = /** @class */ (function (_super) {\n    __extends(Union, _super);\n    function Union(name, _types, options) {\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"_types\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _types\n        });\n        Object.defineProperty(_this, \"_dispatcher\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_eager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        options = __assign({ eager: true, dispatcher: undefined }, options);\n        _this._dispatcher = options.dispatcher;\n        if (!options.eager)\n            _this._eager = false;\n        return _this;\n    }\n    Object.defineProperty(Union.prototype, \"flags\", {\n        get: function () {\n            var result = TypeFlags.Union;\n            this._types.forEach(function (type) {\n                result |= type.flags;\n            });\n            return result;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Union.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            return this._types.some(function (subType) { return subType.isAssignableFrom(type); });\n        }\n    });\n    Object.defineProperty(Union.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return \"(\" + this._types.map(function (factory) { return factory.describe(); }).join(\" | \") + \")\";\n        }\n    });\n    Object.defineProperty(Union.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            var type = this.determineType(initialValue, undefined);\n            if (!type)\n                throw fail$1(\"No matching type for union \" + this.describe()); // can happen in prod builds\n            return type.instantiate(parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(Union.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            var type = this.determineType(newValue, current.getReconciliationType());\n            if (!type)\n                throw fail$1(\"No matching type for union \" + this.describe()); // can happen in prod builds\n            return type.reconcile(current, newValue, parent, subpath);\n        }\n    });\n    Object.defineProperty(Union.prototype, \"determineType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, reconcileCurrentType) {\n            // try the dispatcher, if defined\n            if (this._dispatcher) {\n                return this._dispatcher(value);\n            }\n            // find the most accomodating type\n            // if we are using reconciliation try the current node type first (fix for #1045)\n            if (reconcileCurrentType) {\n                if (reconcileCurrentType.is(value)) {\n                    return reconcileCurrentType;\n                }\n                return this._types\n                    .filter(function (t) { return t !== reconcileCurrentType; })\n                    .find(function (type) { return type.is(value); });\n            }\n            else {\n                return this._types.find(function (type) { return type.is(value); });\n            }\n        }\n    });\n    Object.defineProperty(Union.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            if (this._dispatcher) {\n                return this._dispatcher(value).validate(value, context);\n            }\n            var allErrors = [];\n            var applicableTypes = 0;\n            for (var i = 0; i < this._types.length; i++) {\n                var type = this._types[i];\n                var errors = type.validate(value, context);\n                if (errors.length === 0) {\n                    if (this._eager)\n                        return typeCheckSuccess();\n                    else\n                        applicableTypes++;\n                }\n                else {\n                    allErrors.push(errors);\n                }\n            }\n            if (applicableTypes === 1)\n                return typeCheckSuccess();\n            return typeCheckFailure(context, value, \"No type is applicable for the union\").concat(flattenTypeErrors(allErrors));\n        }\n    });\n    Object.defineProperty(Union.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._types;\n        }\n    });\n    return Union;\n}(BaseType));\n/**\n * `types.union` - Create a union of multiple types. If the correct type cannot be inferred unambiguously from a snapshot, provide a dispatcher function of the form `(snapshot) => Type`.\n *\n * @param optionsOrType\n * @param otherTypes\n * @returns\n */\nfunction union(optionsOrType) {\n    var otherTypes = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherTypes[_i - 1] = arguments[_i];\n    }\n    var options = isType(optionsOrType) ? undefined : optionsOrType;\n    var types = isType(optionsOrType) ? __spread([optionsOrType], otherTypes) : otherTypes;\n    var name = \"(\" + types.map(function (type) { return type.name; }).join(\" | \") + \")\";\n    // check all options\n    if (devMode()) {\n        if (options) {\n            assertArg(options, function (o) { return isPlainObject(o); }, \"object { eager?: boolean, dispatcher?: Function }\", 1);\n        }\n        types.forEach(function (type, i) {\n            assertIsType(type, options ? i + 2 : i + 1);\n        });\n    }\n    return new Union(name, types, options);\n}\n/**\n * Returns if a given value represents a union type.\n *\n * @param type\n * @returns\n */\nfunction isUnionType(type) {\n    return (type.flags & TypeFlags.Union) > 0;\n}\n\n/**\n * @hidden\n * @internal\n */\nvar OptionalValue = /** @class */ (function (_super) {\n    __extends(OptionalValue, _super);\n    function OptionalValue(_subtype, _defaultValue, optionalValues) {\n        var _this = _super.call(this, _subtype.name) || this;\n        Object.defineProperty(_this, \"_subtype\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _subtype\n        });\n        Object.defineProperty(_this, \"_defaultValue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _defaultValue\n        });\n        Object.defineProperty(_this, \"optionalValues\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: optionalValues\n        });\n        return _this;\n    }\n    Object.defineProperty(OptionalValue.prototype, \"flags\", {\n        get: function () {\n            return this._subtype.flags | TypeFlags.Optional;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(OptionalValue.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subtype.describe() + \"?\";\n        }\n    });\n    Object.defineProperty(OptionalValue.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            if (this.optionalValues.indexOf(initialValue) >= 0) {\n                var defaultInstanceOrSnapshot = this.getDefaultInstanceOrSnapshot();\n                return this._subtype.instantiate(parent, subpath, environment, defaultInstanceOrSnapshot);\n            }\n            return this._subtype.instantiate(parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(OptionalValue.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            return this._subtype.reconcile(current, this.optionalValues.indexOf(newValue) < 0 && this._subtype.is(newValue)\n                ? newValue\n                : this.getDefaultInstanceOrSnapshot(), parent, subpath);\n        }\n    });\n    Object.defineProperty(OptionalValue.prototype, \"getDefaultInstanceOrSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var defaultInstanceOrSnapshot = typeof this._defaultValue === \"function\"\n                ? this._defaultValue()\n                : this._defaultValue;\n            // while static values are already snapshots and checked on types.optional\n            // generator functions must always be rechecked just in case\n            if (typeof this._defaultValue === \"function\") {\n                typecheckInternal(this, defaultInstanceOrSnapshot);\n            }\n            return defaultInstanceOrSnapshot;\n        }\n    });\n    Object.defineProperty(OptionalValue.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            // defaulted values can be skipped\n            if (this.optionalValues.indexOf(value) >= 0) {\n                return typeCheckSuccess();\n            }\n            // bounce validation to the sub-type\n            return this._subtype.validate(value, context);\n        }\n    });\n    Object.defineProperty(OptionalValue.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            return this._subtype.isAssignableFrom(type);\n        }\n    });\n    Object.defineProperty(OptionalValue.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subtype;\n        }\n    });\n    return OptionalValue;\n}(BaseType));\nfunction checkOptionalPreconditions(type, defaultValueOrFunction) {\n    // make sure we never pass direct instances\n    if (typeof defaultValueOrFunction !== \"function\" && isStateTreeNode(defaultValueOrFunction)) {\n        throw fail$1(\"default value cannot be an instance, pass a snapshot or a function that creates an instance/snapshot instead\");\n    }\n    assertIsType(type, 1);\n    if (devMode()) {\n        // we only check default values if they are passed directly\n        // if they are generator functions they will be checked once they are generated\n        // we don't check generator function results here to avoid generating a node just for type-checking purposes\n        // which might generate side-effects\n        if (typeof defaultValueOrFunction !== \"function\") {\n            typecheckInternal(type, defaultValueOrFunction);\n        }\n    }\n}\n/**\n * `types.optional` - Can be used to create a property with a default value.\n *\n * Depending on the third argument (`optionalValues`) there are two ways of operation:\n * - If the argument is not provided, then if a value is not provided in the snapshot (`undefined` or missing),\n *   it will default to the provided `defaultValue`\n * - If the argument is provided, then if the value in the snapshot matches one of the optional values inside the array then it will\n *   default to the provided `defaultValue`. Additionally, if one of the optional values inside the array is `undefined` then a missing\n *   property is also valid.\n *\n *   Note that it is also possible to include values of the same type as the intended subtype as optional values,\n *   in this case the optional value will be transformed into the `defaultValue` (e.g. `types.optional(types.string, \"unnamed\", [undefined, \"\"])`\n *   will transform the snapshot values `undefined` (and therefore missing) and empty strings into the string `\"unnamed\"` when it gets\n *   instantiated).\n *\n * If `defaultValue` is a function, the function will be invoked for every new instance.\n * Applying a snapshot in which the optional value is one of the optional values (or `undefined`/_not_ present if none are provided) causes the\n * value to be reset.\n *\n * Example:\n * ```ts\n * const Todo = types.model({\n *   title: types.string,\n *   subtitle1: types.optional(types.string, \"\", [null]),\n *   subtitle2: types.optional(types.string, \"\", [null, undefined]),\n *   done: types.optional(types.boolean, false),\n *   created: types.optional(types.Date, () => new Date()),\n * })\n *\n * // if done is missing / undefined it will become false\n * // if created is missing / undefined it will get a freshly generated timestamp\n * // if subtitle1 is null it will default to \"\", but it cannot be missing or undefined\n * // if subtitle2 is null or undefined it will default to \"\"; since it can be undefined it can also be missing\n * const todo = Todo.create({ title: \"Get coffee\", subtitle1: null })\n * ```\n *\n * @param type\n * @param defaultValueOrFunction\n * @param optionalValues an optional array with zero or more primitive values (string, number, boolean, null or undefined)\n *                       that will be converted into the default. `[ undefined ]` is assumed when none is provided\n * @returns\n */\nfunction optional(type, defaultValueOrFunction, optionalValues) {\n    checkOptionalPreconditions(type, defaultValueOrFunction);\n    return new OptionalValue(type, defaultValueOrFunction, optionalValues ? optionalValues : undefinedAsOptionalValues);\n}\nvar undefinedAsOptionalValues = [undefined];\n/**\n * Returns if a value represents an optional type.\n *\n * @template IT\n * @param type\n * @returns\n */\nfunction isOptionalType(type) {\n    return isType(type) && (type.flags & TypeFlags.Optional) > 0;\n}\n\nvar optionalUndefinedType = optional(undefinedType, undefined);\nvar optionalNullType = optional(nullType, null);\n/**\n * `types.maybe` - Maybe will make a type nullable, and also optional.\n * The value `undefined` will be used to represent nullability.\n *\n * @param type\n * @returns\n */\nfunction maybe(type) {\n    assertIsType(type, 1);\n    return union(type, optionalUndefinedType);\n}\n/**\n * `types.maybeNull` - Maybe will make a type nullable, and also optional.\n * The value `null` will be used to represent no value.\n *\n * @param type\n * @returns\n */\nfunction maybeNull(type) {\n    assertIsType(type, 1);\n    return union(type, optionalNullType);\n}\n\nvar Late = /** @class */ (function (_super) {\n    __extends(Late, _super);\n    function Late(name, _definition) {\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"_definition\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _definition\n        });\n        Object.defineProperty(_this, \"_subType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        return _this;\n    }\n    Object.defineProperty(Late.prototype, \"flags\", {\n        get: function () {\n            return (this._subType ? this._subType.flags : 0) | TypeFlags.Late;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Late.prototype, \"getSubType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (mustSucceed) {\n            if (!this._subType) {\n                var t = undefined;\n                try {\n                    t = this._definition();\n                }\n                catch (e) {\n                    if (e instanceof ReferenceError)\n                        // can happen in strict ES5 code when a definition is self refering\n                        t = undefined;\n                    else\n                        throw e;\n                }\n                if (mustSucceed && t === undefined)\n                    throw fail$1(\"Late type seems to be used too early, the definition (still) returns undefined\");\n                if (t) {\n                    if (devMode() && !isType(t))\n                        throw fail$1(\"Failed to determine subtype, make sure types.late returns a type definition.\");\n                    this._subType = t;\n                }\n            }\n            return this._subType;\n        }\n    });\n    Object.defineProperty(Late.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            return this.getSubType(true).instantiate(parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(Late.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            return this.getSubType(true).reconcile(current, newValue, parent, subpath);\n        }\n    });\n    Object.defineProperty(Late.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var t = this.getSubType(false);\n            return t ? t.name : \"<uknown late type>\";\n        }\n    });\n    Object.defineProperty(Late.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var t = this.getSubType(false);\n            if (!t) {\n                // See #916; the variable the definition closure is pointing to wasn't defined yet, so can't be evaluted yet here\n                return typeCheckSuccess();\n            }\n            return t.validate(value, context);\n        }\n    });\n    Object.defineProperty(Late.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            var t = this.getSubType(false);\n            return t ? t.isAssignableFrom(type) : false;\n        }\n    });\n    Object.defineProperty(Late.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var subtype = this.getSubType(false);\n            return subtype ? subtype : cannotDetermineSubtype;\n        }\n    });\n    return Late;\n}(BaseType));\n/**\n * `types.late` - Defines a type that gets implemented later. This is useful when you have to deal with circular dependencies.\n * Please notice that when defining circular dependencies TypeScript isn't smart enough to inference them.\n *\n * Example:\n * ```ts\n *   // TypeScript isn't smart enough to infer self referencing types.\n *  const Node = types.model({\n *       children: types.array(types.late((): IAnyModelType => Node)) // then typecast each array element to Instance<typeof Node>\n *  })\n * ```\n *\n * @param name The name to use for the type that will be returned.\n * @param type A function that returns the type that will be defined.\n * @returns\n */\nfunction late(nameOrType, maybeType) {\n    var name = typeof nameOrType === \"string\" ? nameOrType : \"late(\" + nameOrType.toString() + \")\";\n    var type = typeof nameOrType === \"string\" ? maybeType : nameOrType;\n    // checks that the type is actually a late type\n    if (devMode()) {\n        if (!(typeof type === \"function\" && type.length === 0))\n            throw fail$1(\"Invalid late type, expected a function with zero arguments that returns a type, got: \" +\n                type);\n    }\n    return new Late(name, type);\n}\n/**\n * Returns if a given value represents a late type.\n *\n * @param type\n * @returns\n */\nfunction isLateType(type) {\n    return isType(type) && (type.flags & TypeFlags.Late) > 0;\n}\n\n/**\n * @internal\n * @hidden\n */\nvar Frozen = /** @class */ (function (_super) {\n    __extends(Frozen, _super);\n    function Frozen(subType) {\n        var _this = _super.call(this, subType ? \"frozen(\" + subType.name + \")\" : \"frozen\") || this;\n        Object.defineProperty(_this, \"subType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: subType\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Frozen\n        });\n        return _this;\n    }\n    Object.defineProperty(Frozen.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return \"<any immutable value>\";\n        }\n    });\n    Object.defineProperty(Frozen.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, value) {\n            // create the node\n            return createScalarNode(this, parent, subpath, environment, deepFreeze(value));\n        }\n    });\n    Object.defineProperty(Frozen.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            if (!isSerializable(value)) {\n                return typeCheckFailure(context, value, \"Value is not serializable and cannot be frozen\");\n            }\n            if (this.subType)\n                return this.subType.validate(value, context);\n            return typeCheckSuccess();\n        }\n    });\n    return Frozen;\n}(SimpleType));\nvar untypedFrozenInstance = new Frozen();\n/**\n * `types.frozen` - Frozen can be used to store any value that is serializable in itself (that is valid JSON).\n * Frozen values need to be immutable or treated as if immutable. They need be serializable as well.\n * Values stored in frozen will snapshotted as-is by MST, and internal changes will not be tracked.\n *\n * This is useful to store complex, but immutable values like vectors etc. It can form a powerful bridge to parts of your application that should be immutable, or that assume data to be immutable.\n *\n * Note: if you want to store free-form state that is mutable, or not serializeable, consider using volatile state instead.\n *\n * Frozen properties can be defined in three different ways\n * 1. `types.frozen(SubType)` - provide a valid MST type and frozen will check if the provided data conforms the snapshot for that type\n * 2. `types.frozen({ someDefaultValue: true})` - provide a primitive value, object or array, and MST will infer the type from that object, and also make it the default value for the field\n * 3. `types.frozen<TypeScriptType>()` - provide a typescript type, to help in strongly typing the field (design time only)\n *\n * Example:\n * ```ts\n * const GameCharacter = types.model({\n *   name: string,\n *   location: types.frozen({ x: 0, y: 0})\n * })\n *\n * const hero = GameCharacter.create({\n *   name: \"Mario\",\n *   location: { x: 7, y: 4 }\n * })\n *\n * hero.location = { x: 10, y: 2 } // OK\n * hero.location.x = 7 // Not ok!\n * ```\n *\n * ```ts\n * type Point = { x: number, y: number }\n *    const Mouse = types.model({\n *         loc: types.frozen<Point>()\n *    })\n * ```\n *\n * @param defaultValueOrType\n * @returns\n */\nfunction frozen(arg) {\n    if (arguments.length === 0)\n        return untypedFrozenInstance;\n    else if (isType(arg))\n        return new Frozen(arg);\n    else\n        return optional(untypedFrozenInstance, arg);\n}\n/**\n * Returns if a given value represents a frozen type.\n *\n * @param type\n * @returns\n */\nfunction isFrozenType(type) {\n    return isType(type) && (type.flags & TypeFlags.Frozen) > 0;\n}\n\nfunction getInvalidationCause(hook) {\n    switch (hook) {\n        case Hook.beforeDestroy:\n            return \"destroy\";\n        case Hook.beforeDetach:\n            return \"detach\";\n        default:\n            return undefined;\n    }\n}\nvar StoredReference = /** @class */ (function () {\n    function StoredReference(value, targetType) {\n        Object.defineProperty(this, \"targetType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: targetType\n        });\n        Object.defineProperty(this, \"identifier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"node\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"resolvedReference\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (isValidIdentifier(value)) {\n            this.identifier = value;\n        }\n        else if (isStateTreeNode(value)) {\n            var targetNode = getStateTreeNode(value);\n            if (!targetNode.identifierAttribute)\n                throw fail$1(\"Can only store references with a defined identifier attribute.\");\n            var id = targetNode.unnormalizedIdentifier;\n            if (id === null || id === undefined) {\n                throw fail$1(\"Can only store references to tree nodes with a defined identifier.\");\n            }\n            this.identifier = id;\n        }\n        else {\n            throw fail$1(\"Can only store references to tree nodes or identifiers, got: '\" + value + \"'\");\n        }\n    }\n    Object.defineProperty(StoredReference.prototype, \"updateResolvedReference\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            var normalizedId = normalizeIdentifier(this.identifier);\n            var root = node.root;\n            var lastCacheModification = root.identifierCache.getLastCacheModificationPerId(normalizedId);\n            if (!this.resolvedReference ||\n                this.resolvedReference.lastCacheModification !== lastCacheModification) {\n                var targetType = this.targetType;\n                // reference was initialized with the identifier of the target\n                var target = root.identifierCache.resolve(targetType, normalizedId);\n                if (!target) {\n                    throw new InvalidReferenceError(\"[mobx-state-tree] Failed to resolve reference '\" + this.identifier + \"' to type '\" + this.targetType.name + \"' (from node: \" + node.path + \")\");\n                }\n                this.resolvedReference = {\n                    node: target,\n                    lastCacheModification: lastCacheModification\n                };\n            }\n        }\n    });\n    Object.defineProperty(StoredReference.prototype, \"resolvedValue\", {\n        get: function () {\n            this.updateResolvedReference(this.node);\n            return this.resolvedReference.node.value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return StoredReference;\n}());\n/**\n * @internal\n * @hidden\n */\nvar InvalidReferenceError = /** @class */ (function (_super) {\n    __extends(InvalidReferenceError, _super);\n    function InvalidReferenceError(m) {\n        var _this = _super.call(this, m) || this;\n        Object.setPrototypeOf(_this, InvalidReferenceError.prototype);\n        return _this;\n    }\n    return InvalidReferenceError;\n}(Error));\n/**\n * @internal\n * @hidden\n */\nvar BaseReferenceType = /** @class */ (function (_super) {\n    __extends(BaseReferenceType, _super);\n    function BaseReferenceType(targetType, onInvalidated) {\n        var _this = _super.call(this, \"reference(\" + targetType.name + \")\") || this;\n        Object.defineProperty(_this, \"targetType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: targetType\n        });\n        Object.defineProperty(_this, \"onInvalidated\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: onInvalidated\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Reference\n        });\n        return _this;\n    }\n    Object.defineProperty(BaseReferenceType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.name;\n        }\n    });\n    Object.defineProperty(BaseReferenceType.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            return this.targetType.isAssignableFrom(type);\n        }\n    });\n    Object.defineProperty(BaseReferenceType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            return isValidIdentifier(value)\n                ? typeCheckSuccess()\n                : typeCheckFailure(context, value, \"Value is not a valid identifier, which is a string or a number\");\n        }\n    });\n    Object.defineProperty(BaseReferenceType.prototype, \"fireInvalidated\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (cause, storedRefNode, referenceId, refTargetNode) {\n            // to actually invalidate a reference we need an alive parent,\n            // since it is a scalar value (immutable-ish) and we need to change it\n            // from the parent\n            var storedRefParentNode = storedRefNode.parent;\n            if (!storedRefParentNode || !storedRefParentNode.isAlive) {\n                return;\n            }\n            var storedRefParentValue = storedRefParentNode.storedValue;\n            if (!storedRefParentValue) {\n                return;\n            }\n            this.onInvalidated({\n                cause: cause,\n                parent: storedRefParentValue,\n                invalidTarget: refTargetNode ? refTargetNode.storedValue : undefined,\n                invalidId: referenceId,\n                replaceRef: function (newRef) {\n                    applyPatch(storedRefNode.root.storedValue, {\n                        op: \"replace\",\n                        value: newRef,\n                        path: storedRefNode.path\n                    });\n                },\n                removeRef: function () {\n                    if (isModelType(storedRefParentNode.type)) {\n                        this.replaceRef(undefined);\n                    }\n                    else {\n                        applyPatch(storedRefNode.root.storedValue, {\n                            op: \"remove\",\n                            path: storedRefNode.path\n                        });\n                    }\n                }\n            });\n        }\n    });\n    Object.defineProperty(BaseReferenceType.prototype, \"addTargetNodeWatcher\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (storedRefNode, referenceId) {\n            var _this = this;\n            // this will make sure the target node becomes created\n            var refTargetValue = this.getValue(storedRefNode);\n            if (!refTargetValue) {\n                return undefined;\n            }\n            var refTargetNode = getStateTreeNode(refTargetValue);\n            var hookHandler = function (_, refTargetNodeHook) {\n                var cause = getInvalidationCause(refTargetNodeHook);\n                if (!cause) {\n                    return;\n                }\n                _this.fireInvalidated(cause, storedRefNode, referenceId, refTargetNode);\n            };\n            var refTargetDetachHookDisposer = refTargetNode.registerHook(Hook.beforeDetach, hookHandler);\n            var refTargetDestroyHookDisposer = refTargetNode.registerHook(Hook.beforeDestroy, hookHandler);\n            return function () {\n                refTargetDetachHookDisposer();\n                refTargetDestroyHookDisposer();\n            };\n        }\n    });\n    Object.defineProperty(BaseReferenceType.prototype, \"watchTargetNodeForInvalidations\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (storedRefNode, identifier, customGetSet) {\n            var _this = this;\n            if (!this.onInvalidated) {\n                return;\n            }\n            var onRefTargetDestroyedHookDisposer;\n            // get rid of the watcher hook when the stored ref node is destroyed\n            // detached is ignored since scalar nodes (where the reference resides) cannot be detached\n            storedRefNode.registerHook(Hook.beforeDestroy, function () {\n                if (onRefTargetDestroyedHookDisposer) {\n                    onRefTargetDestroyedHookDisposer();\n                }\n            });\n            var startWatching = function (sync) {\n                // re-create hook in case the stored ref gets reattached\n                if (onRefTargetDestroyedHookDisposer) {\n                    onRefTargetDestroyedHookDisposer();\n                }\n                // make sure the target node is actually there and initialized\n                var storedRefParentNode = storedRefNode.parent;\n                var storedRefParentValue = storedRefParentNode && storedRefParentNode.storedValue;\n                if (storedRefParentNode && storedRefParentNode.isAlive && storedRefParentValue) {\n                    var refTargetNodeExists = void 0;\n                    if (customGetSet) {\n                        refTargetNodeExists = !!customGetSet.get(identifier, storedRefParentValue);\n                    }\n                    else {\n                        refTargetNodeExists = storedRefNode.root.identifierCache.has(_this.targetType, normalizeIdentifier(identifier));\n                    }\n                    if (!refTargetNodeExists) {\n                        // we cannot change the reference in sync mode\n                        // since we are in the middle of a reconciliation/instantiation and the change would be overwritten\n                        // for those cases just let the wrong reference be assigned and fail upon usage\n                        // (like current references do)\n                        // this means that effectively this code will only run when it is created from a snapshot\n                        if (!sync) {\n                            _this.fireInvalidated(\"invalidSnapshotReference\", storedRefNode, identifier, null);\n                        }\n                    }\n                    else {\n                        onRefTargetDestroyedHookDisposer = _this.addTargetNodeWatcher(storedRefNode, identifier);\n                    }\n                }\n            };\n            if (storedRefNode.state === NodeLifeCycle.FINALIZED) {\n                // already attached, so the whole tree is ready\n                startWatching(true);\n            }\n            else {\n                if (!storedRefNode.isRoot) {\n                    // start watching once the whole tree is ready\n                    storedRefNode.root.registerHook(Hook.afterCreationFinalization, function () {\n                        // make sure to attach it so it can start listening\n                        if (storedRefNode.parent) {\n                            storedRefNode.parent.createObservableInstanceIfNeeded();\n                        }\n                    });\n                }\n                // start watching once the node is attached somewhere / parent changes\n                storedRefNode.registerHook(Hook.afterAttach, function () {\n                    startWatching(false);\n                });\n            }\n        }\n    });\n    return BaseReferenceType;\n}(SimpleType));\n/**\n * @internal\n * @hidden\n */\nvar IdentifierReferenceType = /** @class */ (function (_super) {\n    __extends(IdentifierReferenceType, _super);\n    function IdentifierReferenceType(targetType, onInvalidated) {\n        return _super.call(this, targetType, onInvalidated) || this;\n    }\n    Object.defineProperty(IdentifierReferenceType.prototype, \"getValue\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (storedRefNode) {\n            if (!storedRefNode.isAlive)\n                return undefined;\n            var storedRef = storedRefNode.storedValue;\n            return storedRef.resolvedValue;\n        }\n    });\n    Object.defineProperty(IdentifierReferenceType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (storedRefNode) {\n            var ref = storedRefNode.storedValue;\n            return ref.identifier;\n        }\n    });\n    Object.defineProperty(IdentifierReferenceType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            var identifier = isStateTreeNode(initialValue)\n                ? getIdentifier(initialValue)\n                : initialValue;\n            var storedRef = new StoredReference(initialValue, this.targetType);\n            var storedRefNode = createScalarNode(this, parent, subpath, environment, storedRef);\n            storedRef.node = storedRefNode;\n            this.watchTargetNodeForInvalidations(storedRefNode, identifier, undefined);\n            return storedRefNode;\n        }\n    });\n    Object.defineProperty(IdentifierReferenceType.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            if (!current.isDetaching && current.type === this) {\n                var compareByValue = isStateTreeNode(newValue);\n                var ref = current.storedValue;\n                if ((!compareByValue && ref.identifier === newValue) ||\n                    (compareByValue && ref.resolvedValue === newValue)) {\n                    current.setParent(parent, subpath);\n                    return current;\n                }\n            }\n            var newNode = this.instantiate(parent, subpath, undefined, newValue);\n            current.die(); // noop if detaching\n            return newNode;\n        }\n    });\n    return IdentifierReferenceType;\n}(BaseReferenceType));\n/**\n * @internal\n * @hidden\n */\nvar CustomReferenceType = /** @class */ (function (_super) {\n    __extends(CustomReferenceType, _super);\n    function CustomReferenceType(targetType, options, onInvalidated) {\n        var _this = _super.call(this, targetType, onInvalidated) || this;\n        Object.defineProperty(_this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        return _this;\n    }\n    Object.defineProperty(CustomReferenceType.prototype, \"getValue\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (storedRefNode) {\n            if (!storedRefNode.isAlive)\n                return undefined;\n            var referencedNode = this.options.get(storedRefNode.storedValue, storedRefNode.parent ? storedRefNode.parent.storedValue : null);\n            return referencedNode;\n        }\n    });\n    Object.defineProperty(CustomReferenceType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (storedRefNode) {\n            return storedRefNode.storedValue;\n        }\n    });\n    Object.defineProperty(CustomReferenceType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, newValue) {\n            var identifier = isStateTreeNode(newValue)\n                ? this.options.set(newValue, parent ? parent.storedValue : null)\n                : newValue;\n            var storedRefNode = createScalarNode(this, parent, subpath, environment, identifier);\n            this.watchTargetNodeForInvalidations(storedRefNode, identifier, this.options);\n            return storedRefNode;\n        }\n    });\n    Object.defineProperty(CustomReferenceType.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            var newIdentifier = isStateTreeNode(newValue)\n                ? this.options.set(newValue, current ? current.storedValue : null)\n                : newValue;\n            if (!current.isDetaching &&\n                current.type === this &&\n                current.storedValue === newIdentifier) {\n                current.setParent(parent, subpath);\n                return current;\n            }\n            var newNode = this.instantiate(parent, subpath, undefined, newIdentifier);\n            current.die(); // noop if detaching\n            return newNode;\n        }\n    });\n    return CustomReferenceType;\n}(BaseReferenceType));\n/**\n * `types.reference` - Creates a reference to another type, which should have defined an identifier.\n * See also the [reference and identifiers](https://github.com/mobxjs/mobx-state-tree#references-and-identifiers) section.\n */\nfunction reference(subType, options) {\n    assertIsType(subType, 1);\n    if (devMode()) {\n        if (arguments.length === 2 && typeof arguments[1] === \"string\") {\n            // istanbul ignore next\n            throw fail$1(\"References with base path are no longer supported. Please remove the base path.\");\n        }\n    }\n    var getSetOptions = options ? options : undefined;\n    var onInvalidated = options\n        ? options.onInvalidated\n        : undefined;\n    if (getSetOptions && (getSetOptions.get || getSetOptions.set)) {\n        if (devMode()) {\n            if (!getSetOptions.get || !getSetOptions.set) {\n                throw fail$1(\"reference options must either contain both a 'get' and a 'set' method or none of them\");\n            }\n        }\n        return new CustomReferenceType(subType, {\n            get: getSetOptions.get,\n            set: getSetOptions.set\n        }, onInvalidated);\n    }\n    else {\n        return new IdentifierReferenceType(subType, onInvalidated);\n    }\n}\n/**\n * Returns if a given value represents a reference type.\n *\n * @param type\n * @returns\n */\nfunction isReferenceType(type) {\n    return (type.flags & TypeFlags.Reference) > 0;\n}\n/**\n * `types.safeReference` - A safe reference is like a standard reference, except that it accepts the undefined value by default\n * and automatically sets itself to undefined (when the parent is a model) / removes itself from arrays and maps\n * when the reference it is pointing to gets detached/destroyed.\n *\n * The optional options parameter object accepts a parameter named `acceptsUndefined`, which is set to true by default, so it is suitable\n * for model properties.\n * When used inside collections (arrays/maps), it is recommended to set this option to false so it can't take undefined as value,\n * which is usually the desired in those cases.\n * Additionally, the optional options parameter object accepts a parameter named `onInvalidated`, which will be called when the reference target node that the reference is pointing to is about to be detached/destroyed\n *\n * Strictly speaking it is a `types.maybe(types.reference(X))` (when `acceptsUndefined` is set to true, the default) and\n * `types.reference(X)` (when `acceptsUndefined` is set to false), both of them with a customized `onInvalidated` option.\n *\n * @param subType\n * @param options\n * @returns\n */\nfunction safeReference(subType, options) {\n    var refType = reference(subType, __assign(__assign({}, options), { onInvalidated: function (ev) {\n            if (options && options.onInvalidated) {\n                options.onInvalidated(ev);\n            }\n            ev.removeRef();\n        } }));\n    if (options && options.acceptsUndefined === false) {\n        return refType;\n    }\n    else {\n        return maybe(refType);\n    }\n}\n\nvar BaseIdentifierType = /** @class */ (function (_super) {\n    __extends(BaseIdentifierType, _super);\n    function BaseIdentifierType(name, validType) {\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"validType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: validType\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Identifier\n        });\n        return _this;\n    }\n    Object.defineProperty(BaseIdentifierType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            if (!parent || !(parent.type instanceof ModelType))\n                throw fail$1(\"Identifier types can only be instantiated as direct child of a model type\");\n            return createScalarNode(this, parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(BaseIdentifierType.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            // we don't consider detaching here since identifier are scalar nodes, and scalar nodes cannot be detached\n            if (current.storedValue !== newValue)\n                throw fail$1(\"Tried to change identifier from '\" + current.storedValue + \"' to '\" + newValue + \"'. Changing identifiers is not allowed.\");\n            current.setParent(parent, subpath);\n            return current;\n        }\n    });\n    Object.defineProperty(BaseIdentifierType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            if (typeof value !== this.validType) {\n                return typeCheckFailure(context, value, \"Value is not a valid \" + this.describe() + \", expected a \" + this.validType);\n            }\n            return typeCheckSuccess();\n        }\n    });\n    return BaseIdentifierType;\n}(SimpleType));\n/**\n * @internal\n * @hidden\n */\nvar IdentifierType = /** @class */ (function (_super) {\n    __extends(IdentifierType, _super);\n    function IdentifierType() {\n        var _this = _super.call(this, \"identifier\", \"string\") || this;\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Identifier\n        });\n        return _this;\n    }\n    Object.defineProperty(IdentifierType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return \"identifier\";\n        }\n    });\n    return IdentifierType;\n}(BaseIdentifierType));\n/**\n * @internal\n * @hidden\n */\nvar IdentifierNumberType = /** @class */ (function (_super) {\n    __extends(IdentifierNumberType, _super);\n    function IdentifierNumberType() {\n        return _super.call(this, \"identifierNumber\", \"number\") || this;\n    }\n    Object.defineProperty(IdentifierNumberType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            return node.storedValue;\n        }\n    });\n    Object.defineProperty(IdentifierNumberType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return \"identifierNumber\";\n        }\n    });\n    return IdentifierNumberType;\n}(BaseIdentifierType));\n/**\n * `types.identifier` - Identifiers are used to make references, lifecycle events and reconciling works.\n * Inside a state tree, for each type can exist only one instance for each given identifier.\n * For example there couldn't be 2 instances of user with id 1. If you need more, consider using references.\n * Identifier can be used only as type property of a model.\n * This type accepts as parameter the value type of the identifier field that can be either string or number.\n *\n * Example:\n * ```ts\n *  const Todo = types.model(\"Todo\", {\n *      id: types.identifier,\n *      title: types.string\n *  })\n * ```\n *\n * @returns\n */\nvar identifier = new IdentifierType();\n/**\n * `types.identifierNumber` - Similar to `types.identifier`. This one will serialize from / to a number when applying snapshots\n *\n * Example:\n * ```ts\n *  const Todo = types.model(\"Todo\", {\n *      id: types.identifierNumber,\n *      title: types.string\n *  })\n * ```\n *\n * @returns\n */\nvar identifierNumber = new IdentifierNumberType();\n/**\n * Returns if a given value represents an identifier type.\n *\n * @param type\n * @returns\n */\nfunction isIdentifierType(type) {\n    return isType(type) && (type.flags & TypeFlags.Identifier) > 0;\n}\n/**\n * @internal\n * @hidden\n */\nfunction normalizeIdentifier(id) {\n    return \"\" + id;\n}\n/**\n * @internal\n * @hidden\n */\nfunction isValidIdentifier(id) {\n    return typeof id === \"string\" || typeof id === \"number\";\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertIsValidIdentifier(id, argNumber) {\n    assertArg(id, isValidIdentifier, \"string or number (identifier)\", argNumber);\n}\n\n/**\n * `types.custom` - Creates a custom type. Custom types can be used for arbitrary immutable values, that have a serializable representation. For example, to create your own Date representation, Decimal type etc.\n *\n * The signature of the options is:\n * ```ts\n * export interface CustomTypeOptions<S, T> {\n *     // Friendly name\n *     name: string\n *     // given a serialized value and environment, how to turn it into the target type\n *     fromSnapshot(snapshot: S, env: any): T\n *     // return the serialization of the current value\n *     toSnapshot(value: T): S\n *     // if true, this is a converted value, if false, it's a snapshot\n *     isTargetType(value: T | S): value is T\n *     // a non empty string is assumed to be a validation error\n *     getValidationMessage?(snapshot: S): string\n * }\n * ```\n *\n * Example:\n * ```ts\n * const DecimalPrimitive = types.custom<string, Decimal>({\n *     name: \"Decimal\",\n *     fromSnapshot(value: string) {\n *         return new Decimal(value)\n *     },\n *     toSnapshot(value: Decimal) {\n *         return value.toString()\n *     },\n *     isTargetType(value: string | Decimal): boolean {\n *         return value instanceof Decimal\n *     },\n *     getValidationMessage(value: string): string {\n *         if (/^-?\\d+\\.\\d+$/.test(value)) return \"\" // OK\n *         return `'${value}' doesn't look like a valid decimal number`\n *     }\n * })\n *\n * const Wallet = types.model({\n *     balance: DecimalPrimitive\n * })\n * ```\n *\n * @param options\n * @returns\n */\nfunction custom(options) {\n    return new CustomType(options);\n}\n/**\n * @internal\n * @hidden\n */\nvar CustomType = /** @class */ (function (_super) {\n    __extends(CustomType, _super);\n    function CustomType(options) {\n        var _this = _super.call(this, options.name) || this;\n        Object.defineProperty(_this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Custom\n        });\n        return _this;\n    }\n    Object.defineProperty(CustomType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.name;\n        }\n    });\n    Object.defineProperty(CustomType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            if (this.options.isTargetType(value))\n                return typeCheckSuccess();\n            var typeError = this.options.getValidationMessage(value);\n            if (typeError) {\n                return typeCheckFailure(context, value, \"Invalid value for type '\" + this.name + \"': \" + typeError);\n            }\n            return typeCheckSuccess();\n        }\n    });\n    Object.defineProperty(CustomType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            return this.options.toSnapshot(node.storedValue);\n        }\n    });\n    Object.defineProperty(CustomType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            var valueToStore = this.options.isTargetType(initialValue)\n                ? initialValue\n                : this.options.fromSnapshot(initialValue, parent && parent.root.environment);\n            return createScalarNode(this, parent, subpath, environment, valueToStore);\n        }\n    });\n    Object.defineProperty(CustomType.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, value, parent, subpath) {\n            var isSnapshot = !this.options.isTargetType(value);\n            // in theory customs use scalar nodes which cannot be detached, but still...\n            if (!current.isDetaching) {\n                var unchanged = current.type === this &&\n                    (isSnapshot ? value === current.snapshot : value === current.storedValue);\n                if (unchanged) {\n                    current.setParent(parent, subpath);\n                    return current;\n                }\n            }\n            var valueToStore = isSnapshot\n                ? this.options.fromSnapshot(value, parent.root.environment)\n                : value;\n            var newNode = this.instantiate(parent, subpath, undefined, valueToStore);\n            current.die(); // noop if detaching\n            return newNode;\n        }\n    });\n    return CustomType;\n}(SimpleType));\n\n// we import the types to re-export them inside types.\nvar types = {\n    enumeration: enumeration,\n    model: model,\n    compose: compose,\n    custom: custom,\n    reference: reference,\n    safeReference: safeReference,\n    union: union,\n    optional: optional,\n    literal: literal,\n    maybe: maybe,\n    maybeNull: maybeNull,\n    refinement: refinement,\n    string: string,\n    boolean: boolean,\n    number: number,\n    integer: integer,\n    Date: DatePrimitive,\n    map: map,\n    array: array,\n    frozen: frozen,\n    identifier: identifier,\n    identifierNumber: identifierNumber,\n    late: late,\n    undefined: undefinedType,\n    null: nullType,\n    snapshotProcessor: snapshotProcessor\n};\n\nexport { addDisposer, addMiddleware, applyAction, applyPatch, applySnapshot, cast, castFlowReturn, castToReferenceSnapshot, castToSnapshot, clone, createActionTrackingMiddleware, createActionTrackingMiddleware2, decorate, destroy, detach, escapeJsonPath, flow, getChildType, getEnv, getIdentifier, getLivelinessChecking, getMembers, getNodeId, getParent, getParentOfType, getPath, getPathParts, getPropertyMembers, getRelativePath, getRoot, getRunningActionContext, getSnapshot, getType, hasParent, hasParentOfType, isActionContextChildOf, isActionContextThisOrChildOf, isAlive, isArrayType, isFrozenType, isIdentifierType, isLateType, isLiteralType, isMapType, isModelType, isOptionalType, isPrimitiveType, isProtected, isReferenceType, isRefinementType, isRoot, isStateTreeNode, isType, isUnionType, isValidReference, joinJsonPath, onAction, onPatch, onSnapshot, process$1 as process, protect, recordActions, recordPatches, resolveIdentifier, resolvePath, setLivelinessChecking, setLivelynessChecking, splitJsonPath, toGenerator, toGeneratorFunction, tryReference, tryResolve, typecheck, types, unescapeJsonPath, unprotect, walk };\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forceVisible = exports.forceCheck = exports.lazyload = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _event = require('./utils/event');\n\nvar _scrollParent = require('./utils/scrollParent');\n\nvar _scrollParent2 = _interopRequireDefault(_scrollParent);\n\nvar _debounce = require('./utils/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _throttle = require('./utils/throttle');\n\nvar _throttle2 = _interopRequireDefault(_throttle);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * react-lazyload\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar defaultBoundingClientRect = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  width: 0,\n  height: 0\n};\nvar LISTEN_FLAG = 'data-lazyload-listened';\nvar listeners = [];\nvar pending = [];\n\n// try to handle passive events\nvar passiveEventSupported = false;\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      passiveEventSupported = true;\n    }\n  });\n  window.addEventListener('test', null, opts);\n} catch (e) {}\n// if they are supported, setup the optional params\n// IMPORTANT: FALSE doubles as the default CAPTURE value!\nvar passiveEvent = passiveEventSupported ? { capture: false, passive: true } : false;\n\n/**\n * Check if `component` is visible in overflow container `parent`\n * @param  {node} component React component\n * @param  {node} parent    component's scroll parent\n * @return {bool}\n */\nvar checkOverflowVisible = function checkOverflowVisible(component, parent) {\n  var node = component.ref;\n\n  var parentTop = void 0;\n  var parentLeft = void 0;\n  var parentHeight = void 0;\n  var parentWidth = void 0;\n\n  try {\n    var _parent$getBoundingCl = parent.getBoundingClientRect();\n\n    parentTop = _parent$getBoundingCl.top;\n    parentLeft = _parent$getBoundingCl.left;\n    parentHeight = _parent$getBoundingCl.height;\n    parentWidth = _parent$getBoundingCl.width;\n  } catch (e) {\n    parentTop = defaultBoundingClientRect.top;\n    parentLeft = defaultBoundingClientRect.left;\n    parentHeight = defaultBoundingClientRect.height;\n    parentWidth = defaultBoundingClientRect.width;\n  }\n\n  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n  var windowInnerWidth = window.innerWidth || document.documentElement.clientWidth;\n\n  // calculate top and height of the intersection of the element's scrollParent and viewport\n  var intersectionTop = Math.max(parentTop, 0); // intersection's top relative to viewport\n  var intersectionLeft = Math.max(parentLeft, 0); // intersection's left relative to viewport\n  var intersectionHeight = Math.min(windowInnerHeight, parentTop + parentHeight) - intersectionTop; // height\n  var intersectionWidth = Math.min(windowInnerWidth, parentLeft + parentWidth) - intersectionLeft; // width\n\n  // check whether the element is visible in the intersection\n  var top = void 0;\n  var left = void 0;\n  var height = void 0;\n  var width = void 0;\n\n  try {\n    var _node$getBoundingClie = node.getBoundingClientRect();\n\n    top = _node$getBoundingClie.top;\n    left = _node$getBoundingClie.left;\n    height = _node$getBoundingClie.height;\n    width = _node$getBoundingClie.width;\n  } catch (e) {\n    top = defaultBoundingClientRect.top;\n    left = defaultBoundingClientRect.left;\n    height = defaultBoundingClientRect.height;\n    width = defaultBoundingClientRect.width;\n  }\n\n  var offsetTop = top - intersectionTop; // element's top relative to intersection\n  var offsetLeft = left - intersectionLeft; // element's left relative to intersection\n\n  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API\n\n  return offsetTop - offsets[0] <= intersectionHeight && offsetTop + height + offsets[1] >= 0 && offsetLeft - offsets[0] <= intersectionWidth && offsetLeft + width + offsets[1] >= 0;\n};\n\n/**\n * Check if `component` is visible in document\n * @param  {node} component React component\n * @return {bool}\n */\nvar checkNormalVisible = function checkNormalVisible(component) {\n  var node = component.ref;\n\n  // If this element is hidden by css rules somehow, it's definitely invisible\n  if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return false;\n\n  var top = void 0;\n  var elementHeight = void 0;\n\n  try {\n    var _node$getBoundingClie2 = node.getBoundingClientRect();\n\n    top = _node$getBoundingClie2.top;\n    elementHeight = _node$getBoundingClie2.height;\n  } catch (e) {\n    top = defaultBoundingClientRect.top;\n    elementHeight = defaultBoundingClientRect.height;\n  }\n\n  var windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n\n  var offsets = Array.isArray(component.props.offset) ? component.props.offset : [component.props.offset, component.props.offset]; // Be compatible with previous API\n\n  return top - offsets[0] <= windowInnerHeight && top + elementHeight + offsets[1] >= 0;\n};\n\n/**\n * Detect if element is visible in viewport, if so, set `visible` state to true.\n * If `once` prop is provided true, remove component as listener after checkVisible\n *\n * @param  {React} component   React component that respond to scroll and resize\n */\nvar checkVisible = function checkVisible(component) {\n  var node = component.ref;\n  if (!(node instanceof HTMLElement)) {\n    return;\n  }\n\n  var parent = (0, _scrollParent2.default)(node);\n  var isOverflow = component.props.overflow && parent !== node.ownerDocument && parent !== document && parent !== document.documentElement;\n  var visible = isOverflow ? checkOverflowVisible(component, parent) : checkNormalVisible(component);\n  if (visible) {\n    // Avoid extra render if previously is visible\n    if (!component.visible) {\n      if (component.props.once) {\n        pending.push(component);\n      }\n\n      component.visible = true;\n      component.forceUpdate();\n    }\n  } else if (!(component.props.once && component.visible)) {\n    component.visible = false;\n    if (component.props.unmountIfInvisible) {\n      component.forceUpdate();\n    }\n  }\n};\n\nvar purgePending = function purgePending() {\n  pending.forEach(function (component) {\n    var index = listeners.indexOf(component);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n  });\n\n  pending = [];\n};\n\nvar lazyLoadHandler = function lazyLoadHandler() {\n  for (var i = 0; i < listeners.length; ++i) {\n    var listener = listeners[i];\n    checkVisible(listener);\n  }\n  // Remove `once` component in listeners\n  purgePending();\n};\n\n/**\n * Forces the component to display regardless of whether the element is visible in the viewport.\n */\nvar forceVisible = function forceVisible() {\n  for (var i = 0; i < listeners.length; ++i) {\n    var listener = listeners[i];\n    listener.visible = true;\n    listener.forceUpdate();\n  }\n  // Remove `once` component in listeners\n  purgePending();\n};\n\n// Depending on component's props\nvar delayType = void 0;\nvar finalLazyLoadHandler = null;\n\nvar isString = function isString(string) {\n  return typeof string === 'string';\n};\n\nvar LazyLoad = function (_Component) {\n  _inherits(LazyLoad, _Component);\n\n  function LazyLoad(props) {\n    _classCallCheck(this, LazyLoad);\n\n    var _this = _possibleConstructorReturn(this, (LazyLoad.__proto__ || Object.getPrototypeOf(LazyLoad)).call(this, props));\n\n    _this.visible = false;\n    _this.setRef = _this.setRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(LazyLoad, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // It's unlikely to change delay type on the fly, this is mainly\n      // designed for tests\n      var scrollport = window;\n      var scrollContainer = this.props.scrollContainer;\n\n      if (scrollContainer) {\n        if (isString(scrollContainer)) {\n          scrollport = scrollport.document.querySelector(scrollContainer);\n        }\n      }\n      var needResetFinalLazyLoadHandler = this.props.debounce !== undefined && delayType === 'throttle' || delayType === 'debounce' && this.props.debounce === undefined;\n\n      if (needResetFinalLazyLoadHandler) {\n        (0, _event.off)(scrollport, 'scroll', finalLazyLoadHandler, passiveEvent);\n        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        finalLazyLoadHandler = null;\n      }\n\n      if (!finalLazyLoadHandler) {\n        if (this.props.debounce !== undefined) {\n          finalLazyLoadHandler = (0, _debounce2.default)(lazyLoadHandler, typeof this.props.debounce === 'number' ? this.props.debounce : 300);\n          delayType = 'debounce';\n        } else if (this.props.throttle !== undefined) {\n          finalLazyLoadHandler = (0, _throttle2.default)(lazyLoadHandler, typeof this.props.throttle === 'number' ? this.props.throttle : 300);\n          delayType = 'throttle';\n        } else {\n          finalLazyLoadHandler = lazyLoadHandler;\n        }\n      }\n\n      if (this.props.overflow) {\n        var parent = (0, _scrollParent2.default)(this.ref);\n        if (parent && typeof parent.getAttribute === 'function') {\n          var listenerCount = 1 + +parent.getAttribute(LISTEN_FLAG);\n          if (listenerCount === 1) {\n            parent.addEventListener('scroll', finalLazyLoadHandler, passiveEvent);\n          }\n          parent.setAttribute(LISTEN_FLAG, listenerCount);\n        }\n      } else if (listeners.length === 0 || needResetFinalLazyLoadHandler) {\n        var _props = this.props,\n            scroll = _props.scroll,\n            resize = _props.resize;\n\n\n        if (scroll) {\n          (0, _event.on)(scrollport, 'scroll', finalLazyLoadHandler, passiveEvent);\n        }\n\n        if (resize) {\n          (0, _event.on)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        }\n      }\n\n      listeners.push(this);\n      checkVisible(this);\n    }\n  }, {\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate() {\n      return this.visible;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.overflow) {\n        var parent = (0, _scrollParent2.default)(this.ref);\n        if (parent && typeof parent.getAttribute === 'function') {\n          var listenerCount = +parent.getAttribute(LISTEN_FLAG) - 1;\n          if (listenerCount === 0) {\n            parent.removeEventListener('scroll', finalLazyLoadHandler, passiveEvent);\n            parent.removeAttribute(LISTEN_FLAG);\n          } else {\n            parent.setAttribute(LISTEN_FLAG, listenerCount);\n          }\n        }\n      }\n\n      var index = listeners.indexOf(this);\n      if (index !== -1) {\n        listeners.splice(index, 1);\n      }\n\n      if (listeners.length === 0 && typeof window !== 'undefined') {\n        (0, _event.off)(window, 'resize', finalLazyLoadHandler, passiveEvent);\n        (0, _event.off)(window, 'scroll', finalLazyLoadHandler, passiveEvent);\n      }\n    }\n  }, {\n    key: 'setRef',\n    value: function setRef(element) {\n      if (element) {\n        this.ref = element;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          height = _props2.height,\n          children = _props2.children,\n          placeholder = _props2.placeholder,\n          className = _props2.className,\n          classNamePrefix = _props2.classNamePrefix,\n          style = _props2.style;\n\n\n      return _react2.default.createElement(\n        'div',\n        { className: classNamePrefix + '-wrapper ' + className, ref: this.setRef, style: style },\n        this.visible ? children : placeholder ? placeholder : _react2.default.createElement('div', {\n          style: { height: height },\n          className: classNamePrefix + '-placeholder'\n        })\n      );\n    }\n  }]);\n\n  return LazyLoad;\n}(_react.Component);\n\nLazyLoad.propTypes = {\n  className: _propTypes2.default.string,\n  classNamePrefix: _propTypes2.default.string,\n  once: _propTypes2.default.bool,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  offset: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number)]),\n  overflow: _propTypes2.default.bool,\n  resize: _propTypes2.default.bool,\n  scroll: _propTypes2.default.bool,\n  children: _propTypes2.default.node,\n  throttle: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),\n  debounce: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.bool]),\n  placeholder: _propTypes2.default.node,\n  scrollContainer: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),\n  unmountIfInvisible: _propTypes2.default.bool,\n  style: _propTypes2.default.object\n};\n\nLazyLoad.defaultProps = {\n  className: '',\n  classNamePrefix: 'lazyload',\n  once: false,\n  offset: 0,\n  overflow: false,\n  resize: false,\n  scroll: true,\n  unmountIfInvisible: false\n};\n\nvar getDisplayName = function getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nvar decorator = function decorator() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function lazyload(WrappedComponent) {\n    return function (_Component2) {\n      _inherits(LazyLoadDecorated, _Component2);\n\n      function LazyLoadDecorated() {\n        _classCallCheck(this, LazyLoadDecorated);\n\n        var _this2 = _possibleConstructorReturn(this, (LazyLoadDecorated.__proto__ || Object.getPrototypeOf(LazyLoadDecorated)).call(this));\n\n        _this2.displayName = 'LazyLoad' + getDisplayName(WrappedComponent);\n        return _this2;\n      }\n\n      _createClass(LazyLoadDecorated, [{\n        key: 'render',\n        value: function render() {\n          return _react2.default.createElement(\n            LazyLoad,\n            options,\n            _react2.default.createElement(WrappedComponent, this.props)\n          );\n        }\n      }]);\n\n      return LazyLoadDecorated;\n    }(_react.Component);\n  };\n};\n\nexports.lazyload = decorator;\nexports.default = LazyLoad;\nexports.forceCheck = lazyLoadHandler;\nexports.forceVisible = forceVisible;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedArgs(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorArgs` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedArgs(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, undefined, source, [\n    position,\n  ]);\n}\n","/**\n * The set of allowed directive location values.\n */\nexport let DirectiveLocation;\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport let TokenKind;\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","import { inspect } from './inspect.mjs';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 5 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    var _this$_options;\n\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (\n      ((_this$_options = this._options) === null || _this$_options === void 0\n        ? void 0\n        : _this$_options.allowLegacyFragmentVariables) === true\n    ) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    var _this$_options2;\n\n    if (\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0\n        ? void 0\n        : _this$_options2.noLocation) !== true\n    ) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","import { Cache } from \"./cache\";\nimport { Entry, AnyEntry } from \"./entry\";\nimport { parentEntrySlot } from \"./context\";\nimport { KeyTrie } from \"./key-trie\";\n\n// These helper functions are important for making optimism work with\n// asynchronous code. In order to register parent-child dependencies,\n// optimism needs to know about any currently active parent computations.\n// In ordinary synchronous code, the parent context is implicit in the\n// execution stack, but asynchronous code requires some extra guidance in\n// order to propagate context from one async task segment to the next.\nexport {\n  bindContext,\n  noContext,\n  setTimeout,\n  asyncFromGen,\n} from \"./context\";\n\n// Since the Cache uses a Map internally, any value or object reference can\n// be safely used as a key, though common types include object and string.\nexport type TCacheKey = any;\n\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\n// a unique object for any shallow-identical list of arguments. If you need\n// to implement a custom makeCacheKey function, you may find it helpful to\n// delegate the final work to defaultMakeCacheKey, which is why we export it\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\n// does not support WeakMap, or you have the ability to return a string key.\n// In those cases, just write your own custom makeCacheKey functions.\nconst keyTrie = new KeyTrie<TCacheKey>(typeof WeakMap === \"function\");\nexport function defaultMakeCacheKey(...args: any[]) {\n  return keyTrie.lookupArray(args);\n}\n\n// If you're paranoid about memory leaks, or you want to avoid using WeakMap\n// under the hood, but you still need the behavior of defaultMakeCacheKey,\n// import this constructor to create your own tries.\nexport { KeyTrie }\n\nexport type OptimisticWrapperFunction<\n  TArgs extends any[],\n  TResult,\n> = ((...args: TArgs) => TResult) & {\n  // The .dirty(...) method of an optimistic function takes exactly the\n  // same parameter types as the original function.\n  dirty: (...args: TArgs) => void;\n};\n\nexport type OptimisticWrapOptions<TArgs extends any[]> = {\n  // The maximum number of cache entries that should be retained before the\n  // cache begins evicting the oldest ones.\n  max?: number;\n  // If a wrapped function is \"disposable,\" then its creator does not\n  // care about its return value, and it should be removed from the cache\n  // immediately when it no longer has any parents that depend on it.\n  disposable?: boolean;\n  // The makeCacheKey function takes the same arguments that were passed to\n  // the wrapper function and returns a single value that can be used as a key\n  // in a Map to identify the cached result.\n  makeCacheKey?: (...args: TArgs) => TCacheKey;\n  // If provided, the subscribe function should either return an unsubscribe\n  // function or return nothing.\n  subscribe?: (...args: TArgs) => (() => any) | undefined;\n};\n\nconst caches = new Set<Cache<TCacheKey, AnyEntry>>();\n\nexport function wrap<\n  TArgs extends any[],\n  TResult,\n>(\n  originalFunction: (...args: TArgs) => TResult,\n  options: OptimisticWrapOptions<TArgs> = Object.create(null),\n) {\n  const cache = new Cache<TCacheKey, Entry<TArgs, TResult>>(\n    options.max || Math.pow(2, 16),\n    entry => entry.dispose(),\n  );\n\n  const disposable = !! options.disposable;\n  const makeCacheKey = options.makeCacheKey || defaultMakeCacheKey;\n\n  function optimistic(): TResult {\n    if (disposable && ! parentEntrySlot.hasValue()) {\n      // If there's no current parent computation, and this wrapped\n      // function is disposable (meaning we don't care about entry.value,\n      // just dependency tracking), then we can short-cut everything else\n      // in this function, because entry.recompute() is going to recycle\n      // the entry object without recomputing anything, anyway.\n      return void 0 as any;\n    }\n\n    const key = makeCacheKey.apply(null, arguments as any);\n    if (key === void 0) {\n      return originalFunction.apply(null, arguments as any);\n    }\n\n    const args = Array.prototype.slice.call(arguments) as TArgs;\n\n    let entry = cache.get(key);\n    if (entry) {\n      entry.args = args;\n    } else {\n      entry = new Entry<TArgs, TResult>(originalFunction, args);\n      cache.set(key, entry);\n      entry.subscribe = options.subscribe;\n      if (disposable) {\n        entry.reportOrphan = () => cache.delete(key);\n      }\n    }\n\n    const value = entry.recompute();\n\n    // Move this entry to the front of the least-recently used queue,\n    // since we just finished computing its value.\n    cache.set(key, entry);\n\n    caches.add(cache);\n\n    // Clean up any excess entries in the cache, but only if there is no\n    // active parent entry, meaning we're not in the middle of a larger\n    // computation that might be flummoxed by the cleaning.\n    if (! parentEntrySlot.hasValue()) {\n      caches.forEach(cache => cache.clean());\n      caches.clear();\n    }\n\n    // If options.disposable is truthy, the caller of wrap is telling us\n    // they don't care about the result of entry.recompute(), so we should\n    // avoid returning the value, so it won't be accidentally used.\n    return disposable ? void 0 as any : value;\n  }\n\n  optimistic.dirty = function () {\n    const key = makeCacheKey.apply(null, arguments as any);\n    const child = key !== void 0 && cache.get(key);\n    if (child) {\n      child.setDirty();\n    }\n  };\n\n  return optimistic as OptimisticWrapperFunction<TArgs, TResult>;\n}\n","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","/* tslint:disable */\n\nimport { ApolloLink, Observable, RequestHandler, fromError } from 'apollo-link';\nimport {\n  serializeFetchParameter,\n  selectURI,\n  parseAndCheckHttpResponse,\n  checkFetcher,\n  selectHttpOptionsAndBody,\n  createSignalIfSupported,\n  fallbackHttpConfig,\n  Body,\n  HttpOptions,\n  UriFunction as _UriFunction,\n} from 'apollo-link-http-common';\nimport { DefinitionNode } from 'graphql';\n\nexport namespace HttpLink {\n  //TODO Would much rather be able to export directly\n  export interface UriFunction extends _UriFunction {}\n  export interface Options extends HttpOptions {\n    /**\n     * If set to true, use the HTTP GET method for query operations. Mutations\n     * will still use the method specified in fetchOptions.method (which defaults\n     * to POST).\n     */\n    useGETForQueries?: boolean;\n  }\n}\n\n// For backwards compatibility.\nexport import FetchOptions = HttpLink.Options;\nexport import UriFunction = HttpLink.UriFunction;\n\nexport const createHttpLink = (linkOptions: HttpLink.Options = {}) => {\n  let {\n    uri = '/graphql',\n    // use default global fetch if nothing passed in\n    fetch: fetcher,\n    includeExtensions,\n    useGETForQueries,\n    ...requestOptions\n  } = linkOptions;\n\n  // dev warnings to ensure fetch is present\n  checkFetcher(fetcher);\n\n  //fetcher is set here rather than the destructuring to ensure fetch is\n  //declared before referencing it. Reference in the destructuring would cause\n  //a ReferenceError\n  if (!fetcher) {\n    fetcher = fetch;\n  }\n\n  const linkConfig = {\n    http: { includeExtensions },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers,\n  };\n\n  return new ApolloLink(operation => {\n    let chosenURI = selectURI(operation, uri);\n\n    const context = operation.getContext();\n\n    // `apollographql-client-*` headers are automatically set if a\n    // `clientAwareness` object is found in the context. These headers are\n    // set first, followed by the rest of the headers pulled from\n    // `context.headers`. If desired, `apollographql-client-*` headers set by\n    // the `clientAwareness` object can be overridden by\n    // `apollographql-client-*` headers set in `context.headers`.\n    const clientAwarenessHeaders = {};\n    if (context.clientAwareness) {\n      const { name, version } = context.clientAwareness;\n      if (name) {\n        clientAwarenessHeaders['apollographql-client-name'] = name;\n      }\n      if (version) {\n        clientAwarenessHeaders['apollographql-client-version'] = version;\n      }\n    }\n\n    const contextHeaders = { ...clientAwarenessHeaders, ...context.headers };\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: contextHeaders,\n    };\n\n    //uses fallback, link, and then context to build options\n    const { options, body } = selectHttpOptionsAndBody(\n      operation,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig,\n    );\n\n    let controller;\n    if (!(options as any).signal) {\n      const { controller: _controller, signal } = createSignalIfSupported();\n      controller = _controller;\n      if (controller) (options as any).signal = signal;\n    }\n\n    // If requested, set method to GET if there are no mutations.\n    const definitionIsMutation = (d: DefinitionNode) => {\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n    };\n    if (\n      useGETForQueries &&\n      !operation.query.definitions.some(definitionIsMutation)\n    ) {\n      options.method = 'GET';\n    }\n\n    if (options.method === 'GET') {\n      const { newURI, parseError } = rewriteURIForGET(chosenURI, body);\n      if (parseError) {\n        return fromError(parseError);\n      }\n      chosenURI = newURI;\n    } else {\n      try {\n        (options as any).body = serializeFetchParameter(body, 'Payload');\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable(observer => {\n      fetcher(chosenURI, options)\n        .then(response => {\n          operation.setContext({ response });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then(result => {\n          // we have data and can send it to back up the link chain\n          observer.next(result);\n          observer.complete();\n          return result;\n        })\n        .catch(err => {\n          // fetch was cancelled so it's already been cleaned up in the unsubscribe\n          if (err.name === 'AbortError') return;\n          // if it is a network error, BUT there is graphql result info\n          // fire the next observer before calling error\n          // this gives apollo-client (and react-apollo) the `graphqlErrors` and `networErrors`\n          // to pass to UI\n          // this should only happen if we *also* have data as part of the response key per\n          // the spec\n          if (err.result && err.result.errors && err.result.data) {\n            // if we don't call next, the UI can only show networkError because AC didn't\n            // get any graphqlErrors\n            // this is graphql execution result info (i.e errors and possibly data)\n            // this is because there is no formal spec how errors should translate to\n            // http status codes. So an auth error (401) could have both data\n            // from a public field, errors from a private field, and a status of 401\n            // {\n            //  user { // this will have errors\n            //    firstName\n            //  }\n            //  products { // this is public so will have data\n            //    cost\n            //  }\n            // }\n            //\n            // the result of above *could* look like this:\n            // {\n            //   data: { products: [{ cost: \"$10\" }] },\n            //   errors: [{\n            //      message: 'your session has timed out',\n            //      path: []\n            //   }]\n            // }\n            // status code of above would be a 401\n            // in the UI you want to show data where you can, errors as data where you can\n            // and use correct http status codes\n            observer.next(err.result);\n          }\n          observer.error(err);\n        });\n\n      return () => {\n        // XXX support canceling this request\n        // https://developers.google.com/web/updates/2017/09/abortable-fetch\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nfunction rewriteURIForGET(chosenURI: string, body: Body) {\n  // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n  // the extra level of JSON serialization!\n  const queryParams = [];\n  const addQueryParam = (key: string, value: string) => {\n    queryParams.push(`${key}=${encodeURIComponent(value)}`);\n  };\n\n  if ('query' in body) {\n    addQueryParam('query', body.query);\n  }\n  if (body.operationName) {\n    addQueryParam('operationName', body.operationName);\n  }\n  if (body.variables) {\n    let serializedVariables;\n    try {\n      serializedVariables = serializeFetchParameter(\n        body.variables,\n        'Variables map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('variables', serializedVariables);\n  }\n  if (body.extensions) {\n    let serializedExtensions;\n    try {\n      serializedExtensions = serializeFetchParameter(\n        body.extensions,\n        'Extensions map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('extensions', serializedExtensions);\n  }\n\n  // Reconstruct the URI with added query params.\n  // XXX This assumes that the URI is well-formed and that it doesn't\n  //     already contain any of these query params. We could instead use the\n  //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n  //     don't support URLSearchParams. Note that some browsers (and\n  //     versions of whatwg-url) support URL but not URLSearchParams!\n  let fragment = '',\n    preFragment = chosenURI;\n  const fragmentStart = chosenURI.indexOf('#');\n  if (fragmentStart !== -1) {\n    fragment = chosenURI.substr(fragmentStart);\n    preFragment = chosenURI.substr(0, fragmentStart);\n  }\n  const queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n  const newURI =\n    preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n  return { newURI };\n}\n\nexport class HttpLink extends ApolloLink {\n  public requester: RequestHandler;\n  constructor(opts?: HttpLink.Options) {\n    super(createHttpLink(opts).request);\n  }\n}\n","import {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  FieldNode,\n  FragmentDefinitionNode,\n} from 'graphql';\n\nexport function queryFromPojo(obj: any): DocumentNode {\n  const op: OperationDefinitionNode = {\n    kind: 'OperationDefinition',\n    operation: 'query',\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [op],\n  };\n\n  return out;\n}\n\nexport function fragmentFromPojo(obj: any, typename?: string): DocumentNode {\n  const frag: FragmentDefinitionNode = {\n    kind: 'FragmentDefinition',\n    typeCondition: {\n      kind: 'NamedType',\n      name: {\n        kind: 'Name',\n        value: typename || '__FakeType',\n      },\n    },\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [frag],\n  };\n\n  return out;\n}\n\nfunction selectionSetFromObj(obj: any): SelectionSetNode {\n  if (\n    typeof obj === 'number' ||\n    typeof obj === 'boolean' ||\n    typeof obj === 'string' ||\n    typeof obj === 'undefined' ||\n    obj === null\n  ) {\n    // No selection set here\n    return null;\n  }\n\n  if (Array.isArray(obj)) {\n    // GraphQL queries don't include arrays\n    return selectionSetFromObj(obj[0]);\n  }\n\n  // Now we know it's an object\n  const selections: FieldNode[] = [];\n\n  Object.keys(obj).forEach(key => {\n    const nestedSelSet: SelectionSetNode = selectionSetFromObj(obj[key]);\n\n    const field: FieldNode = {\n      kind: 'Field',\n      name: {\n        kind: 'Name',\n        value: key,\n      },\n      selectionSet: nestedSelSet || undefined,\n    };\n\n    selections.push(field);\n  });\n\n  const selectionSet: SelectionSetNode = {\n    kind: 'SelectionSet',\n    selections,\n  };\n\n  return selectionSet;\n}\n\nexport const justTypenameQuery: DocumentNode = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: null,\n      variableDefinitions: null,\n      directives: [],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            alias: null,\n            name: {\n              kind: 'Name',\n              value: '__typename',\n            },\n            arguments: [],\n            directives: [],\n            selectionSet: null,\n          },\n        ],\n      },\n    },\n  ],\n};\n","import { DataProxy } from './DataProxy';\n\nexport namespace Cache {\n  export type WatchCallback = (newData: any) => void;\n  export interface EvictionResult {\n    success: Boolean;\n  }\n\n  export interface ReadOptions<TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    rootId?: string;\n    previousResult?: any;\n    optimistic: boolean;\n  }\n\n  export interface WriteOptions<TResult = any, TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    dataId: string;\n    result: TResult;\n  }\n\n  export interface DiffOptions extends ReadOptions {\n    returnPartialData?: boolean;\n  }\n\n  export interface WatchOptions extends ReadOptions {\n    callback: WatchCallback;\n  }\n\n  export interface EvictOptions<TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    rootId?: string;\n  }\n\n  export import DiffResult = DataProxy.DiffResult;\n  export import WriteQueryOptions = DataProxy.WriteQueryOptions;\n  export import WriteFragmentOptions = DataProxy.WriteFragmentOptions;\n  export import WriteDataOptions = DataProxy.WriteDataOptions;\n  export import Fragment = DataProxy.Fragment;\n}\n","interface Node<K, V> {\n  key: K;\n  value: V;\n  newer: Node<K, V> | null;\n  older: Node<K, V> | null;\n}\n\nfunction defaultDispose() {}\n\nexport class Cache<K = any, V = any> {\n  private map = new Map<K, Node<K, V>>();\n  private newest: Node<K, V> | null = null;\n  private oldest: Node<K, V> | null = null;\n\n  constructor(\n    private max = Infinity,\n    public dispose: (value: V, key: K) => void = defaultDispose,\n  ) {}\n\n  public has(key: K) {\n    return this.map.has(key);\n  }\n\n  public get(key: K) {\n    const entry = this.getEntry(key);\n    return entry && entry.value;\n  }\n\n  private getEntry(key: K): Node<K, V> | void {\n    const entry = this.map.get(key);\n\n    if (entry && entry !== this.newest) {\n      const { older, newer } = entry;\n\n      if (newer) {\n        newer.older = older;\n      }\n\n      if (older) {\n        older.newer = newer;\n      }\n\n      entry.older = this.newest;\n      entry.older!.newer = entry;\n\n      entry.newer = null;\n      this.newest = entry;\n\n      if (entry === this.oldest) {\n        this.oldest = newer;\n      }\n    }\n\n    return entry;\n  }\n\n  public set(key: K, value: V) {\n    let entry = this.getEntry(key);\n    if (entry) {\n      return entry.value = value;\n    }\n\n    entry = {\n      key: key,\n      value: value,\n      newer: null,\n      older: this.newest\n    };\n\n    if (this.newest) {\n      this.newest.newer = entry;\n    }\n\n    this.newest = entry;\n    this.oldest = this.oldest || entry;\n\n    this.map.set(key, entry);\n\n    return entry.value;\n  }\n\n  public clean() {\n    while (this.oldest && this.map.size > this.max) {\n      this.delete(this.oldest.key);\n    }\n  }\n\n  public delete(key: K) {\n    const entry = this.map.get(key);\n    if (entry) {\n      if (entry === this.newest) {\n        this.newest = entry.older;\n      }\n\n      if (entry === this.oldest) {\n        this.oldest = entry.newer;\n      }\n\n      if (entry.newer) {\n        entry.newer.older = entry.older;\n      }\n\n      if (entry.older) {\n        entry.older.newer = entry.newer;\n      }\n\n      this.map.delete(key);\n      this.dispose(entry.value, key);\n\n      return true;\n    }\n\n    return false;\n  }\n}\n","type Context = {\n  parent: Context | null;\n  slots: { [slotId: string]: any };\n}\n\n// This currentContext variable will only be used if the makeSlotClass\n// function is called, which happens only if this is the first copy of the\n// @wry/context package to be imported.\nlet currentContext: Context | null = null;\n\n// This unique internal object is used to denote the absence of a value\n// for a given Slot, and is never exposed to outside code.\nconst MISSING_VALUE: any = {};\n\nlet idCounter = 1;\n\n// Although we can't do anything about the cost of duplicated code from\n// accidentally bundling multiple copies of the @wry/context package, we can\n// avoid creating the Slot class more than once using makeSlotClass.\nconst makeSlotClass = () => class Slot<TValue> {\n  // If you have a Slot object, you can find out its slot.id, but you cannot\n  // guess the slot.id of a Slot you don't have access to, thanks to the\n  // randomized suffix.\n  public readonly id = [\n    \"slot\",\n    idCounter++,\n    Date.now(),\n    Math.random().toString(36).slice(2),\n  ].join(\":\");\n\n  public hasValue() {\n    for (let context = currentContext; context; context = context.parent) {\n      // We use the Slot object iself as a key to its value, which means the\n      // value cannot be obtained without a reference to the Slot object.\n      if (this.id in context.slots) {\n        const value = context.slots[this.id];\n        if (value === MISSING_VALUE) break;\n        if (context !== currentContext) {\n          // Cache the value in currentContext.slots so the next lookup will\n          // be faster. This caching is safe because the tree of contexts and\n          // the values of the slots are logically immutable.\n          currentContext!.slots[this.id] = value;\n        }\n        return true;\n      }\n    }\n    if (currentContext) {\n      // If a value was not found for this Slot, it's never going to be found\n      // no matter how many times we look it up, so we might as well cache\n      // the absence of the value, too.\n      currentContext.slots[this.id] = MISSING_VALUE;\n    }\n    return false;\n  }\n\n  public getValue(): TValue | undefined {\n    if (this.hasValue()) {\n      return currentContext!.slots[this.id] as TValue;\n    }\n  }\n\n  public withValue<TResult, TArgs extends any[], TThis = any>(\n    value: TValue,\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ): TResult {\n    const slots = {\n      __proto__: null,\n      [this.id]: value,\n    };\n    const parent = currentContext;\n    currentContext = { parent, slots };\n    try {\n      // Function.prototype.apply allows the arguments array argument to be\n      // omitted or undefined, so args! is fine here.\n      return callback.apply(thisArg!, args!);\n    } finally {\n      currentContext = parent;\n    }\n  }\n\n  // Capture the current context and wrap a callback function so that it\n  // reestablishes the captured context when called.\n  static bind<TArgs extends any[], TResult>(\n    callback: (...args: TArgs) => TResult,\n  ) {\n    const context = currentContext;\n    return function (this: any) {\n      const saved = currentContext;\n      try {\n        currentContext = context;\n        return callback.apply(this, arguments as any);\n      } finally {\n        currentContext = saved;\n      }\n    } as typeof callback;\n  }\n\n  // Immediately run a callback function without any captured context.\n  static noContext<TResult, TArgs extends any[], TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ) {\n    if (currentContext) {\n      const saved = currentContext;\n      try {\n        currentContext = null;\n        // Function.prototype.apply allows the arguments array argument to be\n        // omitted or undefined, so args! is fine here.\n        return callback.apply(thisArg!, args!);\n      } finally {\n        currentContext = saved;\n      }\n    } else {\n      return callback.apply(thisArg!, args!);\n    }\n  }\n};\n\n// We store a single global implementation of the Slot class as a permanent\n// non-enumerable symbol property of the Array constructor. This obfuscation\n// does nothing to prevent access to the Slot class, but at least it ensures\n// the implementation (i.e. currentContext) cannot be tampered with, and all\n// copies of the @wry/context package (hopefully just one) will share the\n// same Slot implementation. Since the first copy of the @wry/context package\n// to be imported wins, this technique imposes a very high cost for any\n// future breaking changes to the Slot class.\nconst globalKey = \"@wry/context:Slot\";\nconst host = Array as any;\n\nexport const Slot: ReturnType<typeof makeSlotClass> = host[globalKey] || function () {\n  const Slot = makeSlotClass();\n  try {\n    Object.defineProperty(host, globalKey, {\n      value: host[globalKey] = Slot,\n      enumerable: false,\n      writable: false,\n      configurable: false,\n    });\n  } finally {\n    return Slot;\n  }\n}();\n","import { AnyEntry } from \"./entry\";\nimport { Slot } from \"@wry/context\";\n\nexport const parentEntrySlot = new Slot<AnyEntry>();\n\nexport {\n  bind as bindContext,\n  noContext,\n  setTimeout,\n  asyncFromGen,\n} from \"@wry/context\";\n","import { parentEntrySlot } from \"./context\";\nimport { OptimisticWrapOptions } from \"./index\";\n\nconst reusableEmptyArray: AnyEntry[] = [];\nconst emptySetPool: Set<AnyEntry>[] = [];\nconst POOL_TARGET_SIZE = 100;\n\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition: any, optionalMessage?: string) {\n  if (! condition) {\n    throw new Error(optionalMessage || \"assertion failure\");\n  }\n}\n\n// Since exceptions are cached just like normal values, we need an efficient\n// way of representing unknown, ordinary, and exceptional values.\ntype Value<T> =\n  | []           // unknown\n  | [T]          // known value\n  | [void, any]; // known exception\n\nfunction valueIs(a: Value<any>, b: Value<any>) {\n  const len = a.length;\n  return (\n    // Unknown values are not equal to each other.\n    len > 0 &&\n    // Both values must be ordinary (or both exceptional) to be equal.\n    len === b.length &&\n    // The underlying value or exception must be the same.\n    a[len - 1] === b[len - 1]\n  );\n}\n\nfunction valueGet<T>(value: Value<T>): T {\n  switch (value.length) {\n    case 0: throw new Error(\"unknown value\");\n    case 1: return value[0];\n    case 2: throw value[1];\n  }\n}\n\nfunction valueCopy<T>(value: Value<T>): Value<T> {\n  return value.slice(0) as Value<T>;\n}\n\nexport type AnyEntry = Entry<any, any>;\n\nexport class Entry<TArgs extends any[], TValue> {\n  public static count = 0;\n\n  public subscribe: OptimisticWrapOptions<TArgs>[\"subscribe\"];\n  public unsubscribe?: () => any;\n  public reportOrphan?: (this: Entry<TArgs, TValue>) => any;\n\n  public readonly parents = new Set<AnyEntry>();\n  public readonly childValues = new Map<AnyEntry, Value<any>>();\n\n  // When this Entry has children that are dirty, this property becomes\n  // a Set containing other Entry objects, borrowed from emptySetPool.\n  // When the set becomes empty, it gets recycled back to emptySetPool.\n  public dirtyChildren: Set<AnyEntry> | null = null;\n\n  public dirty = true;\n  public recomputing = false;\n  public readonly value: Value<TValue> = [];\n\n  constructor(\n    public readonly fn: (...args: TArgs) => TValue,\n    public args: TArgs,\n  ) {\n    ++Entry.count;\n  }\n\n  // This is the most important method of the Entry API, because it\n  // determines whether the cached this.value can be returned immediately,\n  // or must be recomputed. The overall performance of the caching system\n  // depends on the truth of the following observations: (1) this.dirty is\n  // usually false, (2) this.dirtyChildren is usually null/empty, and thus\n  // (3) valueGet(this.value) is usually returned without recomputation.\n  public recompute(): TValue {\n    assert(! this.recomputing, \"already recomputing\");\n\n    if (! rememberParent(this) && maybeReportOrphan(this)) {\n      // The recipient of the entry.reportOrphan callback decided to dispose\n      // of this orphan entry by calling entry.dispose(), so we don't need to\n      // (and should not) proceed with the recomputation.\n      return void 0 as any;\n    }\n\n    return mightBeDirty(this)\n      ? reallyRecompute(this)\n      : valueGet(this.value);\n  }\n\n  public setDirty() {\n    if (this.dirty) return;\n    this.dirty = true;\n    this.value.length = 0;\n    reportDirty(this);\n    // We can go ahead and unsubscribe here, since any further dirty\n    // notifications we receive will be redundant, and unsubscribing may\n    // free up some resources, e.g. file watchers.\n    maybeUnsubscribe(this);\n  }\n\n  public dispose() {\n    forgetChildren(this).forEach(maybeReportOrphan);\n    maybeUnsubscribe(this);\n\n    // Because this entry has been kicked out of the cache (in index.js),\n    // we've lost the ability to find out if/when this entry becomes dirty,\n    // whether that happens through a subscription, because of a direct call\n    // to entry.setDirty(), or because one of its children becomes dirty.\n    // Because of this loss of future information, we have to assume the\n    // worst (that this entry might have become dirty very soon), so we must\n    // immediately mark this entry's parents as dirty. Normally we could\n    // just call entry.setDirty() rather than calling parent.setDirty() for\n    // each parent, but that would leave this entry in parent.childValues\n    // and parent.dirtyChildren, which would prevent the child from being\n    // truly forgotten.\n    this.parents.forEach(parent => {\n      parent.setDirty();\n      forgetChild(parent, this);\n    });\n  }\n}\n\nfunction rememberParent(child: AnyEntry) {\n  const parent = parentEntrySlot.getValue();\n  if (parent) {\n    child.parents.add(parent);\n\n    if (! parent.childValues.has(child)) {\n      parent.childValues.set(child, []);\n    }\n\n    if (mightBeDirty(child)) {\n      reportDirtyChild(parent, child);\n    } else {\n      reportCleanChild(parent, child);\n    }\n\n    return parent;\n  }\n}\n\nfunction reallyRecompute(entry: AnyEntry) {\n  // Since this recomputation is likely to re-remember some of this\n  // entry's children, we forget our children here but do not call\n  // maybeReportOrphan until after the recomputation finishes.\n  const originalChildren = forgetChildren(entry);\n\n  // Set entry as the parent entry while calling recomputeNewValue(entry).\n  parentEntrySlot.withValue(entry, recomputeNewValue, [entry]);\n\n  if (maybeSubscribe(entry)) {\n    // If we successfully recomputed entry.value and did not fail to\n    // (re)subscribe, then this Entry is no longer explicitly dirty.\n    setClean(entry);\n  }\n\n  // Now that we've had a chance to re-remember any children that were\n  // involved in the recomputation, we can safely report any orphan\n  // children that remain.\n  originalChildren.forEach(maybeReportOrphan);\n\n  return valueGet(entry.value);\n}\n\nfunction recomputeNewValue(entry: AnyEntry) {\n  entry.recomputing = true;\n  // Set entry.value as unknown.\n  entry.value.length = 0;\n  try {\n    // If entry.fn succeeds, entry.value will become a normal Value.\n    entry.value[0] = entry.fn.apply(null, entry.args);\n  } catch (e) {\n    // If entry.fn throws, entry.value will become exceptional.\n    entry.value[1] = e;\n  }\n  // Either way, this line is always reached.\n  entry.recomputing = false;\n}\n\nfunction mightBeDirty(entry: AnyEntry) {\n  return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\n}\n\nfunction setClean(entry: AnyEntry) {\n  entry.dirty = false;\n\n  if (mightBeDirty(entry)) {\n    // This Entry may still have dirty children, in which case we can't\n    // let our parents know we're clean just yet.\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction reportDirty(child: AnyEntry) {\n  child.parents.forEach(parent => reportDirtyChild(parent, child));\n}\n\nfunction reportClean(child: AnyEntry) {\n  child.parents.forEach(parent => reportCleanChild(parent, child));\n}\n\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberParent(child) before calling\n  // reportDirtyChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(mightBeDirty(child));\n\n  if (! parent.dirtyChildren) {\n    parent.dirtyChildren = emptySetPool.pop() || new Set;\n\n  } else if (parent.dirtyChildren.has(child)) {\n    // If we already know this child is dirty, then we must have already\n    // informed our own parents that we are dirty, so we can terminate\n    // the recursion early.\n    return;\n  }\n\n  parent.dirtyChildren.add(child);\n  reportDirty(parent);\n}\n\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberChild(child) before calling\n  // reportCleanChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(! mightBeDirty(child));\n\n  const childValue = parent.childValues.get(child)!;\n  if (childValue.length === 0) {\n    parent.childValues.set(child, valueCopy(child.value));\n  } else if (! valueIs(childValue, child.value)) {\n    parent.setDirty();\n  }\n\n  removeDirtyChild(parent, child);\n\n  if (mightBeDirty(parent)) {\n    return;\n  }\n\n  reportClean(parent);\n}\n\nfunction removeDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  const dc = parent.dirtyChildren;\n  if (dc) {\n    dc.delete(child);\n    if (dc.size === 0) {\n      if (emptySetPool.length < POOL_TARGET_SIZE) {\n        emptySetPool.push(dc);\n      }\n      parent.dirtyChildren = null;\n    }\n  }\n}\n\n// If the given entry has a reportOrphan method, and no remaining parents,\n// call entry.reportOrphan and return true iff it returns true. The\n// reportOrphan function should return true to indicate entry.dispose()\n// has been called, and the entry has been removed from any other caches\n// (see index.js for the only current example).\nfunction maybeReportOrphan(entry: AnyEntry) {\n  return entry.parents.size === 0 &&\n    typeof entry.reportOrphan === \"function\" &&\n    entry.reportOrphan() === true;\n}\n\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(parent: AnyEntry) {\n  let children = reusableEmptyArray;\n\n  if (parent.childValues.size > 0) {\n    children = [];\n    parent.childValues.forEach((_value, child) => {\n      forgetChild(parent, child);\n      children.push(child);\n    });\n  }\n\n  // After we forget all our children, this.dirtyChildren must be empty\n  // and therefore must have been reset to null.\n  assert(parent.dirtyChildren === null);\n\n  return children;\n}\n\nfunction forgetChild(parent: AnyEntry, child: AnyEntry) {\n  child.parents.delete(parent);\n  parent.childValues.delete(child);\n  removeDirtyChild(parent, child);\n}\n\nfunction maybeSubscribe(entry: AnyEntry) {\n  if (typeof entry.subscribe === \"function\") {\n    try {\n      maybeUnsubscribe(entry); // Prevent double subscriptions.\n      entry.unsubscribe = entry.subscribe.apply(null, entry.args);\n    } catch (e) {\n      // If this Entry has a subscribe function and it threw an exception\n      // (or an unsubscribe function it previously returned now throws),\n      // return false to indicate that we were not able to subscribe (or\n      // unsubscribe), and this Entry should remain dirty.\n      entry.setDirty();\n      return false;\n    }\n  }\n\n  // Returning true indicates either that there was no entry.subscribe\n  // function or that it succeeded.\n  return true;\n}\n\nfunction maybeUnsubscribe(entry: AnyEntry) {\n  const { unsubscribe } = entry;\n  if (typeof unsubscribe === \"function\") {\n    entry.unsubscribe = void 0;\n    unsubscribe();\n  }\n}\n","// A trie data structure that holds object keys weakly, yet can also hold\n// non-object keys, unlike the native `WeakMap`.\nexport class KeyTrie<K> {\n  // Since a `WeakMap` cannot hold primitive values as keys, we need a\n  // backup `Map` instance to hold primitive keys. Both `this._weakMap`\n  // and `this._strongMap` are lazily initialized.\n  private weak?: WeakMap<any, KeyTrie<K>>;\n  private strong?: Map<any, KeyTrie<K>>;\n  private data?: K;\n\n  constructor(private readonly weakness: boolean) {}\n\n  public lookup<T extends any[]>(...array: T): K {\n    return this.lookupArray(array);\n  }\n\n  public lookupArray<T extends any[]>(array: T): K {\n    let node: KeyTrie<K> = this;\n    array.forEach(key => node = node.getChildTrie(key));\n    return node.data || (node.data = Object.create(null));\n  }\n\n  private getChildTrie(key: any) {\n    const map = this.weakness && isObjRef(key)\n      ? this.weak || (this.weak = new WeakMap<any, KeyTrie<K>>())\n      : this.strong || (this.strong = new Map<any, KeyTrie<K>>());\n    let child = map.get(key);\n    if (!child) map.set(key, child = new KeyTrie<K>(this.weakness));\n    return child;\n  }\n}\n\nfunction isObjRef(value: any) {\n  switch (typeof value) {\n  case \"object\":\n    if (value === null) break;\n    // Fall through to return true...\n  case \"function\":\n    return true;\n  }\n  return false;\n}\n","import { isTest, IdValue } from 'apollo-utilities';\nimport { invariant } from 'ts-invariant';\n\nimport {\n  ReadStoreContext,\n  FragmentMatcherInterface,\n  PossibleTypesMap,\n  IntrospectionResultData,\n} from './types';\n\nlet haveWarned = false;\n\nfunction shouldWarn() {\n  const answer = !haveWarned;\n  /* istanbul ignore if */\n  if (!isTest()) {\n    haveWarned = true;\n  }\n  return answer;\n}\n\n/**\n * This fragment matcher is very basic and unable to match union or interface type conditions\n */\nexport class HeuristicFragmentMatcher implements FragmentMatcherInterface {\n  constructor() {\n    // do nothing\n  }\n\n  public ensureReady() {\n    return Promise.resolve();\n  }\n\n  public canBypassInit() {\n    return true; // we don't need to initialize this fragment matcher.\n  }\n\n  public match(\n    idValue: IdValue,\n    typeCondition: string,\n    context: ReadStoreContext,\n  ): boolean | 'heuristic' {\n    const obj = context.store.get(idValue.id);\n    const isRootQuery = idValue.id === 'ROOT_QUERY';\n\n    if (!obj) {\n      // https://github.com/apollographql/apollo-client/pull/3507\n      return isRootQuery;\n    }\n\n    const { __typename = isRootQuery && 'Query' } = obj;\n\n    if (!__typename) {\n      if (shouldWarn()) {\n        invariant.warn(`You're using fragments in your queries, but either don't have the addTypename:\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\n   can accurately match fragments.`);\n        invariant.warn(\n          'Could not find __typename on Fragment ',\n          typeCondition,\n          obj,\n        );\n        invariant.warn(\n          `DEPRECATION WARNING: using fragments without __typename is unsupported behavior ` +\n            `and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.`,\n        );\n      }\n\n      return 'heuristic';\n    }\n\n    if (__typename === typeCondition) {\n      return true;\n    }\n\n    // At this point we don't know if this fragment should match or not. It's\n    // either:\n    //\n    // 1. (GOOD) A fragment on a matching interface or union.\n    // 2. (BAD) A fragment on a non-matching concrete type or interface or union.\n    //\n    // If it's 2, we don't want it to match. If it's 1, we want it to match. We\n    // can't tell the difference, so we warn the user, but still try to match\n    // it (for backwards compatibility reasons). This unfortunately means that\n    // using the `HeuristicFragmentMatcher` with unions and interfaces is\n    // very unreliable. This will be addressed in a future major version of\n    // Apollo Client, but for now the recommendation is to use the\n    // `IntrospectionFragmentMatcher` when working with unions/interfaces.\n\n    if (shouldWarn()) {\n      invariant.error(\n        'You are using the simple (heuristic) fragment matcher, but your ' +\n          'queries contain union or interface types. Apollo Client will not be ' +\n          'able to accurately map fragments. To make this error go away, use ' +\n          'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n          'https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher',\n      );\n    }\n\n    return 'heuristic';\n  }\n}\n\nexport class IntrospectionFragmentMatcher implements FragmentMatcherInterface {\n  private isReady: boolean;\n  private possibleTypesMap: PossibleTypesMap;\n\n  constructor(options?: {\n    introspectionQueryResultData?: IntrospectionResultData;\n  }) {\n    if (options && options.introspectionQueryResultData) {\n      this.possibleTypesMap = this.parseIntrospectionResult(\n        options.introspectionQueryResultData,\n      );\n      this.isReady = true;\n    } else {\n      this.isReady = false;\n    }\n\n    this.match = this.match.bind(this);\n  }\n\n  public match(\n    idValue: IdValue,\n    typeCondition: string,\n    context: ReadStoreContext,\n  ) {\n    invariant(\n      this.isReady,\n      'FragmentMatcher.match() was called before FragmentMatcher.init()',\n    );\n\n    const obj = context.store.get(idValue.id);\n    const isRootQuery = idValue.id === 'ROOT_QUERY';\n\n    if (!obj) {\n      // https://github.com/apollographql/apollo-client/pull/4620\n      return isRootQuery;\n    }\n\n    const { __typename = isRootQuery && 'Query' } = obj;\n\n    invariant(\n      __typename,\n      `Cannot match fragment because __typename property is missing: ${JSON.stringify(\n        obj,\n      )}`,\n    );\n\n    if (__typename === typeCondition) {\n      return true;\n    }\n\n    const implementingTypes = this.possibleTypesMap[typeCondition];\n    if (\n      __typename &&\n      implementingTypes &&\n      implementingTypes.indexOf(__typename) > -1\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private parseIntrospectionResult(\n    introspectionResultData: IntrospectionResultData,\n  ): PossibleTypesMap {\n    const typeMap: PossibleTypesMap = {};\n    introspectionResultData.__schema.types.forEach(type => {\n      if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n        typeMap[type.name] = type.possibleTypes.map(\n          implementingType => implementingType.name,\n        );\n      }\n    });\n    return typeMap;\n  }\n}\n","import { NormalizedCache, NormalizedCacheObject, StoreObject } from './types';\nimport { wrap, OptimisticWrapperFunction } from 'optimism';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport class DepTrackingCache implements NormalizedCache {\n  // Wrapper function produced by the optimism library, used to depend on\n  // dataId strings, for easy invalidation of specific IDs.\n  private depend: OptimisticWrapperFunction<[string], StoreObject | undefined>;\n\n  constructor(private data: NormalizedCacheObject = Object.create(null)) {\n    this.depend = wrap((dataId: string) => this.data[dataId], {\n      disposable: true,\n      makeCacheKey(dataId: string) {\n        return dataId;\n      },\n    });\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return this.data;\n  }\n\n  public get(dataId: string): StoreObject {\n    this.depend(dataId);\n    return this.data[dataId]!;\n  }\n\n  public set(dataId: string, value?: StoreObject) {\n    const oldValue = this.data[dataId];\n    if (value !== oldValue) {\n      this.data[dataId] = value;\n      this.depend.dirty(dataId);\n    }\n  }\n\n  public delete(dataId: string): void {\n    if (hasOwn.call(this.data, dataId)) {\n      delete this.data[dataId];\n      this.depend.dirty(dataId);\n    }\n  }\n\n  public clear(): void {\n    this.replace(null);\n  }\n\n  public replace(newData: NormalizedCacheObject | null): void {\n    if (newData) {\n      Object.keys(newData).forEach(dataId => {\n        this.set(dataId, newData[dataId]);\n      });\n      Object.keys(this.data).forEach(dataId => {\n        if (!hasOwn.call(newData, dataId)) {\n          this.delete(dataId);\n        }\n      });\n    } else {\n      Object.keys(this.data).forEach(dataId => {\n        this.delete(dataId);\n      });\n    }\n  }\n}\n\nexport function defaultNormalizedCacheFactory(\n  seed?: NormalizedCacheObject,\n): NormalizedCache {\n  return new DepTrackingCache(seed);\n}\n","import {\n  argumentsObjectFromField,\n  assign,\n  canUseWeakMap,\n  createFragmentMap,\n  DirectiveInfo,\n  FragmentMap,\n  getDefaultValues,\n  getDirectiveInfoFromField,\n  getFragmentDefinitions,\n  getMainDefinition,\n  getQueryDefinition,\n  getStoreKeyName,\n  IdValue,\n  isEqual,\n  isField,\n  isIdValue,\n  isInlineFragment,\n  isJsonValue,\n  maybeDeepFreeze,\n  mergeDeepArray,\n  resultKeyNameFromField,\n  shouldInclude,\n  StoreValue,\n  toIdValue,\n} from 'apollo-utilities';\n\nimport { Cache } from 'apollo-cache';\n\nimport {\n  ReadStoreContext,\n  DiffQueryAgainstStoreOptions,\n  ReadQueryOptions,\n  StoreObject,\n} from './types';\n\nimport {\n  DocumentNode,\n  FieldNode,\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n  SelectionSetNode,\n} from 'graphql';\n\nimport { wrap, KeyTrie } from 'optimism';\nimport { DepTrackingCache } from './depTrackingCache';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: ReadStoreContext,\n) => boolean | 'heuristic';\n\ntype ExecContext = {\n  query: DocumentNode;\n  fragmentMap: FragmentMap;\n  contextValue: ReadStoreContext;\n  variableValues: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n};\n\ntype ExecInfo = {\n  resultKey: string;\n  directives: DirectiveInfo;\n};\n\nexport type ExecResultMissingField = {\n  object: StoreObject;\n  fieldName: string;\n  tolerable: boolean;\n};\n\nexport type ExecResult<R = any> = {\n  result: R;\n  // Empty array if no missing fields encountered while computing result.\n  missing?: ExecResultMissingField[];\n};\n\ntype ExecStoreQueryOptions = {\n  query: DocumentNode;\n  rootValue: IdValue;\n  contextValue: ReadStoreContext;\n  variableValues: VariableMap;\n  // Default matcher always matches all fragments\n  fragmentMatcher?: FragmentMatcher;\n};\n\ntype ExecSelectionSetOptions = {\n  selectionSet: SelectionSetNode;\n  rootValue: any;\n  execContext: ExecContext;\n};\n\ntype ExecSubSelectedArrayOptions = {\n  field: FieldNode;\n  array: any[];\n  execContext: ExecContext;\n};\n\nexport interface StoreReaderConfig {\n  cacheKeyRoot?: KeyTrie<object>;\n  freezeResults?: boolean;\n}\n\nexport class StoreReader {\n  private freezeResults: boolean;\n\n  constructor({\n    cacheKeyRoot = new KeyTrie<object>(canUseWeakMap),\n    freezeResults = false,\n  }: StoreReaderConfig = {}) {\n    const {\n      executeStoreQuery,\n      executeSelectionSet,\n      executeSubSelectedArray,\n    } = this;\n\n    this.freezeResults = freezeResults;\n\n    this.executeStoreQuery = wrap((options: ExecStoreQueryOptions) => {\n      return executeStoreQuery.call(this, options);\n    }, {\n      makeCacheKey({\n        query,\n        rootValue,\n        contextValue,\n        variableValues,\n        fragmentMatcher,\n      }: ExecStoreQueryOptions) {\n        // The result of executeStoreQuery can be safely cached only if the\n        // underlying store is capable of tracking dependencies and invalidating\n        // the cache when relevant data have changed.\n        if (contextValue.store instanceof DepTrackingCache) {\n          return cacheKeyRoot.lookup(\n            contextValue.store,\n            query,\n            fragmentMatcher,\n            JSON.stringify(variableValues),\n            rootValue.id,\n          );\n        }\n      }\n    });\n\n    this.executeSelectionSet = wrap((options: ExecSelectionSetOptions) => {\n      return executeSelectionSet.call(this, options);\n    }, {\n      makeCacheKey({\n        selectionSet,\n        rootValue,\n        execContext,\n      }: ExecSelectionSetOptions) {\n        if (execContext.contextValue.store instanceof DepTrackingCache) {\n          return cacheKeyRoot.lookup(\n            execContext.contextValue.store,\n            selectionSet,\n            execContext.fragmentMatcher,\n            JSON.stringify(execContext.variableValues),\n            rootValue.id,\n          );\n        }\n      }\n    });\n\n    this.executeSubSelectedArray = wrap((options: ExecSubSelectedArrayOptions) => {\n      return executeSubSelectedArray.call(this, options);\n    }, {\n      makeCacheKey({ field, array, execContext }) {\n        if (execContext.contextValue.store instanceof DepTrackingCache) {\n          return cacheKeyRoot.lookup(\n            execContext.contextValue.store,\n            field,\n            array,\n            JSON.stringify(execContext.variableValues),\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Resolves the result of a query solely from the store (i.e. never hits the server).\n   *\n   * @param {Store} store The {@link NormalizedCache} used by Apollo for the `data` portion of the\n   * store.\n   *\n   * @param {DocumentNode} query The query document to resolve from the data available in the store.\n   *\n   * @param {Object} [variables] A map from the name of a variable to its value. These variables can\n   * be referenced by the query document.\n   *\n   * @param {any} previousResult The previous result returned by this function for the same query.\n   * If nothing in the store changed since that previous result then values from the previous result\n   * will be returned to preserve referential equality.\n   */\n  public readQueryFromStore<QueryType>(\n    options: ReadQueryOptions,\n  ): QueryType | undefined {\n    return this.diffQueryAgainstStore<QueryType>({\n      ...options,\n      returnPartialData: false,\n    }).result;\n  }\n\n  /**\n   * Given a store and a query, return as much of the result as possible and\n   * identify if any data was missing from the store.\n   * @param  {DocumentNode} query A parsed GraphQL query document\n   * @param  {Store} store The Apollo Client store object\n   * @param  {any} previousResult The previous result returned by this function for the same query\n   * @return {result: Object, complete: [boolean]}\n   */\n  public diffQueryAgainstStore<T>({\n    store,\n    query,\n    variables,\n    previousResult,\n    returnPartialData = true,\n    rootId = 'ROOT_QUERY',\n    fragmentMatcherFunction,\n    config,\n  }: DiffQueryAgainstStoreOptions): Cache.DiffResult<T> {\n    // Throw the right validation error by trying to find a query in the document\n    const queryDefinition = getQueryDefinition(query);\n\n    variables = assign({}, getDefaultValues(queryDefinition), variables);\n\n    const context: ReadStoreContext = {\n      // Global settings\n      store,\n      dataIdFromObject: config && config.dataIdFromObject,\n      cacheRedirects: (config && config.cacheRedirects) || {},\n    };\n\n    const execResult = this.executeStoreQuery({\n      query,\n      rootValue: {\n        type: 'id',\n        id: rootId,\n        generated: true,\n        typename: 'Query',\n      },\n      contextValue: context,\n      variableValues: variables,\n      fragmentMatcher: fragmentMatcherFunction,\n    });\n\n    const hasMissingFields =\n      execResult.missing && execResult.missing.length > 0;\n\n    if (hasMissingFields && ! returnPartialData) {\n      execResult.missing!.forEach(info => {\n        if (info.tolerable) return;\n        throw new InvariantError(\n          `Can't find field ${info.fieldName} on object ${JSON.stringify(\n            info.object,\n            null,\n            2,\n          )}.`,\n        );\n      });\n    }\n\n    if (previousResult) {\n      if (isEqual(previousResult, execResult.result)) {\n        execResult.result = previousResult;\n      }\n    }\n\n    return {\n      result: execResult.result,\n      complete: !hasMissingFields,\n    };\n  }\n\n  /**\n   * Based on graphql function from graphql-js:\n   *\n   * graphql(\n   *   schema: GraphQLSchema,\n   *   requestString: string,\n   *   rootValue?: ?any,\n   *   contextValue?: ?any,\n   *   variableValues?: ?{[key: string]: any},\n   *   operationName?: ?string\n   * ): Promise<GraphQLResult>\n   *\n   * The default export as of graphql-anywhere is sync as of 4.0,\n   * but below is an exported alternative that is async.\n   * In the 5.0 version, this will be the only export again\n   * and it will be async\n   *\n   */\n  private executeStoreQuery({\n    query,\n    rootValue,\n    contextValue,\n    variableValues,\n    // Default matcher always matches all fragments\n    fragmentMatcher = defaultFragmentMatcher,\n  }: ExecStoreQueryOptions): ExecResult {\n    const mainDefinition = getMainDefinition(query);\n    const fragments = getFragmentDefinitions(query);\n    const fragmentMap = createFragmentMap(fragments);\n    const execContext: ExecContext = {\n      query,\n      fragmentMap,\n      contextValue,\n      variableValues,\n      fragmentMatcher,\n    };\n\n    return this.executeSelectionSet({\n      selectionSet: mainDefinition.selectionSet,\n      rootValue,\n      execContext,\n    });\n  }\n\n  private executeSelectionSet({\n    selectionSet,\n    rootValue,\n    execContext,\n  }: ExecSelectionSetOptions): ExecResult {\n    const { fragmentMap, contextValue, variableValues: variables } = execContext;\n    const finalResult: ExecResult = { result: null };\n\n    const objectsToMerge: { [key: string]: any }[] = [];\n\n    const object: StoreObject = contextValue.store.get(rootValue.id);\n\n    const typename =\n      (object && object.__typename) ||\n      (rootValue.id === 'ROOT_QUERY' && 'Query') ||\n      void 0;\n\n    function handleMissing<T>(result: ExecResult<T>): T {\n      if (result.missing) {\n        finalResult.missing = finalResult.missing || [];\n        finalResult.missing.push(...result.missing);\n      }\n      return result.result;\n    }\n\n    selectionSet.selections.forEach(selection => {\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely\n        return;\n      }\n\n      if (isField(selection)) {\n        const fieldResult = handleMissing(\n          this.executeField(object, typename, selection, execContext),\n        );\n\n        if (typeof fieldResult !== 'undefined') {\n          objectsToMerge.push({\n            [resultKeyNameFromField(selection)]: fieldResult,\n          });\n        }\n\n      } else {\n        let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n        if (isInlineFragment(selection)) {\n          fragment = selection;\n        } else {\n          // This is a named fragment\n          fragment = fragmentMap[selection.name.value];\n\n          if (!fragment) {\n            throw new InvariantError(`No fragment named ${selection.name.value}`);\n          }\n        }\n\n        const typeCondition =\n          fragment.typeCondition && fragment.typeCondition.name.value;\n\n        const match =\n          !typeCondition ||\n          execContext.fragmentMatcher(rootValue, typeCondition, contextValue);\n\n        if (match) {\n          let fragmentExecResult = this.executeSelectionSet({\n            selectionSet: fragment.selectionSet,\n            rootValue,\n            execContext,\n          });\n\n          if (match === 'heuristic' && fragmentExecResult.missing) {\n            fragmentExecResult = {\n              ...fragmentExecResult,\n              missing: fragmentExecResult.missing.map(info => {\n                return { ...info, tolerable: true };\n              }),\n            };\n          }\n\n          objectsToMerge.push(handleMissing(fragmentExecResult));\n        }\n      }\n    });\n\n    // Perform a single merge at the end so that we can avoid making more\n    // defensive shallow copies than necessary.\n    finalResult.result = mergeDeepArray(objectsToMerge);\n\n    if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n      Object.freeze(finalResult.result);\n    }\n\n    return finalResult;\n  }\n\n  private executeField(\n    object: StoreObject,\n    typename: string | void,\n    field: FieldNode,\n    execContext: ExecContext,\n  ): ExecResult {\n    const { variableValues: variables, contextValue } = execContext;\n    const fieldName = field.name.value;\n    const args = argumentsObjectFromField(field, variables);\n\n    const info: ExecInfo = {\n      resultKey: resultKeyNameFromField(field),\n      directives: getDirectiveInfoFromField(field, variables),\n    };\n\n    const readStoreResult = readStoreResolver(\n      object,\n      typename,\n      fieldName,\n      args,\n      contextValue,\n      info,\n    );\n\n    if (Array.isArray(readStoreResult.result)) {\n      return this.combineExecResults(\n        readStoreResult,\n        this.executeSubSelectedArray({\n          field,\n          array: readStoreResult.result,\n          execContext,\n        }),\n      );\n    }\n\n    // Handle all scalar types here\n    if (!field.selectionSet) {\n      assertSelectionSetForIdValue(field, readStoreResult.result);\n      if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n        maybeDeepFreeze(readStoreResult);\n      }\n      return readStoreResult;\n    }\n\n    // From here down, the field has a selection set, which means it's trying to\n    // query a GraphQLObjectType\n    if (readStoreResult.result == null) {\n      // Basically any field in a GraphQL response can be null, or missing\n      return readStoreResult;\n    }\n\n    // Returned value is an object, and the query has a sub-selection. Recurse.\n    return this.combineExecResults(\n      readStoreResult,\n      this.executeSelectionSet({\n        selectionSet: field.selectionSet,\n        rootValue: readStoreResult.result,\n        execContext,\n      }),\n    );\n  }\n\n  private combineExecResults<T>(\n    ...execResults: ExecResult<T>[]\n  ): ExecResult<T> {\n    let missing: ExecResultMissingField[] | undefined;\n    execResults.forEach(execResult => {\n      if (execResult.missing) {\n        missing = missing || [];\n        missing.push(...execResult.missing);\n      }\n    });\n    return {\n      result: execResults.pop()!.result,\n      missing,\n    };\n  }\n\n  private executeSubSelectedArray({\n    field,\n    array,\n    execContext,\n  }: ExecSubSelectedArrayOptions): ExecResult {\n    let missing: ExecResultMissingField[] | undefined;\n\n    function handleMissing<T>(childResult: ExecResult<T>): T {\n      if (childResult.missing) {\n        missing = missing || [];\n        missing.push(...childResult.missing);\n      }\n\n      return childResult.result;\n    }\n\n    array = array.map(item => {\n      // null value in array\n      if (item === null) {\n        return null;\n      }\n\n      // This is a nested array, recurse\n      if (Array.isArray(item)) {\n        return handleMissing(this.executeSubSelectedArray({\n          field,\n          array: item,\n          execContext,\n        }));\n      }\n\n      // This is an object, run the selection set on it\n      if (field.selectionSet) {\n        return handleMissing(this.executeSelectionSet({\n          selectionSet: field.selectionSet,\n          rootValue: item,\n          execContext,\n        }));\n      }\n\n      assertSelectionSetForIdValue(field, item);\n\n      return item;\n    });\n\n    if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n      Object.freeze(array);\n    }\n\n    return { result: array, missing };\n  }\n}\n\nfunction assertSelectionSetForIdValue(\n  field: FieldNode,\n  value: any,\n) {\n  if (!field.selectionSet && isIdValue(value)) {\n    throw new InvariantError(\n      `Missing selection set for object of type ${\n        value.typename\n      } returned for query field ${field.name.value}`\n    );\n  }\n}\n\nfunction defaultFragmentMatcher() {\n  return true;\n}\n\nexport function assertIdValue(idValue: IdValue) {\n  invariant(isIdValue(idValue), `\\\nEncountered a sub-selection on the query, but the store doesn't have \\\nan object reference. This should never happen during normal use unless you have custom code \\\nthat is directly manipulating the store; please file an issue.`);\n}\n\nfunction readStoreResolver(\n  object: StoreObject,\n  typename: string | void,\n  fieldName: string,\n  args: any,\n  context: ReadStoreContext,\n  { resultKey, directives }: ExecInfo,\n): ExecResult<StoreValue> {\n  let storeKeyName = fieldName;\n  if (args || directives) {\n    // We happen to know here that getStoreKeyName returns its first\n    // argument unmodified if there are no args or directives, so we can\n    // avoid calling the function at all in that case, as a small but\n    // important optimization to this frequently executed code.\n    storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n  }\n\n  let fieldValue: StoreValue | void = void 0;\n\n  if (object) {\n    fieldValue = object[storeKeyName];\n\n    if (\n      typeof fieldValue === 'undefined' &&\n      context.cacheRedirects &&\n      typeof typename === 'string'\n    ) {\n      // Look for the type in the custom resolver map\n      const type = context.cacheRedirects[typename];\n      if (type) {\n        // Look for the field in the custom resolver map\n        const resolver = type[fieldName];\n        if (resolver) {\n          fieldValue = resolver(object, args, {\n            getCacheKey(storeObj: StoreObject) {\n              const id = context.dataIdFromObject!(storeObj);\n              return id && toIdValue({\n                id,\n                typename: storeObj.__typename,\n              });\n            },\n          });\n        }\n      }\n    }\n  }\n\n  if (typeof fieldValue === 'undefined') {\n    return {\n      result: fieldValue,\n      missing: [{\n        object,\n        fieldName: storeKeyName,\n        tolerable: false,\n      }],\n    };\n  }\n\n  if (isJsonValue(fieldValue)) {\n    fieldValue = fieldValue.json;\n  }\n\n  return {\n    result: fieldValue,\n  };\n}\n","import { NormalizedCache, NormalizedCacheObject, StoreObject } from './types';\n\nexport class ObjectCache implements NormalizedCache {\n  constructor(protected data: NormalizedCacheObject = Object.create(null)) {}\n\n  public toObject() {\n    return this.data;\n  }\n\n  public get(dataId: string) {\n    return this.data[dataId]!;\n  }\n\n  public set(dataId: string, value: StoreObject) {\n    this.data[dataId] = value;\n  }\n\n  public delete(dataId: string) {\n    this.data[dataId] = void 0;\n  }\n\n  public clear() {\n    this.data = Object.create(null);\n  }\n\n  public replace(newData: NormalizedCacheObject) {\n    this.data = newData || Object.create(null);\n  }\n}\n\nexport function defaultNormalizedCacheFactory(\n  seed?: NormalizedCacheObject,\n): NormalizedCache {\n  return new ObjectCache(seed);\n}\n","import {\n  SelectionSetNode,\n  FieldNode,\n  DocumentNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n} from 'graphql';\nimport { FragmentMatcher } from './readFromStore';\n\nimport {\n  assign,\n  createFragmentMap,\n  FragmentMap,\n  getDefaultValues,\n  getFragmentDefinitions,\n  getOperationDefinition,\n  IdValue,\n  isField,\n  isIdValue,\n  isInlineFragment,\n  isProduction,\n  resultKeyNameFromField,\n  shouldInclude,\n  storeKeyNameFromField,\n  StoreValue,\n  toIdValue,\n  isEqual,\n} from 'apollo-utilities';\n\nimport { invariant } from 'ts-invariant';\n\nimport { ObjectCache } from './objectCache';\nimport { defaultNormalizedCacheFactory } from './depTrackingCache';\n\nimport {\n  IdGetter,\n  NormalizedCache,\n  ReadStoreContext,\n  StoreObject,\n} from './types';\n\nexport class WriteError extends Error {\n  public type = 'WriteError';\n}\n\nexport function enhanceErrorWithDocument(error: Error, document: DocumentNode) {\n  // XXX A bit hacky maybe ...\n  const enhancedError = new WriteError(\n    `Error writing result to store for query:\\n ${JSON.stringify(document)}`,\n  );\n  enhancedError.message += '\\n' + error.message;\n  enhancedError.stack = error.stack;\n  return enhancedError;\n}\n\nexport type WriteContext = {\n  readonly store: NormalizedCache;\n  readonly processedData?: { [x: string]: FieldNode[] };\n  readonly variables?: any;\n  readonly dataIdFromObject?: IdGetter;\n  readonly fragmentMap?: FragmentMap;\n  readonly fragmentMatcherFunction?: FragmentMatcher;\n};\n\nexport class StoreWriter {\n  /**\n   * Writes the result of a query to the store.\n   *\n   * @param result The result object returned for the query document.\n   *\n   * @param query The query document whose result we are writing to the store.\n   *\n   * @param store The {@link NormalizedCache} used by Apollo for the `data` portion of the store.\n   *\n   * @param variables A map from the name of a variable to its value. These variables can be\n   * referenced by the query document.\n   *\n   * @param dataIdFromObject A function that returns an object identifier given a particular result\n   * object. See the store documentation for details and an example of this function.\n   *\n   * @param fragmentMatcherFunction A function to use for matching fragment conditions in GraphQL documents\n   */\n  public writeQueryToStore({\n    query,\n    result,\n    store = defaultNormalizedCacheFactory(),\n    variables,\n    dataIdFromObject,\n    fragmentMatcherFunction,\n  }: {\n    query: DocumentNode;\n    result: Object;\n    store?: NormalizedCache;\n    variables?: Object;\n    dataIdFromObject?: IdGetter;\n    fragmentMatcherFunction?: FragmentMatcher;\n  }): NormalizedCache {\n    return this.writeResultToStore({\n      dataId: 'ROOT_QUERY',\n      result,\n      document: query,\n      store,\n      variables,\n      dataIdFromObject,\n      fragmentMatcherFunction,\n    });\n  }\n\n  public writeResultToStore({\n    dataId,\n    result,\n    document,\n    store = defaultNormalizedCacheFactory(),\n    variables,\n    dataIdFromObject,\n    fragmentMatcherFunction,\n  }: {\n    dataId: string;\n    result: any;\n    document: DocumentNode;\n    store?: NormalizedCache;\n    variables?: Object;\n    dataIdFromObject?: IdGetter;\n    fragmentMatcherFunction?: FragmentMatcher;\n  }): NormalizedCache {\n    // XXX TODO REFACTOR: this is a temporary workaround until query normalization is made to work with documents.\n    const operationDefinition = getOperationDefinition(document)!;\n\n    try {\n      return this.writeSelectionSetToStore({\n        result,\n        dataId,\n        selectionSet: operationDefinition.selectionSet,\n        context: {\n          store,\n          processedData: {},\n          variables: assign(\n            {},\n            getDefaultValues(operationDefinition),\n            variables,\n          ),\n          dataIdFromObject,\n          fragmentMap: createFragmentMap(getFragmentDefinitions(document)),\n          fragmentMatcherFunction,\n        },\n      });\n    } catch (e) {\n      throw enhanceErrorWithDocument(e, document);\n    }\n  }\n\n  public writeSelectionSetToStore({\n    result,\n    dataId,\n    selectionSet,\n    context,\n  }: {\n    dataId: string;\n    result: any;\n    selectionSet: SelectionSetNode;\n    context: WriteContext;\n  }): NormalizedCache {\n    const { variables, store, fragmentMap } = context;\n\n    selectionSet.selections.forEach(selection => {\n      if (!shouldInclude(selection, variables)) {\n        return;\n      }\n\n      if (isField(selection)) {\n        const resultFieldKey: string = resultKeyNameFromField(selection);\n        const value: any = result[resultFieldKey];\n\n        if (typeof value !== 'undefined') {\n          this.writeFieldToStore({\n            dataId,\n            value,\n            field: selection,\n            context,\n          });\n        } else {\n          let isDefered = false;\n          let isClient = false;\n          if (selection.directives && selection.directives.length) {\n            // If this is a defered field we don't need to throw / warn.\n            isDefered = selection.directives.some(\n              directive => directive.name && directive.name.value === 'defer',\n            );\n\n            // When using the @client directive, it might be desirable in\n            // some cases to want to write a selection set to the store,\n            // without having all of the selection set values available.\n            // This is because the @client field values might have already\n            // been written to the cache separately (e.g. via Apollo\n            // Cache's `writeData` capabilities). Because of this, we'll\n            // skip the missing field warning for fields with @client\n            // directives.\n            isClient = selection.directives.some(\n              directive => directive.name && directive.name.value === 'client',\n            );\n          }\n\n          if (!isDefered && !isClient && context.fragmentMatcherFunction) {\n            // XXX We'd like to throw an error, but for backwards compatibility's sake\n            // we just print a warning for the time being.\n            //throw new WriteError(`Missing field ${resultFieldKey} in ${JSON.stringify(result, null, 2).substring(0, 100)}`);\n            invariant.warn(\n              `Missing field ${resultFieldKey} in ${JSON.stringify(\n                result,\n                null,\n                2,\n              ).substring(0, 100)}`,\n            );\n          }\n        }\n      } else {\n        // This is not a field, so it must be a fragment, either inline or named\n        let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n        if (isInlineFragment(selection)) {\n          fragment = selection;\n        } else {\n          // Named fragment\n          fragment = (fragmentMap || {})[selection.name.value];\n          invariant(fragment, `No fragment named ${selection.name.value}.`);\n        }\n\n        let matches = true;\n        if (context.fragmentMatcherFunction && fragment.typeCondition) {\n          // TODO we need to rewrite the fragment matchers for this to work properly and efficiently\n          // Right now we have to pretend that we're passing in an idValue and that there's a store\n          // on the context.\n          const id = dataId || 'self';\n          const idValue = toIdValue({ id, typename: undefined });\n          const fakeContext: ReadStoreContext = {\n            // NOTE: fakeContext always uses ObjectCache\n            // since this is only to ensure the return value of 'matches'\n            store: new ObjectCache({ [id]: result }),\n            cacheRedirects: {},\n          };\n          const match = context.fragmentMatcherFunction(\n            idValue,\n            fragment.typeCondition.name.value,\n            fakeContext,\n          );\n          if (!isProduction() && match === 'heuristic') {\n            invariant.error('WARNING: heuristic fragment matching going on!');\n          }\n          matches = !!match;\n        }\n\n        if (matches) {\n          this.writeSelectionSetToStore({\n            result,\n            selectionSet: fragment.selectionSet,\n            dataId,\n            context,\n          });\n        }\n      }\n    });\n\n    return store;\n  }\n\n  private writeFieldToStore({\n    field,\n    value,\n    dataId,\n    context,\n  }: {\n    field: FieldNode;\n    value: any;\n    dataId: string;\n    context: WriteContext;\n  }) {\n    const { variables, dataIdFromObject, store } = context;\n\n    let storeValue: StoreValue;\n    let storeObject: StoreObject;\n\n    const storeFieldName: string = storeKeyNameFromField(field, variables);\n\n    // If this is a scalar value...\n    if (!field.selectionSet || value === null) {\n      storeValue =\n        value != null && typeof value === 'object'\n          ? // If the scalar value is a JSON blob, we have to \"escape\" it so it can’t pretend to be\n            // an id.\n            { type: 'json', json: value }\n          : // Otherwise, just store the scalar directly in the store.\n            value;\n    } else if (Array.isArray(value)) {\n      const generatedId = `${dataId}.${storeFieldName}`;\n\n      storeValue = this.processArrayValue(\n        value,\n        generatedId,\n        field.selectionSet,\n        context,\n      );\n    } else {\n      // It's an object\n      let valueDataId = `${dataId}.${storeFieldName}`;\n      let generated = true;\n\n      // We only prepend the '$' if the valueDataId isn't already a generated\n      // id.\n      if (!isGeneratedId(valueDataId)) {\n        valueDataId = '$' + valueDataId;\n      }\n\n      if (dataIdFromObject) {\n        const semanticId = dataIdFromObject(value);\n\n        // We throw an error if the first character of the id is '$. This is\n        // because we use that character to designate an Apollo-generated id\n        // and we use the distinction between user-desiginated and application-provided\n        // ids when managing overwrites.\n        invariant(\n          !semanticId || !isGeneratedId(semanticId),\n          'IDs returned by dataIdFromObject cannot begin with the \"$\" character.',\n        );\n\n        if (\n          semanticId ||\n          (typeof semanticId === 'number' && semanticId === 0)\n        ) {\n          valueDataId = semanticId;\n          generated = false;\n        }\n      }\n\n      if (!isDataProcessed(valueDataId, field, context.processedData)) {\n        this.writeSelectionSetToStore({\n          dataId: valueDataId,\n          result: value,\n          selectionSet: field.selectionSet,\n          context,\n        });\n      }\n\n      // We take the id and escape it (i.e. wrap it with an enclosing object).\n      // This allows us to distinguish IDs from normal scalars.\n      const typename = value.__typename;\n      storeValue = toIdValue({ id: valueDataId, typename }, generated);\n\n      // check if there was a generated id at the location where we're\n      // about to place this new id. If there was, we have to merge the\n      // data from that id with the data we're about to write in the store.\n      storeObject = store.get(dataId);\n      const escapedId =\n        storeObject && (storeObject[storeFieldName] as IdValue | undefined);\n      if (escapedId !== storeValue && isIdValue(escapedId)) {\n        const hadTypename = escapedId.typename !== undefined;\n        const hasTypename = typename !== undefined;\n        const typenameChanged =\n          hadTypename && hasTypename && escapedId.typename !== typename;\n\n        // If there is already a real id in the store and the current id we\n        // are dealing with is generated, we throw an error.\n        // One exception we allow is when the typename has changed, which occurs\n        // when schema defines a union, both with and without an ID in the same place.\n        // checks if we \"lost\" the read id\n        invariant(\n          !generated || escapedId.generated || typenameChanged,\n          `Store error: the application attempted to write an object with no provided id but the store already contains an id of ${\n            escapedId.id\n          } for this object. The selectionSet that was trying to be written is:\\n${\n            JSON.stringify(field)\n          }`,\n        );\n\n        // checks if we \"lost\" the typename\n        invariant(\n          !hadTypename || hasTypename,\n          `Store error: the application attempted to write an object with no provided typename but the store already contains an object with typename of ${\n            escapedId.typename\n          } for the object of id ${escapedId.id}. The selectionSet that was trying to be written is:\\n${\n            JSON.stringify(field)\n          }`,\n        );\n\n        if (escapedId.generated) {\n          // We should only merge if it's an object of the same type,\n          // otherwise we should delete the generated object\n          if (typenameChanged) {\n            // Only delete the generated object when the old object was\n            // inlined, and the new object is not. This is indicated by\n            // the old id being generated, and the new id being real.\n            if (!generated) {\n              store.delete(escapedId.id);\n            }\n          } else {\n            mergeWithGenerated(escapedId.id, (storeValue as IdValue).id, store);\n          }\n        }\n      }\n    }\n\n    storeObject = store.get(dataId);\n    if (!storeObject || !isEqual(storeValue, storeObject[storeFieldName])) {\n      store.set(dataId, {\n        ...storeObject,\n        [storeFieldName]: storeValue,\n      });\n    }\n  }\n\n  private processArrayValue(\n    value: any[],\n    generatedId: string,\n    selectionSet: SelectionSetNode,\n    context: WriteContext,\n  ): any[] {\n    return value.map((item: any, index: any) => {\n      if (item === null) {\n        return null;\n      }\n\n      let itemDataId = `${generatedId}.${index}`;\n\n      if (Array.isArray(item)) {\n        return this.processArrayValue(item, itemDataId, selectionSet, context);\n      }\n\n      let generated = true;\n\n      if (context.dataIdFromObject) {\n        const semanticId = context.dataIdFromObject(item);\n\n        if (semanticId) {\n          itemDataId = semanticId;\n          generated = false;\n        }\n      }\n\n      if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n        this.writeSelectionSetToStore({\n          dataId: itemDataId,\n          result: item,\n          selectionSet,\n          context,\n        });\n      }\n\n      return toIdValue(\n        { id: itemDataId, typename: item.__typename },\n        generated,\n      );\n    });\n  }\n}\n\n// Checks if the id given is an id that was generated by Apollo\n// rather than by dataIdFromObject.\nfunction isGeneratedId(id: string): boolean {\n  return id[0] === '$';\n}\n\nfunction mergeWithGenerated(\n  generatedKey: string,\n  realKey: string,\n  cache: NormalizedCache,\n): boolean {\n  if (generatedKey === realKey) {\n    return false;\n  }\n\n  const generated = cache.get(generatedKey);\n  const real = cache.get(realKey);\n  let madeChanges = false;\n\n  Object.keys(generated).forEach(key => {\n    const value = generated[key];\n    const realValue = real[key];\n\n    if (\n      isIdValue(value) &&\n      isGeneratedId(value.id) &&\n      isIdValue(realValue) &&\n      !isEqual(value, realValue) &&\n      mergeWithGenerated(value.id, realValue.id, cache)\n    ) {\n      madeChanges = true;\n    }\n  });\n\n  cache.delete(generatedKey);\n  const newRealValue = { ...generated, ...real };\n\n  if (isEqual(newRealValue, real)) {\n    return madeChanges;\n  }\n\n  cache.set(realKey, newRealValue);\n  return true;\n}\n\nfunction isDataProcessed(\n  dataId: string,\n  field: FieldNode | SelectionSetNode,\n  processedData?: { [x: string]: (FieldNode | SelectionSetNode)[] },\n): boolean {\n  if (!processedData) {\n    return false;\n  }\n\n  if (processedData[dataId]) {\n    if (processedData[dataId].indexOf(field) >= 0) {\n      return true;\n    } else {\n      processedData[dataId].push(field);\n    }\n  } else {\n    processedData[dataId] = [field];\n  }\n\n  return false;\n}\n","// Make builtins like Map and Set safe to use with non-extensible objects.\nimport './fixPolyfills';\n\nimport { DocumentNode } from 'graphql';\n\nimport { Cache, ApolloCache, Transaction } from 'apollo-cache';\n\nimport { addTypenameToDocument, canUseWeakMap } from 'apollo-utilities';\n\nimport { wrap } from 'optimism';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { HeuristicFragmentMatcher } from './fragmentMatcher';\nimport {\n  ApolloReducerConfig,\n  NormalizedCache,\n  NormalizedCacheObject,\n} from './types';\n\nimport { StoreReader } from './readFromStore';\nimport { StoreWriter } from './writeToStore';\nimport { DepTrackingCache } from './depTrackingCache';\nimport { KeyTrie } from 'optimism';\nimport { ObjectCache } from './objectCache';\n\nexport interface InMemoryCacheConfig extends ApolloReducerConfig {\n  resultCaching?: boolean;\n  freezeResults?: boolean;\n}\n\nconst defaultConfig: InMemoryCacheConfig = {\n  fragmentMatcher: new HeuristicFragmentMatcher(),\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  freezeResults: false,\n};\n\nexport function defaultDataIdFromObject(result: any): string | null {\n  if (result.__typename) {\n    if (result.id !== undefined) {\n      return `${result.__typename}:${result.id}`;\n    }\n    if (result._id !== undefined) {\n      return `${result.__typename}:${result._id}`;\n    }\n  }\n  return null;\n}\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport class OptimisticCacheLayer extends ObjectCache {\n  constructor(\n    public readonly optimisticId: string,\n    // OptimisticCacheLayer objects always wrap some other parent cache, so\n    // this.parent should never be null.\n    public readonly parent: NormalizedCache,\n    public readonly transaction: Transaction<NormalizedCacheObject>,\n  ) {\n    super(Object.create(null));\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return {\n      ...this.parent.toObject(),\n      ...this.data,\n    };\n  }\n\n  // All the other accessor methods of ObjectCache work without knowing about\n  // this.parent, but the get method needs to be overridden to implement the\n  // fallback this.parent.get(dataId) behavior.\n  public get(dataId: string) {\n    return hasOwn.call(this.data, dataId)\n      ? this.data[dataId]\n      : this.parent.get(dataId);\n  }\n}\n\nexport class InMemoryCache extends ApolloCache<NormalizedCacheObject> {\n  private data: NormalizedCache;\n  private optimisticData: NormalizedCache;\n\n  protected config: InMemoryCacheConfig;\n  private watches = new Set<Cache.WatchOptions>();\n  private addTypename: boolean;\n  private typenameDocumentCache = new Map<DocumentNode, DocumentNode>();\n  private storeReader: StoreReader;\n  private storeWriter: StoreWriter;\n  private cacheKeyRoot = new KeyTrie<object>(canUseWeakMap);\n\n  // Set this while in a transaction to prevent broadcasts...\n  // don't forget to turn it back on!\n  private silenceBroadcast: boolean = false;\n\n  constructor(config: InMemoryCacheConfig = {}) {\n    super();\n    this.config = { ...defaultConfig, ...config };\n\n    // backwards compat\n    if ((this.config as any).customResolvers) {\n      invariant.warn(\n        'customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.',\n      );\n      this.config.cacheRedirects = (this.config as any).customResolvers;\n    }\n\n    if ((this.config as any).cacheResolvers) {\n      invariant.warn(\n        'cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.',\n      );\n      this.config.cacheRedirects = (this.config as any).cacheResolvers;\n    }\n\n    this.addTypename = !!this.config.addTypename;\n\n    // Passing { resultCaching: false } in the InMemoryCache constructor options\n    // will completely disable dependency tracking, which will improve memory\n    // usage but worsen the performance of repeated reads.\n    this.data = this.config.resultCaching\n      ? new DepTrackingCache()\n      : new ObjectCache();\n\n    // When no optimistic writes are currently active, cache.optimisticData ===\n    // cache.data, so there are no additional layers on top of the actual data.\n    // When an optimistic update happens, this.optimisticData will become a\n    // linked list of OptimisticCacheLayer objects that terminates with the\n    // original this.data cache object.\n    this.optimisticData = this.data;\n\n    this.storeWriter = new StoreWriter();\n    this.storeReader = new StoreReader({\n      cacheKeyRoot: this.cacheKeyRoot,\n      freezeResults: config.freezeResults,\n    });\n\n    const cache = this;\n    const { maybeBroadcastWatch } = cache;\n    this.maybeBroadcastWatch = wrap((c: Cache.WatchOptions) => {\n      return maybeBroadcastWatch.call(this, c);\n    }, {\n      makeCacheKey(c: Cache.WatchOptions) {\n        if (c.optimistic) {\n          // If we're reading optimistic data, it doesn't matter if this.data\n          // is a DepTrackingCache, since it will be ignored.\n          return;\n        }\n\n        if (c.previousResult) {\n          // If a previousResult was provided, assume the caller would prefer\n          // to compare the previous data to the new data to determine whether\n          // to broadcast, so we should disable caching by returning here, to\n          // give maybeBroadcastWatch a chance to do that comparison.\n          return;\n        }\n\n        if (cache.data instanceof DepTrackingCache) {\n          // Return a cache key (thus enabling caching) only if we're currently\n          // using a data store that can track cache dependencies.\n          return cache.cacheKeyRoot.lookup(\n            c.query,\n            JSON.stringify(c.variables),\n          );\n        }\n      }\n    });\n  }\n\n  public restore(data: NormalizedCacheObject): this {\n    if (data) this.data.replace(data);\n    return this;\n  }\n\n  public extract(optimistic: boolean = false): NormalizedCacheObject {\n    return (optimistic ? this.optimisticData : this.data).toObject();\n  }\n\n  public read<T>(options: Cache.ReadOptions): T | null {\n    if (typeof options.rootId === 'string' &&\n        typeof this.data.get(options.rootId) === 'undefined') {\n      return null;\n    }\n\n    const { fragmentMatcher } = this.config;\n    const fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n\n    return this.storeReader.readQueryFromStore({\n      store: options.optimistic ? this.optimisticData : this.data,\n      query: this.transformDocument(options.query),\n      variables: options.variables,\n      rootId: options.rootId,\n      fragmentMatcherFunction,\n      previousResult: options.previousResult,\n      config: this.config,\n    }) || null;\n  }\n\n  public write(write: Cache.WriteOptions): void {\n    const { fragmentMatcher } = this.config;\n    const fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n\n    this.storeWriter.writeResultToStore({\n      dataId: write.dataId,\n      result: write.result,\n      variables: write.variables,\n      document: this.transformDocument(write.query),\n      store: this.data,\n      dataIdFromObject: this.config.dataIdFromObject,\n      fragmentMatcherFunction,\n    });\n\n    this.broadcastWatches();\n  }\n\n  public diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T> {\n    const { fragmentMatcher } = this.config;\n    const fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n\n    return this.storeReader.diffQueryAgainstStore({\n      store: query.optimistic ? this.optimisticData : this.data,\n      query: this.transformDocument(query.query),\n      variables: query.variables,\n      returnPartialData: query.returnPartialData,\n      previousResult: query.previousResult,\n      fragmentMatcherFunction,\n      config: this.config,\n    });\n  }\n\n  public watch(watch: Cache.WatchOptions): () => void {\n    this.watches.add(watch);\n\n    return () => {\n      this.watches.delete(watch);\n    };\n  }\n\n  public evict(query: Cache.EvictOptions): Cache.EvictionResult {\n    throw new InvariantError(`eviction is not implemented on InMemory Cache`);\n  }\n\n  public reset(): Promise<void> {\n    this.data.clear();\n    this.broadcastWatches();\n\n    return Promise.resolve();\n  }\n\n  public removeOptimistic(idToRemove: string) {\n    const toReapply: OptimisticCacheLayer[] = [];\n    let removedCount = 0;\n    let layer = this.optimisticData;\n\n    while (layer instanceof OptimisticCacheLayer) {\n      if (layer.optimisticId === idToRemove) {\n        ++removedCount;\n      } else {\n        toReapply.push(layer);\n      }\n      layer = layer.parent;\n    }\n\n    if (removedCount > 0) {\n      // Reset this.optimisticData to the first non-OptimisticCacheLayer object,\n      // which is almost certainly this.data.\n      this.optimisticData = layer;\n\n      // Reapply the layers whose optimistic IDs do not match the removed ID.\n      while (toReapply.length > 0) {\n        const layer = toReapply.pop()!;\n        this.performTransaction(layer.transaction, layer.optimisticId);\n      }\n\n      this.broadcastWatches();\n    }\n  }\n\n  public performTransaction(\n    transaction: Transaction<NormalizedCacheObject>,\n    // This parameter is not part of the performTransaction signature inherited\n    // from the ApolloCache abstract class, but it's useful because it saves us\n    // from duplicating this implementation in recordOptimisticTransaction.\n    optimisticId?: string,\n  ) {\n    const { data, silenceBroadcast } = this;\n    this.silenceBroadcast = true;\n\n    if (typeof optimisticId === 'string') {\n      // Add a new optimistic layer and temporarily make this.data refer to\n      // that layer for the duration of the transaction.\n      this.data = this.optimisticData = new OptimisticCacheLayer(\n        // Note that there can be multiple layers with the same optimisticId.\n        // When removeOptimistic(id) is called for that id, all matching layers\n        // will be removed, and the remaining layers will be reapplied.\n        optimisticId,\n        this.optimisticData,\n        transaction,\n      );\n    }\n\n    try {\n      transaction(this);\n    } finally {\n      this.silenceBroadcast = silenceBroadcast;\n      this.data = data;\n    }\n\n    // This broadcast does nothing if this.silenceBroadcast is true.\n    this.broadcastWatches();\n  }\n\n  public recordOptimisticTransaction(\n    transaction: Transaction<NormalizedCacheObject>,\n    id: string,\n  ) {\n    return this.performTransaction(transaction, id);\n  }\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    if (this.addTypename) {\n      let result = this.typenameDocumentCache.get(document);\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        // If someone calls transformDocument and then mistakenly passes the\n        // result back into an API that also calls transformDocument, make sure\n        // we don't keep creating new query documents.\n        this.typenameDocumentCache.set(result, result);\n      }\n      return result;\n    }\n    return document;\n  }\n\n  protected broadcastWatches() {\n    if (!this.silenceBroadcast) {\n      this.watches.forEach(c => this.maybeBroadcastWatch(c));\n    }\n  }\n\n  // This method is wrapped in the constructor so that it will be called only\n  // if the data that would be broadcast has changed.\n  private maybeBroadcastWatch(c: Cache.WatchOptions) {\n    c.callback(\n      this.diff({\n        query: c.query,\n        variables: c.variables,\n        previousResult: c.previousResult && c.previousResult(),\n        optimistic: c.optimistic,\n      }),\n    );\n  }\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","module.exports = require('./lib/Observable.js').Observable;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver =\n/*#__PURE__*/\nfunction () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: \"next\",\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _item = _step.value;\n                  observer.next(_item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","const niceErrors = {\n    0: `Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'`,\n    1(annotationType, key: PropertyKey) {\n        return `Cannot apply '${annotationType}' to '${key.toString()}': Field not found.`\n    },\n    /*\n    2(prop) {\n        return `invalid decorator for '${prop.toString()}'`\n    },\n    3(prop) {\n        return `Cannot decorate '${prop.toString()}': action can only be used on properties with a function value.`\n    },\n    4(prop) {\n        return `Cannot decorate '${prop.toString()}': computed can only be used on getter properties.`\n    },\n    */\n    5: \"'keys()' can only be used on observable objects, arrays, sets and maps\",\n    6: \"'values()' can only be used on observable objects, arrays, sets and maps\",\n    7: \"'entries()' can only be used on observable objects, arrays and maps\",\n    8: \"'set()' can only be used on observable objects, arrays and maps\",\n    9: \"'remove()' can only be used on observable objects, arrays and maps\",\n    10: \"'has()' can only be used on observable objects, arrays and maps\",\n    11: \"'get()' can only be used on observable objects, arrays and maps\",\n    12: `Invalid annotation`,\n    13: `Dynamic observable objects cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)`,\n    14: \"Intercept handlers should return nothing or a change object\",\n    15: `Observable arrays cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)`,\n    16: `Modification exception: the internal structure of an observable array was changed.`,\n    17(index, length) {\n        return `[mobx.array] Index out of bounds, ${index} is larger than ${length}`\n    },\n    18: \"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js\",\n    19(other) {\n        return \"Cannot initialize from classes that inherit from Map: \" + other.constructor.name\n    },\n    20(other) {\n        return \"Cannot initialize map from \" + other\n    },\n    21(dataStructure) {\n        return `Cannot convert to map from '${dataStructure}'`\n    },\n    22: \"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js\",\n    23: \"It is not possible to get index atoms from arrays\",\n    24(thing) {\n        return \"Cannot obtain administration from \" + thing\n    },\n    25(property, name) {\n        return `the entry '${property}' does not exist in the observable map '${name}'`\n    },\n    26: \"please specify a property\",\n    27(property, name) {\n        return `no observable property '${property.toString()}' found on the observable object '${name}'`\n    },\n    28(thing) {\n        return \"Cannot obtain atom from \" + thing\n    },\n    29: \"Expecting some object\",\n    30: \"invalid action stack. did you forget to finish an action?\",\n    31: \"missing option for computed: get\",\n    32(name, derivation) {\n        return `Cycle detected in computation ${name}: ${derivation}`\n    },\n    33(name) {\n        return `The setter of computed value '${name}' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?`\n    },\n    34(name) {\n        return `[ComputedValue '${name}'] It is not possible to assign a new value to a computed value.`\n    },\n    35: \"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`\",\n    36: \"isolateGlobalState should be called before MobX is running any reactions\",\n    37(method) {\n        return `[mobx] \\`observableArray.${method}()\\` mutates the array in-place, which is not allowed inside a derivation. Use \\`array.slice().${method}()\\` instead`\n    },\n    38: \"'ownKeys()' can only be used on observable objects\",\n    39: \"'defineProperty()' can only be used on observable objects\"\n} as const\n\nconst errors: typeof niceErrors = __DEV__ ? niceErrors : ({} as any)\n\nexport function die(error: string | keyof typeof errors, ...args: any[]): never {\n    if (__DEV__) {\n        let e: any = typeof error === \"string\" ? error : errors[error]\n        if (typeof e === \"function\") e = e.apply(null, args as any)\n        throw new Error(`[MobX] ${e}`)\n    }\n    throw new Error(\n        typeof error === \"number\"\n            ? `[MobX] minified error nr: ${error}${\n                  args.length ? \" \" + args.map(String).join(\",\") : \"\"\n              }. Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts`\n            : `[MobX] ${error}`\n    )\n}\n","declare const window: any\ndeclare const self: any\n\nconst mockGlobal = {}\n\nexport function getGlobal() {\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis\n    }\n    if (typeof window !== \"undefined\") {\n        return window\n    }\n    if (typeof global !== \"undefined\") {\n        return global\n    }\n    if (typeof self !== \"undefined\") {\n        return self\n    }\n    return mockGlobal\n}\n","import { globalState, die } from \"../internal\"\n\n// We shorten anything used > 5 times\nexport const assign = Object.assign\nexport const getDescriptor = Object.getOwnPropertyDescriptor\nexport const defineProperty = Object.defineProperty\nexport const objectPrototype = Object.prototype\n\nexport const EMPTY_ARRAY = []\nObject.freeze(EMPTY_ARRAY)\n\nexport const EMPTY_OBJECT = {}\nObject.freeze(EMPTY_OBJECT)\n\nexport interface Lambda {\n    (): void\n    name?: string\n}\n\nconst hasProxy = typeof Proxy !== \"undefined\"\nconst plainObjectString = Object.toString()\n\nexport function assertProxies() {\n    if (!hasProxy) {\n        die(\n            __DEV__\n                ? \"`Proxy` objects are not available in the current environment. Please configure MobX to enable a fallback implementation.`\"\n                : \"Proxy not available\"\n        )\n    }\n}\n\nexport function warnAboutProxyRequirement(msg: string) {\n    if (__DEV__ && globalState.verifyProxies) {\n        die(\n            \"MobX is currently configured to be able to run in ES5 mode, but in ES5 MobX won't be able to \" +\n                msg\n        )\n    }\n}\n\nexport function getNextId() {\n    return ++globalState.mobxGuid\n}\n\n/**\n * Makes sure that the provided function is invoked at most once.\n */\nexport function once(func: Lambda): Lambda {\n    let invoked = false\n    return function () {\n        if (invoked) {\n            return\n        }\n        invoked = true\n        return (func as any).apply(this, arguments)\n    }\n}\n\nexport const noop = () => {}\n\nexport function isFunction(fn: any): fn is Function {\n    return typeof fn === \"function\"\n}\n\nexport function isString(value: any): value is string {\n    return typeof value === \"string\"\n}\n\nexport function isStringish(value: any): value is string | number | symbol {\n    const t = typeof value\n    switch (t) {\n        case \"string\":\n        case \"symbol\":\n        case \"number\":\n            return true\n    }\n    return false\n}\n\nexport function isObject(value: any): value is Object {\n    return value !== null && typeof value === \"object\"\n}\n\nexport function isPlainObject(value: any) {\n    if (!isObject(value)) {\n        return false\n    }\n    const proto = Object.getPrototypeOf(value)\n    if (proto == null) {\n        return true\n    }\n    const protoConstructor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n    return (\n        typeof protoConstructor === \"function\" && protoConstructor.toString() === plainObjectString\n    )\n}\n\n// https://stackoverflow.com/a/37865170\nexport function isGenerator(obj: any): boolean {\n    const constructor = obj?.constructor\n    if (!constructor) {\n        return false\n    }\n    if (\n        \"GeneratorFunction\" === constructor.name ||\n        \"GeneratorFunction\" === constructor.displayName\n    ) {\n        return true\n    }\n    return false\n}\n\nexport function addHiddenProp(object: any, propName: PropertyKey, value: any) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value\n    })\n}\n\nexport function addHiddenFinalProp(object: any, propName: PropertyKey, value: any) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value\n    })\n}\n\nexport function createInstanceofPredicate<T>(\n    name: string,\n    theClass: new (...args: any[]) => T\n): (x: any) => x is T {\n    const propName = \"isMobX\" + name\n    theClass.prototype[propName] = true\n    return function (x) {\n        return isObject(x) && x[propName] === true\n    } as any\n}\n\nexport function isES6Map(thing: any): thing is Map<any, any> {\n    return thing instanceof Map\n}\n\nexport function isES6Set(thing: any): thing is Set<any> {\n    return thing instanceof Set\n}\n\nconst hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== \"undefined\"\n\n/**\n * Returns the following: own enumerable keys and symbols.\n */\nexport function getPlainObjectKeys(object: any) {\n    const keys = Object.keys(object)\n    // Not supported in IE, so there are not going to be symbol props anyway...\n    if (!hasGetOwnPropertySymbols) {\n        return keys\n    }\n    const symbols = Object.getOwnPropertySymbols(object)\n    if (!symbols.length) {\n        return keys\n    }\n    return [...keys, ...symbols.filter(s => objectPrototype.propertyIsEnumerable.call(object, s))]\n}\n\n// From Immer utils\n// Returns all own keys, including non-enumerable and symbolic\nexport const ownKeys: (target: any) => Array<string | symbol> =\n    typeof Reflect !== \"undefined\" && Reflect.ownKeys\n        ? Reflect.ownKeys\n        : hasGetOwnPropertySymbols\n        ? obj => Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj) as any)\n        : /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport function stringifyKey(key: any): string {\n    if (typeof key === \"string\") {\n        return key\n    }\n    if (typeof key === \"symbol\") {\n        return key.toString()\n    }\n    return new String(key).toString()\n}\n\nexport function toPrimitive(value: any) {\n    return value === null ? null : typeof value === \"object\" ? \"\" + value : value\n}\n\nexport function hasProp(target: Object, prop: PropertyKey): boolean {\n    return objectPrototype.hasOwnProperty.call(target, prop)\n}\n\n// From Immer utils\nexport const getOwnPropertyDescriptors =\n    Object.getOwnPropertyDescriptors ||\n    function getOwnPropertyDescriptors(target: any) {\n        // Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n        const res: any = {}\n        // Note: without polyfill for ownKeys, symbols won't be picked up\n        ownKeys(target).forEach(key => {\n            res[key] = getDescriptor(target, key)\n        })\n        return res\n    }\n","import { Annotation, addHiddenProp, AnnotationsMap, hasProp, die, isOverride } from \"../internal\"\n\nexport const storedAnnotationsSymbol = Symbol(\"mobx-stored-annotations\")\n\n/**\n * Creates a function that acts as\n * - decorator\n * - annotation object\n */\nexport function createDecoratorAnnotation(annotation: Annotation): PropertyDecorator & Annotation {\n    function decorator(target, property) {\n        storeAnnotation(target, property, annotation)\n    }\n    return Object.assign(decorator, annotation)\n}\n\n/**\n * Stores annotation to prototype,\n * so it can be inspected later by `makeObservable` called from constructor\n */\nexport function storeAnnotation(prototype: any, key: PropertyKey, annotation: Annotation) {\n    if (!hasProp(prototype, storedAnnotationsSymbol)) {\n        addHiddenProp(prototype, storedAnnotationsSymbol, {\n            // Inherit annotations\n            ...prototype[storedAnnotationsSymbol]\n        })\n    }\n    // @override must override something\n    if (__DEV__ && isOverride(annotation) && !hasProp(prototype[storedAnnotationsSymbol], key)) {\n        const fieldName = `${prototype.constructor.name}.prototype.${key.toString()}`\n        die(\n            `'${fieldName}' is decorated with 'override', ` +\n                `but no such decorated member was found on prototype.`\n        )\n    }\n    // Cannot re-decorate\n    assertNotDecorated(prototype, annotation, key)\n\n    // Ignore override\n    if (!isOverride(annotation)) {\n        prototype[storedAnnotationsSymbol][key] = annotation\n    }\n}\n\nfunction assertNotDecorated(prototype: object, annotation: Annotation, key: PropertyKey) {\n    if (__DEV__ && !isOverride(annotation) && hasProp(prototype[storedAnnotationsSymbol], key)) {\n        const fieldName = `${prototype.constructor.name}.prototype.${key.toString()}`\n        const currentAnnotationType = prototype[storedAnnotationsSymbol][key].annotationType_\n        const requestedAnnotationType = annotation.annotationType_\n        die(\n            `Cannot apply '@${requestedAnnotationType}' to '${fieldName}':` +\n                `\\nThe field is already decorated with '@${currentAnnotationType}'.` +\n                `\\nRe-decorating fields is not allowed.` +\n                `\\nUse '@override' decorator for methods overriden by subclass.`\n        )\n    }\n}\n\n/**\n * Collects annotations from prototypes and stores them on target (instance)\n */\nexport function collectStoredAnnotations(target): AnnotationsMap<any, any> {\n    if (!hasProp(target, storedAnnotationsSymbol)) {\n        if (__DEV__ && !target[storedAnnotationsSymbol]) {\n            die(\n                `No annotations were passed to makeObservable, but no decorated members have been found either`\n            )\n        }\n        // We need a copy as we will remove annotation from the list once it's applied.\n        addHiddenProp(target, storedAnnotationsSymbol, { ...target[storedAnnotationsSymbol] })\n    }\n    return target[storedAnnotationsSymbol]\n}\n","import {\n    die,\n    Annotation,\n    hasProp,\n    createDecoratorAnnotation,\n    ObservableObjectAdministration,\n    MakeResult\n} from \"../internal\"\n\nconst OVERRIDE = \"override\"\n\nexport const override: Annotation & PropertyDecorator = createDecoratorAnnotation({\n    annotationType_: OVERRIDE,\n    make_,\n    extend_\n})\n\nexport function isOverride(annotation: Annotation): boolean {\n    return annotation.annotationType_ === OVERRIDE\n}\n\nfunction make_(adm: ObservableObjectAdministration, key): MakeResult {\n    // Must not be plain object\n    if (__DEV__ && adm.isPlainObject_) {\n        die(\n            `Cannot apply '${this.annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${this.annotationType_}' cannot be used on plain objects.`\n        )\n    }\n    // Must override something\n    if (__DEV__ && !hasProp(adm.appliedAnnotations_!, key)) {\n        die(\n            `'${adm.name_}.${key.toString()}' is annotated with '${this.annotationType_}', ` +\n                `but no such annotated member was found on prototype.`\n        )\n    }\n    return MakeResult.Cancel\n}\n\nfunction extend_(adm, key, descriptor, proxyTrap): boolean {\n    die(`'${this.annotationType_}' can only be used with 'makeObservable'`)\n}\n","import {\n    IDerivationState_,\n    IObservable,\n    IDerivation,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    noop,\n    onBecomeObserved,\n    onBecomeUnobserved,\n    propagateChanged,\n    reportObserved,\n    startBatch,\n    Lambda\n} from \"../internal\"\n\nexport const $mobx = Symbol(\"mobx administration\")\n\nexport interface IAtom extends IObservable {\n    reportObserved(): boolean\n    reportChanged()\n}\n\nexport class Atom implements IAtom {\n    isPendingUnobservation_ = false // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n    isBeingObserved_ = false\n    observers_ = new Set<IDerivation>()\n\n    diffValue_ = 0\n    lastAccessedBy_ = 0\n    lowestObserverState_ = IDerivationState_.NOT_TRACKING_\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    constructor(public name_ = __DEV__ ? \"Atom@\" + getNextId() : \"Atom\") {}\n\n    // onBecomeObservedListeners\n    public onBOL: Set<Lambda> | undefined\n    // onBecomeUnobservedListeners\n    public onBUOL: Set<Lambda> | undefined\n\n    public onBO() {\n        if (this.onBOL) {\n            this.onBOL.forEach(listener => listener())\n        }\n    }\n\n    public onBUO() {\n        if (this.onBUOL) {\n            this.onBUOL.forEach(listener => listener())\n        }\n    }\n\n    /**\n     * Invoke this method to notify mobx that your atom has been used somehow.\n     * Returns true if there is currently a reactive context.\n     */\n    public reportObserved(): boolean {\n        return reportObserved(this)\n    }\n\n    /**\n     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n     */\n    public reportChanged() {\n        startBatch()\n        propagateChanged(this)\n        endBatch()\n    }\n\n    toString() {\n        return this.name_\n    }\n}\n\nexport const isAtom = createInstanceofPredicate(\"Atom\", Atom)\n\nexport function createAtom(\n    name: string,\n    onBecomeObservedHandler: () => void = noop,\n    onBecomeUnobservedHandler: () => void = noop\n): IAtom {\n    const atom = new Atom(name)\n    // default `noop` listener will not initialize the hook Set\n    if (onBecomeObservedHandler !== noop) {\n        onBecomeObserved(atom, onBecomeObservedHandler)\n    }\n\n    if (onBecomeUnobservedHandler !== noop) {\n        onBecomeUnobserved(atom, onBecomeUnobservedHandler)\n    }\n    return atom\n}\n","import {\n    IComputedValue,\n    IObservable,\n    IObservableArray,\n    Lambda,\n    ObservableMap,\n    getAtom,\n    ObservableSet,\n    isFunction,\n    IObservableValue\n} from \"../internal\"\n\nconst ON_BECOME_OBSERVED = \"onBO\"\nconst ON_BECOME_UNOBSERVED = \"onBUO\"\n\nexport function onBecomeObserved(\n    value:\n        | IObservable\n        | IComputedValue<any>\n        | IObservableArray<any>\n        | ObservableMap<any, any>\n        | ObservableSet<any>\n        | IObservableValue<any>,\n    listener: Lambda\n): Lambda\nexport function onBecomeObserved<K, V = any>(\n    value: ObservableMap<K, V> | Object,\n    property: K,\n    listener: Lambda\n): Lambda\nexport function onBecomeObserved(thing, arg2, arg3?): Lambda {\n    return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3)\n}\n\nexport function onBecomeUnobserved(\n    value:\n        | IObservable\n        | IComputedValue<any>\n        | IObservableArray<any>\n        | ObservableMap<any, any>\n        | ObservableSet<any>\n        | IObservableValue<any>,\n    listener: Lambda\n): Lambda\nexport function onBecomeUnobserved<K, V = any>(\n    value: ObservableMap<K, V> | Object,\n    property: K,\n    listener: Lambda\n): Lambda\nexport function onBecomeUnobserved(thing, arg2, arg3?): Lambda {\n    return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3)\n}\n\nfunction interceptHook(hook: \"onBO\" | \"onBUO\", thing, arg2, arg3) {\n    const atom: IObservable =\n        typeof arg3 === \"function\" ? getAtom(thing, arg2) : (getAtom(thing) as any)\n    const cb = isFunction(arg3) ? arg3 : arg2\n    const listenersKey = `${hook}L` as \"onBOL\" | \"onBUOL\"\n\n    if (atom[listenersKey]) {\n        atom[listenersKey]!.add(cb)\n    } else {\n        atom[listenersKey] = new Set<Lambda>([cb])\n    }\n\n    return function () {\n        const hookListeners = atom[listenersKey]\n        if (hookListeners) {\n            hookListeners.delete(cb)\n            if (hookListeners.size === 0) {\n                delete atom[listenersKey]\n            }\n        }\n    }\n}\n","import { deepEqual } from \"../internal\"\n\nexport interface IEqualsComparer<T> {\n    (a: T, b: T): boolean\n}\n\nfunction identityComparer(a: any, b: any): boolean {\n    return a === b\n}\n\nfunction structuralComparer(a: any, b: any): boolean {\n    return deepEqual(a, b)\n}\n\nfunction shallowComparer(a: any, b: any): boolean {\n    return deepEqual(a, b, 1)\n}\n\nfunction defaultComparer(a: any, b: any): boolean {\n    if (Object.is) {\n        return Object.is(a, b)\n    }\n\n    return a === b ? a !== 0 || 1 / a === 1 / b : a !== a && b !== b\n}\n\nexport const comparer = {\n    identity: identityComparer,\n    structural: structuralComparer,\n    default: defaultComparer,\n    shallow: shallowComparer\n}\n","import {\n    deepEqual,\n    isES6Map,\n    isES6Set,\n    isObservable,\n    isObservableArray,\n    isObservableMap,\n    isObservableSet,\n    isObservableObject,\n    isPlainObject,\n    observable,\n    die,\n    isAction,\n    autoAction,\n    flow,\n    isFlow,\n    isGenerator\n} from \"../internal\"\n\nexport interface IEnhancer<T> {\n    (newValue: T, oldValue: T | undefined, name: string): T\n}\n\nexport function deepEnhancer(v, _, name) {\n    // it is an observable already, done\n    if (isObservable(v)) {\n        return v\n    }\n\n    // something that can be converted and mutated?\n    if (Array.isArray(v)) {\n        return observable.array(v, { name })\n    }\n    if (isPlainObject(v)) {\n        return observable.object(v, undefined, { name })\n    }\n    if (isES6Map(v)) {\n        return observable.map(v, { name })\n    }\n    if (isES6Set(v)) {\n        return observable.set(v, { name })\n    }\n    if (typeof v === \"function\" && !isAction(v) && !isFlow(v)) {\n        if (isGenerator(v)) {\n            return flow(v)\n        } else {\n            return autoAction(name, v)\n        }\n    }\n    return v\n}\n\nexport function shallowEnhancer(v, _, name): any {\n    if (v === undefined || v === null) {\n        return v\n    }\n    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v)) {\n        return v\n    }\n    if (Array.isArray(v)) {\n        return observable.array(v, { name, deep: false })\n    }\n    if (isPlainObject(v)) {\n        return observable.object(v, undefined, { name, deep: false })\n    }\n    if (isES6Map(v)) {\n        return observable.map(v, { name, deep: false })\n    }\n    if (isES6Set(v)) {\n        return observable.set(v, { name, deep: false })\n    }\n\n    if (__DEV__) {\n        die(\n            \"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\"\n        )\n    }\n}\n\nexport function referenceEnhancer(newValue?) {\n    // never turn into an observable\n    return newValue\n}\n\nexport function refStructEnhancer(v, oldValue): any {\n    if (__DEV__ && isObservable(v)) {\n        die(`observable.struct should not be used with observable values`)\n    }\n    if (deepEqual(v, oldValue)) {\n        return oldValue\n    }\n    return v\n}\n","import {\n    ObservableObjectAdministration,\n    createAction,\n    isAction,\n    defineProperty,\n    die,\n    isFunction,\n    Annotation,\n    globalState,\n    MakeResult\n} from \"../internal\"\n\nexport function createActionAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // bound\n    if (this.options_?.bound) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Break\n    }\n    // own\n    if (source === adm.target_) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Continue\n    }\n    // prototype\n    if (isAction(descriptor.value)) {\n        // A prototype could have been annotated already by other constructor,\n        // rest of the proto chain must be annotated already\n        return MakeResult.Break\n    }\n    const actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false)\n    defineProperty(source, key, actionDescriptor)\n    return MakeResult.Continue\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    const actionDescriptor = createActionDescriptor(adm, this, key, descriptor)\n    return adm.defineProperty_(key, actionDescriptor, proxyTrap)\n}\n\nfunction assertActionDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { value }: PropertyDescriptor\n) {\n    if (__DEV__ && !isFunction(value)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on properties with a function value.`\n        )\n    }\n}\n\nexport function createActionDescriptor(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    // provides ability to disable safeDescriptors for prototypes\n    safeDescriptors: boolean = globalState.safeDescriptors\n) {\n    assertActionDescriptor(adm, annotation, key, descriptor)\n    let { value } = descriptor\n    if (annotation.options_?.bound) {\n        value = value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return {\n        value: createAction(\n            annotation.options_?.name ?? key.toString(),\n            value,\n            annotation.options_?.autoAction ?? false,\n            // https://github.com/mobxjs/mobx/discussions/3140\n            annotation.options_?.bound ? adm.proxy_ ?? adm.target_ : undefined\n        ),\n        // Non-configurable for classes\n        // prevents accidental field redefinition in subclass\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n        enumerable: false,\n        // Non-obsevable, therefore non-writable\n        // Also prevents rewriting in subclass constructor\n        writable: safeDescriptors ? false : true\n    }\n}\n","import {\n    ObservableObjectAdministration,\n    Annotation,\n    defineProperty,\n    die,\n    flow,\n    isFlow,\n    isFunction,\n    globalState,\n    MakeResult,\n    hasProp\n} from \"../internal\"\n\nexport function createFlowAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // own\n    if (source === adm.target_) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Continue\n    }\n    // prototype\n    // bound - must annotate protos to support super.flow()\n    if (this.options_?.bound && (!hasProp(adm.target_, key) || !isFlow(adm.target_[key]))) {\n        if (this.extend_(adm, key, descriptor, false) === null) {\n            return MakeResult.Cancel\n        }\n    }\n    if (isFlow(descriptor.value)) {\n        // A prototype could have been annotated already by other constructor,\n        // rest of the proto chain must be annotated already\n        return MakeResult.Break\n    }\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false)\n    defineProperty(source, key, flowDescriptor)\n    return MakeResult.Continue\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, this.options_?.bound)\n    return adm.defineProperty_(key, flowDescriptor, proxyTrap)\n}\n\nfunction assertFlowDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { value }: PropertyDescriptor\n) {\n    if (__DEV__ && !isFunction(value)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on properties with a generator function value.`\n        )\n    }\n}\n\nfunction createFlowDescriptor(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    bound: boolean,\n    // provides ability to disable safeDescriptors for prototypes\n    safeDescriptors: boolean = globalState.safeDescriptors\n): PropertyDescriptor {\n    assertFlowDescriptor(adm, annotation, key, descriptor)\n    let { value } = descriptor\n    // In case of flow.bound, the descriptor can be from already annotated prototype\n    if (!isFlow(value)) {\n        value = flow(value)\n    }\n    if (bound) {\n        // We do not keep original function around, so we bind the existing flow\n        value = value.bind(adm.proxy_ ?? adm.target_)\n        // This is normally set by `flow`, but `bind` returns new function...\n        value.isMobXFlow = true\n    }\n    return {\n        value,\n        // Non-configurable for classes\n        // prevents accidental field redefinition in subclass\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n        enumerable: false,\n        // Non-obsevable, therefore non-writable\n        // Also prevents rewriting in subclass constructor\n        writable: safeDescriptors ? false : true\n    }\n}\n","import { ObservableObjectAdministration, die, Annotation, MakeResult } from \"../internal\"\n\nexport function createComputedAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n): MakeResult {\n    return this.extend_(adm, key, descriptor, false) === null ? MakeResult.Cancel : MakeResult.Break\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    assertComputedDescriptor(adm, this, key, descriptor)\n    return adm.defineComputedProperty_(\n        key,\n        {\n            ...this.options_,\n            get: descriptor.get,\n            set: descriptor.set\n        },\n        proxyTrap\n    )\n}\n\nfunction assertComputedDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { get }: PropertyDescriptor\n) {\n    if (__DEV__ && !get) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on getter(+setter) properties.`\n        )\n    }\n}\n","import {\n    ObservableObjectAdministration,\n    deepEnhancer,\n    die,\n    Annotation,\n    MakeResult\n} from \"../internal\"\n\nexport function createObservableAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n): MakeResult {\n    return this.extend_(adm, key, descriptor, false) === null ? MakeResult.Cancel : MakeResult.Break\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    assertObservableDescriptor(adm, this, key, descriptor)\n    return adm.defineObservableProperty_(\n        key,\n        descriptor.value,\n        this.options_?.enhancer ?? deepEnhancer,\n        proxyTrap\n    )\n}\n\nfunction assertObservableDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n) {\n    if (__DEV__ && !(\"value\" in descriptor)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' cannot be used on getter/setter properties`\n        )\n    }\n}\n","import {\n    ObservableObjectAdministration,\n    observable,\n    Annotation,\n    defineProperty,\n    createAction,\n    globalState,\n    flow,\n    computed,\n    autoAction,\n    isGenerator,\n    MakeResult\n} from \"../internal\"\n\nconst AUTO = \"true\"\n\nexport const autoAnnotation: Annotation = createAutoAnnotation()\n\nexport function createAutoAnnotation(options?: object): Annotation {\n    return {\n        annotationType_: AUTO,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // getter -> computed\n    if (descriptor.get) {\n        return computed.make_(adm, key, descriptor, source)\n    }\n    // lone setter -> action setter\n    if (descriptor.set) {\n        // TODO make action applicable to setter and delegate to action.make_\n        const set = createAction(key.toString(), descriptor.set) as (v: any) => void\n        // own\n        if (source === adm.target_) {\n            return adm.defineProperty_(key, {\n                configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n                set\n            }) === null\n                ? MakeResult.Cancel\n                : MakeResult.Continue\n        }\n        // proto\n        defineProperty(source, key, {\n            configurable: true,\n            set\n        })\n        return MakeResult.Continue\n    }\n    // function on proto -> autoAction/flow\n    if (source !== adm.target_ && typeof descriptor.value === \"function\") {\n        if (isGenerator(descriptor.value)) {\n            const flowAnnotation = this.options_?.autoBind ? flow.bound : flow\n            return flowAnnotation.make_(adm, key, descriptor, source)\n        }\n        const actionAnnotation = this.options_?.autoBind ? autoAction.bound : autoAction\n        return actionAnnotation.make_(adm, key, descriptor, source)\n    }\n    // other -> observable\n    // Copy props from proto as well, see test:\n    // \"decorate should work with Object.create\"\n    let observableAnnotation = this.options_?.deep === false ? observable.ref : observable\n    // if function respect autoBind option\n    if (typeof descriptor.value === \"function\" && this.options_?.autoBind) {\n        descriptor.value = descriptor.value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return observableAnnotation.make_(adm, key, descriptor, source)\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    // getter -> computed\n    if (descriptor.get) {\n        return computed.extend_(adm, key, descriptor, proxyTrap)\n    }\n    // lone setter -> action setter\n    if (descriptor.set) {\n        // TODO make action applicable to setter and delegate to action.extend_\n        return adm.defineProperty_(\n            key,\n            {\n                configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n                set: createAction(key.toString(), descriptor.set) as (v: any) => void\n            },\n            proxyTrap\n        )\n    }\n    // other -> observable\n    // if function respect autoBind option\n    if (typeof descriptor.value === \"function\" && this.options_?.autoBind) {\n        descriptor.value = descriptor.value.bind(adm.proxy_ ?? adm.target_)\n    }\n    let observableAnnotation = this.options_?.deep === false ? observable.ref : observable\n    return observableAnnotation.extend_(adm, key, descriptor, proxyTrap)\n}\n","import {\n    IEnhancer,\n    IEqualsComparer,\n    IObservableArray,\n    IObservableMapInitialValues,\n    IObservableSetInitialValues,\n    IObservableValue,\n    ObservableMap,\n    ObservableSet,\n    ObservableValue,\n    asDynamicObservableObject,\n    createObservableArray,\n    deepEnhancer,\n    extendObservable,\n    isES6Map,\n    isES6Set,\n    isObservable,\n    isPlainObject,\n    referenceEnhancer,\n    Annotation,\n    shallowEnhancer,\n    refStructEnhancer,\n    AnnotationsMap,\n    asObservableObject,\n    storeAnnotation,\n    createDecoratorAnnotation,\n    createLegacyArray,\n    globalState,\n    assign,\n    isStringish,\n    createObservableAnnotation,\n    createAutoAnnotation\n} from \"../internal\"\n\nexport const OBSERVABLE = \"observable\"\nexport const OBSERVABLE_REF = \"observable.ref\"\nexport const OBSERVABLE_SHALLOW = \"observable.shallow\"\nexport const OBSERVABLE_STRUCT = \"observable.struct\"\n\nexport type CreateObservableOptions = {\n    name?: string\n    equals?: IEqualsComparer<any>\n    deep?: boolean\n    defaultDecorator?: Annotation\n    proxy?: boolean\n    autoBind?: boolean\n}\n\n// Predefined bags of create observable options, to avoid allocating temporarily option objects\n// in the majority of cases\nexport const defaultCreateObservableOptions: CreateObservableOptions = {\n    deep: true,\n    name: undefined,\n    defaultDecorator: undefined,\n    proxy: true\n}\nObject.freeze(defaultCreateObservableOptions)\n\nexport function asCreateObservableOptions(thing: any): CreateObservableOptions {\n    return thing || defaultCreateObservableOptions\n}\n\nconst observableAnnotation = createObservableAnnotation(OBSERVABLE)\nconst observableRefAnnotation = createObservableAnnotation(OBSERVABLE_REF, {\n    enhancer: referenceEnhancer\n})\nconst observableShallowAnnotation = createObservableAnnotation(OBSERVABLE_SHALLOW, {\n    enhancer: shallowEnhancer\n})\nconst observableStructAnnotation = createObservableAnnotation(OBSERVABLE_STRUCT, {\n    enhancer: refStructEnhancer\n})\nconst observableDecoratorAnnotation = createDecoratorAnnotation(observableAnnotation)\n\nexport function getEnhancerFromOptions(options: CreateObservableOptions): IEnhancer<any> {\n    return options.deep === true\n        ? deepEnhancer\n        : options.deep === false\n        ? referenceEnhancer\n        : getEnhancerFromAnnotation(options.defaultDecorator)\n}\n\nexport function getAnnotationFromOptions(\n    options?: CreateObservableOptions\n): Annotation | undefined {\n    return options ? options.defaultDecorator ?? createAutoAnnotation(options) : undefined\n}\n\nexport function getEnhancerFromAnnotation(annotation?: Annotation): IEnhancer<any> {\n    return !annotation ? deepEnhancer : annotation.options_?.enhancer ?? deepEnhancer\n}\n\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\nfunction createObservable(v: any, arg2?: any, arg3?: any) {\n    // @observable someProp;\n    if (isStringish(arg2)) {\n        storeAnnotation(v, arg2, observableAnnotation)\n        return\n    }\n\n    // already observable - ignore\n    if (isObservable(v)) {\n        return v\n    }\n\n    // plain object\n    if (isPlainObject(v)) {\n        return observable.object(v, arg2, arg3)\n    }\n\n    // Array\n    if (Array.isArray(v)) {\n        return observable.array(v, arg2)\n    }\n\n    // Map\n    if (isES6Map(v)) {\n        return observable.map(v, arg2)\n    }\n\n    // Set\n    if (isES6Set(v)) {\n        return observable.set(v, arg2)\n    }\n\n    // other object - ignore\n    if (typeof v === \"object\" && v !== null) {\n        return v\n    }\n\n    // anything else\n    return observable.box(v, arg2)\n}\nObject.assign(createObservable, observableDecoratorAnnotation)\n\nexport interface IObservableFactory extends Annotation, PropertyDecorator {\n    <T = any>(value: T[], options?: CreateObservableOptions): IObservableArray<T>\n    <T = any>(value: Set<T>, options?: CreateObservableOptions): ObservableSet<T>\n    <K = any, V = any>(value: Map<K, V>, options?: CreateObservableOptions): ObservableMap<K, V>\n    <T extends object>(\n        value: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ): T\n\n    box: <T = any>(value?: T, options?: CreateObservableOptions) => IObservableValue<T>\n    array: <T = any>(initialValues?: T[], options?: CreateObservableOptions) => IObservableArray<T>\n    set: <T = any>(\n        initialValues?: IObservableSetInitialValues<T>,\n        options?: CreateObservableOptions\n    ) => ObservableSet<T>\n    map: <K = any, V = any>(\n        initialValues?: IObservableMapInitialValues<K, V>,\n        options?: CreateObservableOptions\n    ) => ObservableMap<K, V>\n    object: <T = any>(\n        props: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ) => T\n\n    /**\n     * Decorator that creates an observable that only observes the references, but doesn't try to turn the assigned value into an observable.ts.\n     */\n    ref: Annotation & PropertyDecorator\n    /**\n     * Decorator that creates an observable converts its value (objects, maps or arrays) into a shallow observable structure\n     */\n    shallow: Annotation & PropertyDecorator\n    deep: Annotation & PropertyDecorator\n    struct: Annotation & PropertyDecorator\n}\n\nconst observableFactories: IObservableFactory = {\n    box<T = any>(value?: T, options?: CreateObservableOptions): IObservableValue<T> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals)\n    },\n    array<T = any>(initialValues?: T[], options?: CreateObservableOptions): IObservableArray<T> {\n        const o = asCreateObservableOptions(options)\n        return (\n            globalState.useProxies === false || o.proxy === false\n                ? createLegacyArray\n                : createObservableArray\n        )(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    map<K = any, V = any>(\n        initialValues?: IObservableMapInitialValues<K, V>,\n        options?: CreateObservableOptions\n    ): ObservableMap<K, V> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableMap<K, V>(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    set<T = any>(\n        initialValues?: IObservableSetInitialValues<T>,\n        options?: CreateObservableOptions\n    ): ObservableSet<T> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableSet<T>(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    object<T = any>(\n        props: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ): T {\n        return extendObservable(\n            globalState.useProxies === false || options?.proxy === false\n                ? asObservableObject({}, options)\n                : asDynamicObservableObject({}, options),\n            props,\n            decorators\n        )\n    },\n    ref: createDecoratorAnnotation(observableRefAnnotation),\n    shallow: createDecoratorAnnotation(observableShallowAnnotation),\n    deep: observableDecoratorAnnotation,\n    struct: createDecoratorAnnotation(observableStructAnnotation)\n} as any\n\n// eslint-disable-next-line\nexport var observable: IObservableFactory = assign(createObservable, observableFactories)\n","import {\n    $mobx,\n    IIsObservableObject,\n    ObservableObjectAdministration,\n    warnAboutProxyRequirement,\n    assertProxies,\n    die,\n    isStringish,\n    globalState,\n    CreateObservableOptions,\n    asObservableObject\n} from \"../internal\"\n\nfunction getAdm(target): ObservableObjectAdministration {\n    return target[$mobx]\n}\n\n// Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,\n// and skip either the internal values map, or the base object with its property descriptors!\nconst objectProxyTraps: ProxyHandler<any> = {\n    has(target: IIsObservableObject, name: PropertyKey): boolean {\n        if (__DEV__ && globalState.trackingDerivation) {\n            warnAboutProxyRequirement(\n                \"detect new properties using the 'in' operator. Use 'has' from 'mobx' instead.\"\n            )\n        }\n        return getAdm(target).has_(name)\n    },\n    get(target: IIsObservableObject, name: PropertyKey): any {\n        return getAdm(target).get_(name)\n    },\n    set(target: IIsObservableObject, name: PropertyKey, value: any): boolean {\n        if (!isStringish(name)) {\n            return false\n        }\n        if (__DEV__ && !getAdm(target).values_.has(name)) {\n            warnAboutProxyRequirement(\n                \"add a new observable property through direct assignment. Use 'set' from 'mobx' instead.\"\n            )\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).set_(name, value, true) ?? true\n    },\n    deleteProperty(target: IIsObservableObject, name: PropertyKey): boolean {\n        if (__DEV__) {\n            warnAboutProxyRequirement(\n                \"delete properties from an observable object. Use 'remove' from 'mobx' instead.\"\n            )\n        }\n        if (!isStringish(name)) {\n            return false\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).delete_(name, true) ?? true\n    },\n    defineProperty(\n        target: IIsObservableObject,\n        name: PropertyKey,\n        descriptor: PropertyDescriptor\n    ): boolean {\n        if (__DEV__) {\n            warnAboutProxyRequirement(\n                \"define property on an observable object. Use 'defineProperty' from 'mobx' instead.\"\n            )\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).defineProperty_(name, descriptor) ?? true\n    },\n    ownKeys(target: IIsObservableObject): ArrayLike<string | symbol> {\n        if (__DEV__ && globalState.trackingDerivation) {\n            warnAboutProxyRequirement(\n                \"iterate keys to detect added / removed properties. Use 'keys' from 'mobx' instead.\"\n            )\n        }\n        return getAdm(target).ownKeys_()\n    },\n    preventExtensions(target) {\n        die(13)\n    }\n}\n\nexport function asDynamicObservableObject(\n    target: any,\n    options?: CreateObservableOptions\n): IIsObservableObject {\n    assertProxies()\n    target = asObservableObject(target, options)\n    return (target[$mobx].proxy_ ??= new Proxy(target, objectProxyTraps))\n}\n","import {\n    ComputedValue,\n    IComputedValueOptions,\n    Annotation,\n    storeAnnotation,\n    createDecoratorAnnotation,\n    isStringish,\n    isPlainObject,\n    isFunction,\n    die,\n    IComputedValue,\n    createComputedAnnotation,\n    comparer\n} from \"../internal\"\n\nexport const COMPUTED = \"computed\"\nexport const COMPUTED_STRUCT = \"computed.struct\"\n\nexport interface IComputedFactory extends Annotation, PropertyDecorator {\n    // @computed(opts)\n    <T>(options: IComputedValueOptions<T>): Annotation & PropertyDecorator\n    // computed(fn, opts)\n    <T>(func: () => T, options?: IComputedValueOptions<T>): IComputedValue<T>\n\n    struct: Annotation & PropertyDecorator\n}\n\nconst computedAnnotation = createComputedAnnotation(COMPUTED)\nconst computedStructAnnotation = createComputedAnnotation(COMPUTED_STRUCT, {\n    equals: comparer.structural\n})\n\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\nexport const computed: IComputedFactory = function computed(arg1, arg2) {\n    if (isStringish(arg2)) {\n        // @computed\n        return storeAnnotation(arg1, arg2, computedAnnotation)\n    }\n    if (isPlainObject(arg1)) {\n        // @computed({ options })\n        return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1))\n    }\n\n    // computed(expr, options?)\n    if (__DEV__) {\n        if (!isFunction(arg1)) {\n            die(\"First argument to `computed` should be an expression.\")\n        }\n        if (isFunction(arg2)) {\n            die(\n                \"A setter as second argument is no longer supported, use `{ set: fn }` option instead\"\n            )\n        }\n    }\n    const opts: IComputedValueOptions<any> = isPlainObject(arg2) ? arg2 : {}\n    opts.get = arg1\n    opts.name ||= arg1.name || \"\" /* for generated name */\n\n    return new ComputedValue(opts)\n} as any\n\nObject.assign(computed, computedAnnotation)\n\ncomputed.struct = createDecoratorAnnotation(computedStructAnnotation)\n","import {\n    IDerivation,\n    endBatch,\n    globalState,\n    isSpyEnabled,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    untrackedEnd,\n    untrackedStart,\n    isFunction,\n    allowStateReadsStart,\n    allowStateReadsEnd,\n    ACTION,\n    EMPTY_ARRAY,\n    die,\n    getDescriptor\n} from \"../internal\"\n\n// we don't use globalState for these in order to avoid possible issues with multiple\n// mobx versions\nlet currentActionId = 0\nlet nextActionId = 1\nconst isFunctionNameConfigurable = getDescriptor(() => {}, \"name\")?.configurable ?? false\n\n// we can safely recycle this object\nconst tmpNameDescriptor: PropertyDescriptor = {\n    value: \"action\",\n    configurable: true,\n    writable: false,\n    enumerable: false\n}\n\nexport function createAction(\n    actionName: string,\n    fn: Function,\n    autoAction: boolean = false,\n    ref?: Object\n): Function {\n    if (__DEV__) {\n        if (!isFunction(fn)) {\n            die(\"`action` can only be invoked on functions\")\n        }\n        if (typeof actionName !== \"string\" || !actionName) {\n            die(`actions should have valid names, got: '${actionName}'`)\n        }\n    }\n    function res() {\n        return executeAction(actionName, autoAction, fn, ref || this, arguments)\n    }\n    res.isMobxAction = true\n    if (isFunctionNameConfigurable) {\n        tmpNameDescriptor.value = actionName\n        Object.defineProperty(res, \"name\", tmpNameDescriptor)\n    }\n    return res\n}\n\nexport function executeAction(\n    actionName: string,\n    canRunAsDerivation: boolean,\n    fn: Function,\n    scope?: any,\n    args?: IArguments\n) {\n    const runInfo = _startAction(actionName, canRunAsDerivation, scope, args)\n    try {\n        return fn.apply(scope, args)\n    } catch (err) {\n        runInfo.error_ = err\n        throw err\n    } finally {\n        _endAction(runInfo)\n    }\n}\n\nexport interface IActionRunInfo {\n    prevDerivation_: IDerivation | null\n    prevAllowStateChanges_: boolean\n    prevAllowStateReads_: boolean\n    notifySpy_: boolean\n    startTime_: number\n    error_?: any\n    parentActionId_: number\n    actionId_: number\n    runAsAction_?: boolean\n}\n\nexport function _startAction(\n    actionName: string,\n    canRunAsDerivation: boolean, // true for autoAction\n    scope: any,\n    args?: IArguments\n): IActionRunInfo {\n    const notifySpy_ = __DEV__ && isSpyEnabled() && !!actionName\n    let startTime_: number = 0\n    if (__DEV__ && notifySpy_) {\n        startTime_ = Date.now()\n        const flattenedArgs = args ? Array.from(args) : EMPTY_ARRAY\n        spyReportStart({\n            type: ACTION,\n            name: actionName,\n            object: scope,\n            arguments: flattenedArgs\n        })\n    }\n    const prevDerivation_ = globalState.trackingDerivation\n    const runAsAction = !canRunAsDerivation || !prevDerivation_\n    startBatch()\n    let prevAllowStateChanges_ = globalState.allowStateChanges // by default preserve previous allow\n    if (runAsAction) {\n        untrackedStart()\n        prevAllowStateChanges_ = allowStateChangesStart(true)\n    }\n    const prevAllowStateReads_ = allowStateReadsStart(true)\n    const runInfo = {\n        runAsAction_: runAsAction,\n        prevDerivation_,\n        prevAllowStateChanges_,\n        prevAllowStateReads_,\n        notifySpy_,\n        startTime_,\n        actionId_: nextActionId++,\n        parentActionId_: currentActionId\n    }\n    currentActionId = runInfo.actionId_\n    return runInfo\n}\n\nexport function _endAction(runInfo: IActionRunInfo) {\n    if (currentActionId !== runInfo.actionId_) {\n        die(30)\n    }\n    currentActionId = runInfo.parentActionId_\n\n    if (runInfo.error_ !== undefined) {\n        globalState.suppressReactionErrors = true\n    }\n    allowStateChangesEnd(runInfo.prevAllowStateChanges_)\n    allowStateReadsEnd(runInfo.prevAllowStateReads_)\n    endBatch()\n    if (runInfo.runAsAction_) {\n        untrackedEnd(runInfo.prevDerivation_)\n    }\n    if (__DEV__ && runInfo.notifySpy_) {\n        spyReportEnd({ time: Date.now() - runInfo.startTime_ })\n    }\n    globalState.suppressReactionErrors = false\n}\n\nexport function allowStateChanges<T>(allowStateChanges: boolean, func: () => T): T {\n    const prev = allowStateChangesStart(allowStateChanges)\n    try {\n        return func()\n    } finally {\n        allowStateChangesEnd(prev)\n    }\n}\n\nexport function allowStateChangesStart(allowStateChanges: boolean) {\n    const prev = globalState.allowStateChanges\n    globalState.allowStateChanges = allowStateChanges\n    return prev\n}\n\nexport function allowStateChangesEnd(prev: boolean) {\n    globalState.allowStateChanges = prev\n}\n","import {\n    Atom,\n    IEnhancer,\n    IInterceptable,\n    IEqualsComparer,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    checkIfStateModificationsAreAllowed,\n    comparer,\n    createInstanceofPredicate,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isSpyEnabled,\n    notifyListeners,\n    registerInterceptor,\n    registerListener,\n    spyReport,\n    spyReportEnd,\n    spyReportStart,\n    toPrimitive,\n    globalState,\n    IUNCHANGED,\n    UPDATE\n} from \"../internal\"\n\nexport interface IValueWillChange<T> {\n    object: IObservableValue<T>\n    type: \"update\"\n    newValue: T\n}\n\nexport type IValueDidChange<T = any> = {\n    type: \"update\"\n    observableKind: \"value\"\n    object: IObservableValue<T>\n    debugObjectName: string\n    newValue: unknown\n    oldValue: unknown\n}\nexport type IBoxDidChange<T = any> =\n    | {\n          type: \"create\"\n          observableKind: \"value\"\n          object: IObservableValue<T>\n          debugObjectName: string\n          newValue: unknown\n      }\n    | IValueDidChange<T>\n\nexport interface IObservableValue<T> {\n    get(): T\n    set(value: T): void\n    intercept_(handler: IInterceptor<IValueWillChange<T>>): Lambda\n    observe_(listener: (change: IValueDidChange<T>) => void, fireImmediately?: boolean): Lambda\n}\n\nconst CREATE = \"create\"\n\nexport class ObservableValue<T>\n    extends Atom\n    implements IObservableValue<T>, IInterceptable<IValueWillChange<T>>, IListenable\n{\n    hasUnreportedChange_ = false\n    interceptors_\n    changeListeners_\n    value_\n    dehancer: any\n\n    constructor(\n        value: T,\n        public enhancer: IEnhancer<T>,\n        public name_ = __DEV__ ? \"ObservableValue@\" + getNextId() : \"ObservableValue\",\n        notifySpy = true,\n        private equals: IEqualsComparer<any> = comparer.default\n    ) {\n        super(name_)\n        this.value_ = enhancer(value, undefined, name_)\n        if (__DEV__ && notifySpy && isSpyEnabled()) {\n            // only notify spy if this is a stand-alone observable\n            spyReport({\n                type: CREATE,\n                object: this,\n                observableKind: \"value\",\n                debugObjectName: this.name_,\n                newValue: \"\" + this.value_\n            })\n        }\n    }\n\n    private dehanceValue(value: T): T {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    public set(newValue: T) {\n        const oldValue = this.value_\n        newValue = this.prepareNewValue_(newValue) as any\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled()\n            if (__DEV__ && notifySpy) {\n                spyReportStart({\n                    type: UPDATE,\n                    object: this,\n                    observableKind: \"value\",\n                    debugObjectName: this.name_,\n                    newValue,\n                    oldValue\n                })\n            }\n            this.setNewValue_(newValue)\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n    }\n\n    private prepareNewValue_(newValue): T | IUNCHANGED {\n        checkIfStateModificationsAreAllowed(this)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IValueWillChange<T>>(this, {\n                object: this,\n                type: UPDATE,\n                newValue\n            })\n            if (!change) {\n                return globalState.UNCHANGED\n            }\n            newValue = change.newValue\n        }\n        // apply modifier\n        newValue = this.enhancer(newValue, this.value_, this.name_)\n        return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue\n    }\n\n    setNewValue_(newValue: T) {\n        const oldValue = this.value_\n        this.value_ = newValue\n        this.reportChanged()\n        if (hasListeners(this)) {\n            notifyListeners(this, {\n                type: UPDATE,\n                object: this,\n                newValue,\n                oldValue\n            })\n        }\n    }\n\n    public get(): T {\n        this.reportObserved()\n        return this.dehanceValue(this.value_)\n    }\n\n    intercept_(handler: IInterceptor<IValueWillChange<T>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    observe_(listener: (change: IValueDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        if (fireImmediately) {\n            listener({\n                observableKind: \"value\",\n                debugObjectName: this.name_,\n                object: this,\n                type: UPDATE,\n                newValue: this.value_,\n                oldValue: undefined\n            })\n        }\n        return registerListener(this, listener)\n    }\n\n    raw() {\n        // used by MST ot get undehanced value\n        return this.value_\n    }\n\n    toJSON() {\n        return this.get()\n    }\n\n    toString() {\n        return `${this.name_}[${this.value_}]`\n    }\n\n    valueOf(): T {\n        return toPrimitive(this.get())\n    }\n\n    [Symbol.toPrimitive]() {\n        return this.valueOf()\n    }\n}\n\nexport const isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue) as (\n    x: any\n) => x is IObservableValue<any>\n","import {\n    IAtom,\n    IDepTreeNode,\n    IObservable,\n    addObserver,\n    globalState,\n    isComputedValue,\n    removeObserver\n} from \"../internal\"\n\nexport enum IDerivationState_ {\n    // before being run or (outside batch and not being observed)\n    // at this point derivation is not holding any data about dependency tree\n    NOT_TRACKING_ = -1,\n    // no shallow dependency changed since last computation\n    // won't recalculate derivation\n    // this is what makes mobx fast\n    UP_TO_DATE_ = 0,\n    // some deep dependency changed, but don't know if shallow dependency changed\n    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n    // currently only ComputedValue will propagate POSSIBLY_STALE\n    //\n    // having this state is second big optimization:\n    // don't have to recompute on every dependency change, but only when it's needed\n    POSSIBLY_STALE_ = 1,\n    // A shallow dependency has changed since last computation and the derivation\n    // will need to recompute when it's needed next.\n    STALE_ = 2\n}\n\nexport enum TraceMode {\n    NONE,\n    LOG,\n    BREAK\n}\n\n/**\n * A derivation is everything that can be derived from the state (all the atoms) in a pure manner.\n * See https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n */\nexport interface IDerivation extends IDepTreeNode {\n    observing_: IObservable[]\n    newObserving_: null | IObservable[]\n    dependenciesState_: IDerivationState_\n    /**\n     * Id of the current run of a derivation. Each time the derivation is tracked\n     * this number is increased by one. This number is globally unique\n     */\n    runId_: number\n    /**\n     * amount of dependencies used by the derivation in this run, which has not been bound yet.\n     */\n    unboundDepsCount_: number\n    onBecomeStale_(): void\n    isTracing_: TraceMode\n\n    /**\n     *  warn if the derivation has no dependencies after creation/update\n     */\n    requiresObservable_?: boolean\n}\n\nexport class CaughtException {\n    constructor(public cause: any) {\n        // Empty\n    }\n}\n\nexport function isCaughtException(e: any): e is CaughtException {\n    return e instanceof CaughtException\n}\n\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\nexport function shouldCompute(derivation: IDerivation): boolean {\n    switch (derivation.dependenciesState_) {\n        case IDerivationState_.UP_TO_DATE_:\n            return false\n        case IDerivationState_.NOT_TRACKING_:\n        case IDerivationState_.STALE_:\n            return true\n        case IDerivationState_.POSSIBLY_STALE_: {\n            // state propagation can occur outside of action/reactive context #2195\n            const prevAllowStateReads = allowStateReadsStart(true)\n            const prevUntracked = untrackedStart() // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n            const obs = derivation.observing_,\n                l = obs.length\n            for (let i = 0; i < l; i++) {\n                const obj = obs[i]\n                if (isComputedValue(obj)) {\n                    if (globalState.disableErrorBoundaries) {\n                        obj.get()\n                    } else {\n                        try {\n                            obj.get()\n                        } catch (e) {\n                            // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                            untrackedEnd(prevUntracked)\n                            allowStateReadsEnd(prevAllowStateReads)\n                            return true\n                        }\n                    }\n                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n                    // and `derivation` is an observer of `obj`\n                    // invariantShouldCompute(derivation)\n                    if ((derivation.dependenciesState_ as any) === IDerivationState_.STALE_) {\n                        untrackedEnd(prevUntracked)\n                        allowStateReadsEnd(prevAllowStateReads)\n                        return true\n                    }\n                }\n            }\n            changeDependenciesStateTo0(derivation)\n            untrackedEnd(prevUntracked)\n            allowStateReadsEnd(prevAllowStateReads)\n            return false\n        }\n    }\n}\n\nexport function isComputingDerivation() {\n    return globalState.trackingDerivation !== null // filter out actions inside computations\n}\n\nexport function checkIfStateModificationsAreAllowed(atom: IAtom) {\n    if (!__DEV__) {\n        return\n    }\n    const hasObservers = atom.observers_.size > 0\n    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n    if (\n        !globalState.allowStateChanges &&\n        (hasObservers || globalState.enforceActions === \"always\")\n    ) {\n        console.warn(\n            \"[MobX] \" +\n                (globalState.enforceActions\n                    ? \"Since strict-mode is enabled, changing (observed) observable values without using an action is not allowed. Tried to modify: \"\n                    : \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, a computed value or the render function of a React component? You can wrap side effects in 'runInAction' (or decorate functions with 'action') if needed. Tried to modify: \") +\n                atom.name_\n        )\n    }\n}\n\nexport function checkIfStateReadsAreAllowed(observable: IObservable) {\n    if (__DEV__ && !globalState.allowStateReads && globalState.observableRequiresReaction) {\n        console.warn(\n            `[mobx] Observable '${observable.name_}' being read outside a reactive context.`\n        )\n    }\n}\n\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\nexport function trackDerivedFunction<T>(derivation: IDerivation, f: () => T, context: any) {\n    const prevAllowStateReads = allowStateReadsStart(true)\n    // pre allocate array allocation + room for variation in deps\n    // array will be trimmed by bindDependencies\n    changeDependenciesStateTo0(derivation)\n    derivation.newObserving_ = new Array(derivation.observing_.length + 100)\n    derivation.unboundDepsCount_ = 0\n    derivation.runId_ = ++globalState.runId\n    const prevTracking = globalState.trackingDerivation\n    globalState.trackingDerivation = derivation\n    globalState.inBatch++\n    let result\n    if (globalState.disableErrorBoundaries === true) {\n        result = f.call(context)\n    } else {\n        try {\n            result = f.call(context)\n        } catch (e) {\n            result = new CaughtException(e)\n        }\n    }\n    globalState.inBatch--\n    globalState.trackingDerivation = prevTracking\n    bindDependencies(derivation)\n\n    warnAboutDerivationWithoutDependencies(derivation)\n    allowStateReadsEnd(prevAllowStateReads)\n    return result\n}\n\nfunction warnAboutDerivationWithoutDependencies(derivation: IDerivation) {\n    if (!__DEV__) {\n        return\n    }\n\n    if (derivation.observing_.length !== 0) {\n        return\n    }\n\n    if (\n        typeof derivation.requiresObservable_ === \"boolean\"\n            ? derivation.requiresObservable_\n            : globalState.reactionRequiresObservable\n    ) {\n        console.warn(\n            `[mobx] Derivation '${derivation.name_}' is created/updated without reading any observable value.`\n        )\n    }\n}\n\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\nfunction bindDependencies(derivation: IDerivation) {\n    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n    const prevObserving = derivation.observing_\n    const observing = (derivation.observing_ = derivation.newObserving_!)\n    let lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_\n\n    // Go through all new observables and check diffValue: (this list can contain duplicates):\n    //   0: first occurrence, change to 1 and keep it\n    //   1: extra occurrence, drop it\n    let i0 = 0,\n        l = derivation.unboundDepsCount_\n    for (let i = 0; i < l; i++) {\n        const dep = observing[i]\n        if (dep.diffValue_ === 0) {\n            dep.diffValue_ = 1\n            if (i0 !== i) {\n                observing[i0] = dep\n            }\n            i0++\n        }\n\n        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n        // not hitting the condition\n        if ((dep as any as IDerivation).dependenciesState_ > lowestNewObservingDerivationState) {\n            lowestNewObservingDerivationState = (dep as any as IDerivation).dependenciesState_\n        }\n    }\n    observing.length = i0\n\n    derivation.newObserving_ = null // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n\n    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n    //   0: it's not in new observables, unobserve it\n    //   1: it keeps being observed, don't want to notify it. change to 0\n    l = prevObserving.length\n    while (l--) {\n        const dep = prevObserving[l]\n        if (dep.diffValue_ === 0) {\n            removeObserver(dep, derivation)\n        }\n        dep.diffValue_ = 0\n    }\n\n    // Go through all new observables and check diffValue: (now it should be unique)\n    //   0: it was set to 0 in last loop. don't need to do anything.\n    //   1: it wasn't observed, let's observe it. set back to 0\n    while (i0--) {\n        const dep = observing[i0]\n        if (dep.diffValue_ === 1) {\n            dep.diffValue_ = 0\n            addObserver(dep, derivation)\n        }\n    }\n\n    // Some new observed derivations may become stale during this derivation computation\n    // so they have had no chance to propagate staleness (#916)\n    if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {\n        derivation.dependenciesState_ = lowestNewObservingDerivationState\n        derivation.onBecomeStale_()\n    }\n}\n\nexport function clearObserving(derivation: IDerivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n    const obs = derivation.observing_\n    derivation.observing_ = []\n    let i = obs.length\n    while (i--) {\n        removeObserver(obs[i], derivation)\n    }\n\n    derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_\n}\n\nexport function untracked<T>(action: () => T): T {\n    const prev = untrackedStart()\n    try {\n        return action()\n    } finally {\n        untrackedEnd(prev)\n    }\n}\n\nexport function untrackedStart(): IDerivation | null {\n    const prev = globalState.trackingDerivation\n    globalState.trackingDerivation = null\n    return prev\n}\n\nexport function untrackedEnd(prev: IDerivation | null) {\n    globalState.trackingDerivation = prev\n}\n\nexport function allowStateReadsStart(allowStateReads: boolean) {\n    const prev = globalState.allowStateReads\n    globalState.allowStateReads = allowStateReads\n    return prev\n}\n\nexport function allowStateReadsEnd(prev: boolean) {\n    globalState.allowStateReads = prev\n}\n\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\nexport function changeDependenciesStateTo0(derivation: IDerivation) {\n    if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n        return\n    }\n    derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_\n\n    const obs = derivation.observing_\n    let i = obs.length\n    while (i--) {\n        obs[i].lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n    }\n}\n","import {\n    CaughtException,\n    IDerivation,\n    IDerivationState_,\n    IEqualsComparer,\n    IObservable,\n    Lambda,\n    TraceMode,\n    autorun,\n    clearObserving,\n    comparer,\n    createAction,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    globalState,\n    isCaughtException,\n    isSpyEnabled,\n    propagateChangeConfirmed,\n    propagateMaybeChanged,\n    reportObserved,\n    shouldCompute,\n    spyReport,\n    startBatch,\n    toPrimitive,\n    trackDerivedFunction,\n    untrackedEnd,\n    untrackedStart,\n    UPDATE,\n    die,\n    allowStateChangesStart,\n    allowStateChangesEnd\n} from \"../internal\"\n\nexport interface IComputedValue<T> {\n    get(): T\n    set(value: T): void\n    observe_(listener: (change: IComputedDidChange<T>) => void, fireImmediately?: boolean): Lambda\n}\n\nexport interface IComputedValueOptions<T> {\n    get?: () => T\n    set?: (value: T) => void\n    name?: string\n    equals?: IEqualsComparer<T>\n    context?: any\n    requiresReaction?: boolean\n    keepAlive?: boolean\n}\n\nexport type IComputedDidChange<T = any> = {\n    type: \"update\"\n    observableKind: \"computed\"\n    object: unknown\n    debugObjectName: string\n    newValue: T\n    oldValue: T | undefined\n}\n\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\nexport class ComputedValue<T> implements IObservable, IComputedValue<T>, IDerivation {\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_\n    observing_: IObservable[] = [] // nodes we are looking at. Our value depends on these nodes\n    newObserving_ = null // during tracking it's an array with new observed observers\n    isBeingObserved_ = false\n    isPendingUnobservation_: boolean = false\n    observers_ = new Set<IDerivation>()\n    diffValue_ = 0\n    runId_ = 0\n    lastAccessedBy_ = 0\n    lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n    unboundDepsCount_ = 0\n    protected value_: T | undefined | CaughtException = new CaughtException(null)\n    name_: string\n    triggeredBy_?: string\n    isComputing_: boolean = false // to check for cycles\n    isRunningSetter_: boolean = false\n    derivation: () => T // N.B: unminified as it is used by MST\n    setter_?: (value: T) => void\n    isTracing_: TraceMode = TraceMode.NONE\n    scope_: Object | undefined\n    private equals_: IEqualsComparer<any>\n    private requiresReaction_: boolean | undefined\n    keepAlive_: boolean\n\n    /**\n     * Create a new computed value based on a function expression.\n     *\n     * The `name` property is for debug purposes only.\n     *\n     * The `equals` property specifies the comparer function to use to determine if a newly produced\n     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n     * compares based on identity comparison (===), and `structuralComparer` deeply compares the structure.\n     * Structural comparison can be convenient if you always produce a new aggregated object and\n     * don't want to notify observers if it is structurally the same.\n     * This is useful for working with vectors, mouse coordinates etc.\n     */\n    constructor(options: IComputedValueOptions<T>) {\n        if (!options.get) {\n            die(31)\n        }\n        this.derivation = options.get!\n        this.name_ = options.name || (__DEV__ ? \"ComputedValue@\" + getNextId() : \"ComputedValue\")\n        if (options.set) {\n            this.setter_ = createAction(\n                __DEV__ ? this.name_ + \"-setter\" : \"ComputedValue-setter\",\n                options.set\n            ) as any\n        }\n        this.equals_ =\n            options.equals ||\n            ((options as any).compareStructural || (options as any).struct\n                ? comparer.structural\n                : comparer.default)\n        this.scope_ = options.context\n        this.requiresReaction_ = options.requiresReaction\n        this.keepAlive_ = !!options.keepAlive\n    }\n\n    onBecomeStale_() {\n        propagateMaybeChanged(this)\n    }\n\n    public onBOL: Set<Lambda> | undefined\n    public onBUOL: Set<Lambda> | undefined\n\n    public onBO() {\n        if (this.onBOL) {\n            this.onBOL.forEach(listener => listener())\n        }\n    }\n\n    public onBUO() {\n        if (this.onBUOL) {\n            this.onBUOL.forEach(listener => listener())\n        }\n    }\n\n    /**\n     * Returns the current value of this computed value.\n     * Will evaluate its computation first if needed.\n     */\n    public get(): T {\n        if (this.isComputing_) {\n            die(32, this.name_, this.derivation)\n        }\n        if (\n            globalState.inBatch === 0 &&\n            // !globalState.trackingDerivatpion &&\n            this.observers_.size === 0 &&\n            !this.keepAlive_\n        ) {\n            if (shouldCompute(this)) {\n                this.warnAboutUntrackedRead_()\n                startBatch() // See perf test 'computed memoization'\n                this.value_ = this.computeValue_(false)\n                endBatch()\n            }\n        } else {\n            reportObserved(this)\n            if (shouldCompute(this)) {\n                let prevTrackingContext = globalState.trackingContext\n                if (this.keepAlive_ && !prevTrackingContext) {\n                    globalState.trackingContext = this\n                }\n                if (this.trackAndCompute()) {\n                    propagateChangeConfirmed(this)\n                }\n                globalState.trackingContext = prevTrackingContext\n            }\n        }\n        const result = this.value_!\n\n        if (isCaughtException(result)) {\n            throw result.cause\n        }\n        return result\n    }\n\n    public set(value: T) {\n        if (this.setter_) {\n            if (this.isRunningSetter_) {\n                die(33, this.name_)\n            }\n            this.isRunningSetter_ = true\n            try {\n                this.setter_.call(this.scope_, value)\n            } finally {\n                this.isRunningSetter_ = false\n            }\n        } else {\n            die(34, this.name_)\n        }\n    }\n\n    trackAndCompute(): boolean {\n        // N.B: unminified as it is used by MST\n        const oldValue = this.value_\n        const wasSuspended =\n            /* see #1208 */ this.dependenciesState_ === IDerivationState_.NOT_TRACKING_\n        const newValue = this.computeValue_(true)\n\n        const changed =\n            wasSuspended ||\n            isCaughtException(oldValue) ||\n            isCaughtException(newValue) ||\n            !this.equals_(oldValue, newValue)\n\n        if (changed) {\n            this.value_ = newValue\n\n            if (__DEV__ && isSpyEnabled()) {\n                spyReport({\n                    observableKind: \"computed\",\n                    debugObjectName: this.name_,\n                    object: this.scope_,\n                    type: \"update\",\n                    oldValue,\n                    newValue\n                } as IComputedDidChange)\n            }\n        }\n\n        return changed\n    }\n\n    computeValue_(track: boolean) {\n        this.isComputing_ = true\n        // don't allow state changes during computation\n        const prev = allowStateChangesStart(false)\n        let res: T | CaughtException\n        if (track) {\n            res = trackDerivedFunction(this, this.derivation, this.scope_)\n        } else {\n            if (globalState.disableErrorBoundaries === true) {\n                res = this.derivation.call(this.scope_)\n            } else {\n                try {\n                    res = this.derivation.call(this.scope_)\n                } catch (e) {\n                    res = new CaughtException(e)\n                }\n            }\n        }\n        allowStateChangesEnd(prev)\n        this.isComputing_ = false\n        return res\n    }\n\n    suspend_() {\n        if (!this.keepAlive_) {\n            clearObserving(this)\n            this.value_ = undefined // don't hold on to computed value!\n            if (__DEV__ && this.isTracing_ !== TraceMode.NONE) {\n                console.log(\n                    `[mobx.trace] Computed value '${this.name_}' was suspended and it will recompute on the next access.`\n                )\n            }\n        }\n    }\n\n    observe_(listener: (change: IComputedDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        let firstTime = true\n        let prevValue: T | undefined = undefined\n        return autorun(() => {\n            // TODO: why is this in a different place than the spyReport() function? in all other observables it's called in the same place\n            let newValue = this.get()\n            if (!firstTime || fireImmediately) {\n                const prevU = untrackedStart()\n                listener({\n                    observableKind: \"computed\",\n                    debugObjectName: this.name_,\n                    type: UPDATE,\n                    object: this,\n                    newValue,\n                    oldValue: prevValue\n                })\n                untrackedEnd(prevU)\n            }\n            firstTime = false\n            prevValue = newValue\n        })\n    }\n\n    warnAboutUntrackedRead_() {\n        if (!__DEV__) {\n            return\n        }\n        if (this.isTracing_ !== TraceMode.NONE) {\n            console.log(\n                `[mobx.trace] Computed value '${this.name_}' is being read outside a reactive context. Doing a full recompute.`\n            )\n        }\n        if (\n            typeof this.requiresReaction_ === \"boolean\"\n                ? this.requiresReaction_\n                : globalState.computedRequiresReaction\n        ) {\n            console.warn(\n                `[mobx] Computed value '${this.name_}' is being read outside a reactive context. Doing a full recompute.`\n            )\n        }\n    }\n\n    toString() {\n        return `${this.name_}[${this.derivation.toString()}]`\n    }\n\n    valueOf(): T {\n        return toPrimitive(this.get())\n    }\n\n    [Symbol.toPrimitive]() {\n        return this.valueOf()\n    }\n}\n\nexport const isComputedValue = createInstanceofPredicate(\"ComputedValue\", ComputedValue)\n","import {\n    Lambda,\n    ComputedValue,\n    IDependencyTree,\n    IDerivation,\n    IDerivationState_,\n    TraceMode,\n    getDependencyTree,\n    globalState,\n    runReactions,\n    checkIfStateReadsAreAllowed\n} from \"../internal\"\n\nexport interface IDepTreeNode {\n    name_: string\n    observing_?: IObservable[]\n}\n\nexport interface IObservable extends IDepTreeNode {\n    diffValue_: number\n    /**\n     * Id of the derivation *run* that last accessed this observable.\n     * If this id equals the *run* id of the current derivation,\n     * the dependency is already established\n     */\n    lastAccessedBy_: number\n    isBeingObserved_: boolean\n\n    lowestObserverState_: IDerivationState_ // Used to avoid redundant propagations\n    isPendingUnobservation_: boolean // Used to push itself to global.pendingUnobservations at most once per batch.\n\n    observers_: Set<IDerivation>\n\n    onBUO(): void\n    onBO(): void\n\n    onBUOL: Set<Lambda> | undefined\n    onBOL: Set<Lambda> | undefined\n}\n\nexport function hasObservers(observable: IObservable): boolean {\n    return observable.observers_ && observable.observers_.size > 0\n}\n\nexport function getObservers(observable: IObservable): Set<IDerivation> {\n    return observable.observers_\n}\n\n// function invariantObservers(observable: IObservable) {\n//     const list = observable.observers\n//     const map = observable.observersIndexes\n//     const l = list.length\n//     for (let i = 0; i < l; i++) {\n//         const id = list[i].__mapid\n//         if (i) {\n//             invariant(map[id] === i, \"INTERNAL ERROR maps derivation.__mapid to index in list\") // for performance\n//         } else {\n//             invariant(!(id in map), \"INTERNAL ERROR observer on index 0 shouldn't be held in map.\") // for performance\n//         }\n//     }\n//     invariant(\n//         list.length === 0 || Object.keys(map).length === list.length - 1,\n//         \"INTERNAL ERROR there is no junk in map\"\n//     )\n// }\nexport function addObserver(observable: IObservable, node: IDerivation) {\n    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n    // invariantObservers(observable);\n\n    observable.observers_.add(node)\n    if (observable.lowestObserverState_ > node.dependenciesState_) {\n        observable.lowestObserverState_ = node.dependenciesState_\n    }\n\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n}\n\nexport function removeObserver(observable: IObservable, node: IDerivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n    // invariantObservers(observable);\n    observable.observers_.delete(node)\n    if (observable.observers_.size === 0) {\n        // deleting last observer\n        queueForUnobservation(observable)\n    }\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n}\n\nexport function queueForUnobservation(observable: IObservable) {\n    if (observable.isPendingUnobservation_ === false) {\n        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n        observable.isPendingUnobservation_ = true\n        globalState.pendingUnobservations.push(observable)\n    }\n}\n\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\nexport function startBatch() {\n    globalState.inBatch++\n}\n\nexport function endBatch() {\n    if (--globalState.inBatch === 0) {\n        runReactions()\n        // the batch is actually about to finish, all unobserving should happen here.\n        const list = globalState.pendingUnobservations\n        for (let i = 0; i < list.length; i++) {\n            const observable = list[i]\n            observable.isPendingUnobservation_ = false\n            if (observable.observers_.size === 0) {\n                if (observable.isBeingObserved_) {\n                    // if this observable had reactive observers, trigger the hooks\n                    observable.isBeingObserved_ = false\n                    observable.onBUO()\n                }\n                if (observable instanceof ComputedValue) {\n                    // computed values are automatically teared down when the last observer leaves\n                    // this process happens recursively, this computed might be the last observabe of another, etc..\n                    observable.suspend_()\n                }\n            }\n        }\n        globalState.pendingUnobservations = []\n    }\n}\n\nexport function reportObserved(observable: IObservable): boolean {\n    checkIfStateReadsAreAllowed(observable)\n\n    const derivation = globalState.trackingDerivation\n    if (derivation !== null) {\n        /**\n         * Simple optimization, give each derivation run an unique id (runId)\n         * Check if last time this observable was accessed the same runId is used\n         * if this is the case, the relation is already known\n         */\n        if (derivation.runId_ !== observable.lastAccessedBy_) {\n            observable.lastAccessedBy_ = derivation.runId_\n            // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...\n            derivation.newObserving_![derivation.unboundDepsCount_++] = observable\n            if (!observable.isBeingObserved_ && globalState.trackingContext) {\n                observable.isBeingObserved_ = true\n                observable.onBO()\n            }\n        }\n        return true\n    } else if (observable.observers_.size === 0 && globalState.inBatch > 0) {\n        queueForUnobservation(observable)\n    }\n\n    return false\n}\n\n// function invariantLOS(observable: IObservable, msg: string) {\n//     // it's expensive so better not run it in produciton. but temporarily helpful for testing\n//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)\n//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`\n//     throw new Error(\n//         \"lowestObserverState is wrong for \" +\n//             msg +\n//             \" because \" +\n//             min +\n//             \" < \" +\n//             observable.lowestObserverState\n//     )\n// }\n\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n\n// Called by Atom when its value changes\nexport function propagateChanged(observable: IObservable) {\n    // invariantLOS(observable, \"changed start\");\n    if (observable.lowestObserverState_ === IDerivationState_.STALE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.STALE_\n\n    // Ideally we use for..of here, but the downcompiled version is really slow...\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n            if (__DEV__ && d.isTracing_ !== TraceMode.NONE) {\n                logTraceInfo(d, observable)\n            }\n            d.onBecomeStale_()\n        }\n        d.dependenciesState_ = IDerivationState_.STALE_\n    })\n    // invariantLOS(observable, \"changed end\");\n}\n\n// Called by ComputedValue when it recalculate and its value changed\nexport function propagateChangeConfirmed(observable: IObservable) {\n    // invariantLOS(observable, \"confirmed start\");\n    if (observable.lowestObserverState_ === IDerivationState_.STALE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.STALE_\n\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {\n            d.dependenciesState_ = IDerivationState_.STALE_\n            if (__DEV__ && d.isTracing_ !== TraceMode.NONE) {\n                logTraceInfo(d, observable)\n            }\n        } else if (\n            d.dependenciesState_ === IDerivationState_.UP_TO_DATE_ // this happens during computing of `d`, just keep lowestObserverState up to date.\n        ) {\n            observable.lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n        }\n    })\n    // invariantLOS(observable, \"confirmed end\");\n}\n\n// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\nexport function propagateMaybeChanged(observable: IObservable) {\n    // invariantLOS(observable, \"maybe start\");\n    if (observable.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_\n\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n            d.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_\n            d.onBecomeStale_()\n        }\n    })\n    // invariantLOS(observable, \"maybe end\");\n}\n\nfunction logTraceInfo(derivation: IDerivation, observable: IObservable) {\n    console.log(\n        `[mobx.trace] '${derivation.name_}' is invalidated due to a change in: '${observable.name_}'`\n    )\n    if (derivation.isTracing_ === TraceMode.BREAK) {\n        const lines = []\n        printDepTree(getDependencyTree(derivation), lines, 1)\n\n        // prettier-ignore\n        new Function(\n`debugger;\n/*\nTracing '${derivation.name_}'\n\nYou are entering this break point because derivation '${derivation.name_}' is being traced and '${observable.name_}' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n${derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\\//g, \"/\") : \"\"}\n\nThe dependencies for this derivation are:\n\n${lines.join(\"\\n\")}\n*/\n    `)()\n    }\n}\n\nfunction printDepTree(tree: IDependencyTree, lines: string[], depth: number) {\n    if (lines.length >= 1000) {\n        lines.push(\"(and many more)\")\n        return\n    }\n    lines.push(`${\"\\t\".repeat(depth - 1)}${tree.name}`)\n    if (tree.dependencies) {\n        tree.dependencies.forEach(child => printDepTree(child, lines, depth + 1))\n    }\n}\n","import { IDerivation, IObservable, Reaction, die, getGlobal } from \"../internal\"\nimport { ComputedValue } from \"./computedvalue\"\n\n/**\n * These values will persist if global state is reset\n */\nconst persistentKeys: (keyof MobXGlobals)[] = [\n    \"mobxGuid\",\n    \"spyListeners\",\n    \"enforceActions\",\n    \"computedRequiresReaction\",\n    \"reactionRequiresObservable\",\n    \"observableRequiresReaction\",\n    \"allowStateReads\",\n    \"disableErrorBoundaries\",\n    \"runId\",\n    \"UNCHANGED\",\n    \"useProxies\"\n]\n\nexport type IUNCHANGED = {}\n\nexport class MobXGlobals {\n    /**\n     * MobXGlobals version.\n     * MobX compatiblity with other versions loaded in memory as long as this version matches.\n     * It indicates that the global state still stores similar information\n     *\n     * N.B: this version is unrelated to the package version of MobX, and is only the version of the\n     * internal state storage of MobX, and can be the same across many different package versions\n     */\n    version = 6\n\n    /**\n     * globally unique token to signal unchanged\n     */\n    UNCHANGED: IUNCHANGED = {}\n\n    /**\n     * Currently running derivation\n     */\n    trackingDerivation: IDerivation | null = null\n\n    /**\n     * Currently running reaction. This determines if we currently have a reactive context.\n     * (Tracking derivation is also set for temporal tracking of computed values inside actions,\n     * but trackingReaction can only be set by a form of Reaction)\n     */\n    trackingContext: Reaction | ComputedValue<any> | null = null\n\n    /**\n     * Each time a derivation is tracked, it is assigned a unique run-id\n     */\n    runId = 0\n\n    /**\n     * 'guid' for general purpose. Will be persisted amongst resets.\n     */\n    mobxGuid = 0\n\n    /**\n     * Are we in a batch block? (and how many of them)\n     */\n    inBatch: number = 0\n\n    /**\n     * Observables that don't have observers anymore, and are about to be\n     * suspended, unless somebody else accesses it in the same batch\n     *\n     * @type {IObservable[]}\n     */\n    pendingUnobservations: IObservable[] = []\n\n    /**\n     * List of scheduled, not yet executed, reactions.\n     */\n    pendingReactions: Reaction[] = []\n\n    /**\n     * Are we currently processing reactions?\n     */\n    isRunningReactions = false\n\n    /**\n     * Is it allowed to change observables at this point?\n     * In general, MobX doesn't allow that when running computations and React.render.\n     * To ensure that those functions stay pure.\n     */\n    allowStateChanges = false\n\n    /**\n     * Is it allowed to read observables at this point?\n     * Used to hold the state needed for `observableRequiresReaction`\n     */\n    allowStateReads = true\n\n    /**\n     * If strict mode is enabled, state changes are by default not allowed\n     */\n    enforceActions: boolean | \"always\" = true\n\n    /**\n     * Spy callbacks\n     */\n    spyListeners: { (change: any): void }[] = []\n\n    /**\n     * Globally attached error handlers that react specifically to errors in reactions\n     */\n    globalReactionErrorHandlers: ((error: any, derivation: IDerivation) => void)[] = []\n\n    /**\n     * Warn if computed values are accessed outside a reactive context\n     */\n    computedRequiresReaction = false\n\n    /**\n     * (Experimental)\n     * Warn if you try to create to derivation / reactive context without accessing any observable.\n     */\n    reactionRequiresObservable = false\n\n    /**\n     * (Experimental)\n     * Warn if observables are accessed outside a reactive context\n     */\n    observableRequiresReaction = false\n\n    /*\n     * Don't catch and rethrow exceptions. This is useful for inspecting the state of\n     * the stack when an exception occurs while debugging.\n     */\n    disableErrorBoundaries = false\n\n    /*\n     * If true, we are already handling an exception in an action. Any errors in reactions should be suppressed, as\n     * they are not the cause, see: https://github.com/mobxjs/mobx/issues/1836\n     */\n    suppressReactionErrors = false\n\n    useProxies = true\n    /*\n     * print warnings about code that would fail if proxies weren't available\n     */\n    verifyProxies = false\n\n    /**\n     * False forces all object's descriptors to\n     * writable: true\n     * configurable: true\n     */\n    safeDescriptors = true\n}\n\nlet canMergeGlobalState = true\nlet isolateCalled = false\n\nexport let globalState: MobXGlobals = (function () {\n    let global = getGlobal()\n    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals) {\n        canMergeGlobalState = false\n    }\n    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version) {\n        canMergeGlobalState = false\n    }\n\n    if (!canMergeGlobalState) {\n        // Because this is a IIFE we need to let isolateCalled a chance to change\n        // so we run it after the event loop completed at least 1 iteration\n        setTimeout(() => {\n            if (!isolateCalled) {\n                die(35)\n            }\n        }, 1)\n        return new MobXGlobals()\n    } else if (global.__mobxGlobals) {\n        global.__mobxInstanceCount += 1\n        if (!global.__mobxGlobals.UNCHANGED) {\n            global.__mobxGlobals.UNCHANGED = {}\n        } // make merge backward compatible\n        return global.__mobxGlobals\n    } else {\n        global.__mobxInstanceCount = 1\n        return (global.__mobxGlobals = new MobXGlobals())\n    }\n})()\n\nexport function isolateGlobalState() {\n    if (\n        globalState.pendingReactions.length ||\n        globalState.inBatch ||\n        globalState.isRunningReactions\n    ) {\n        die(36)\n    }\n    isolateCalled = true\n    if (canMergeGlobalState) {\n        let global = getGlobal()\n        if (--global.__mobxInstanceCount === 0) {\n            global.__mobxGlobals = undefined\n        }\n        globalState = new MobXGlobals()\n    }\n}\n\nexport function getGlobalState(): any {\n    return globalState\n}\n\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\nexport function resetGlobalState() {\n    const defaultGlobals = new MobXGlobals()\n    for (let key in defaultGlobals) {\n        if (persistentKeys.indexOf(key as any) === -1) {\n            globalState[key] = defaultGlobals[key]\n        }\n    }\n    globalState.allowStateChanges = !globalState.enforceActions\n}\n","import {\n    $mobx,\n    IDerivation,\n    IDerivationState_,\n    IObservable,\n    Lambda,\n    TraceMode,\n    clearObserving,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    globalState,\n    isCaughtException,\n    isSpyEnabled,\n    shouldCompute,\n    spyReport,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    trace,\n    trackDerivedFunction\n} from \"../internal\"\n\n/**\n * Reactions are a special kind of derivations. Several things distinguishes them from normal reactive computations\n *\n * 1) They will always run, whether they are used by other computations or not.\n * This means that they are very suitable for triggering side effects like logging, updating the DOM and making network requests.\n * 2) They are not observable themselves\n * 3) They will always run after any 'normal' derivations\n * 4) They are allowed to change the state and thereby triggering themselves again, as long as they make sure the state propagates to a stable state in a reasonable amount of iterations.\n *\n * The state machine of a Reaction is as follows:\n *\n * 1) after creating, the reaction should be started by calling `runReaction` or by scheduling it (see also `autorun`)\n * 2) the `onInvalidate` handler should somehow result in a call to `this.track(someFunction)`\n * 3) all observables accessed in `someFunction` will be observed by this reaction.\n * 4) as soon as some of the dependencies has changed the Reaction will be rescheduled for another run (after the current mutation or transaction). `isScheduled` will yield true once a dependency is stale and during this period\n * 5) `onInvalidate` will be called, and we are back at step 1.\n *\n */\n\nexport interface IReactionPublic {\n    dispose(): void\n    trace(enterBreakPoint?: boolean): void\n}\n\nexport interface IReactionDisposer {\n    (): void\n    $mobx: Reaction\n}\n\nexport class Reaction implements IDerivation, IReactionPublic {\n    observing_: IObservable[] = [] // nodes we are looking at. Our value depends on these nodes\n    newObserving_: IObservable[] = []\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_\n    diffValue_ = 0\n    runId_ = 0\n    unboundDepsCount_ = 0\n    isDisposed_ = false\n    isScheduled_ = false\n    isTrackPending_ = false\n    isRunning_ = false\n    isTracing_: TraceMode = TraceMode.NONE\n\n    constructor(\n        public name_: string = __DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\",\n        private onInvalidate_: () => void,\n        private errorHandler_?: (error: any, derivation: IDerivation) => void,\n        public requiresObservable_?\n    ) {}\n\n    onBecomeStale_() {\n        this.schedule_()\n    }\n\n    schedule_() {\n        if (!this.isScheduled_) {\n            this.isScheduled_ = true\n            globalState.pendingReactions.push(this)\n            runReactions()\n        }\n    }\n\n    isScheduled() {\n        return this.isScheduled_\n    }\n\n    /**\n     * internal, use schedule() if you intend to kick off a reaction\n     */\n    runReaction_() {\n        if (!this.isDisposed_) {\n            startBatch()\n            this.isScheduled_ = false\n            const prev = globalState.trackingContext\n            globalState.trackingContext = this\n            if (shouldCompute(this)) {\n                this.isTrackPending_ = true\n\n                try {\n                    this.onInvalidate_()\n                    if (__DEV__ && this.isTrackPending_ && isSpyEnabled()) {\n                        // onInvalidate didn't trigger track right away..\n                        spyReport({\n                            name: this.name_,\n                            type: \"scheduled-reaction\"\n                        })\n                    }\n                } catch (e) {\n                    this.reportExceptionInDerivation_(e)\n                }\n            }\n            globalState.trackingContext = prev\n            endBatch()\n        }\n    }\n\n    track(fn: () => void) {\n        if (this.isDisposed_) {\n            return\n            // console.warn(\"Reaction already disposed\") // Note: Not a warning / error in mobx 4 either\n        }\n        startBatch()\n        const notify = isSpyEnabled()\n        let startTime\n        if (__DEV__ && notify) {\n            startTime = Date.now()\n            spyReportStart({\n                name: this.name_,\n                type: \"reaction\"\n            })\n        }\n        this.isRunning_ = true\n        const prevReaction = globalState.trackingContext // reactions could create reactions...\n        globalState.trackingContext = this\n        const result = trackDerivedFunction(this, fn, undefined)\n        globalState.trackingContext = prevReaction\n        this.isRunning_ = false\n        this.isTrackPending_ = false\n        if (this.isDisposed_) {\n            // disposed during last run. Clean up everything that was bound after the dispose call.\n            clearObserving(this)\n        }\n        if (isCaughtException(result)) {\n            this.reportExceptionInDerivation_(result.cause)\n        }\n        if (__DEV__ && notify) {\n            spyReportEnd({\n                time: Date.now() - startTime\n            })\n        }\n        endBatch()\n    }\n\n    reportExceptionInDerivation_(error: any) {\n        if (this.errorHandler_) {\n            this.errorHandler_(error, this)\n            return\n        }\n\n        if (globalState.disableErrorBoundaries) {\n            throw error\n        }\n\n        const message = __DEV__\n            ? `[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '${this}'`\n            : `[mobx] uncaught error in '${this}'`\n        if (!globalState.suppressReactionErrors) {\n            console.error(message, error)\n            /** If debugging brought you here, please, read the above message :-). Tnx! */\n        } else if (__DEV__) { console.warn(`[mobx] (error in reaction '${this.name_}' suppressed, fix error of causing action below)`) } // prettier-ignore\n\n        if (__DEV__ && isSpyEnabled()) {\n            spyReport({\n                type: \"error\",\n                name: this.name_,\n                message,\n                error: \"\" + error\n            })\n        }\n\n        globalState.globalReactionErrorHandlers.forEach(f => f(error, this))\n    }\n\n    dispose() {\n        if (!this.isDisposed_) {\n            this.isDisposed_ = true\n            if (!this.isRunning_) {\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\n                startBatch()\n                clearObserving(this)\n                endBatch()\n            }\n        }\n    }\n\n    getDisposer_(): IReactionDisposer {\n        const r = this.dispose.bind(this) as IReactionDisposer\n        r[$mobx] = this\n        return r\n    }\n\n    toString() {\n        return `Reaction[${this.name_}]`\n    }\n\n    trace(enterBreakPoint: boolean = false) {\n        trace(this, enterBreakPoint)\n    }\n}\n\nexport function onReactionError(handler: (error: any, derivation: IDerivation) => void): Lambda {\n    globalState.globalReactionErrorHandlers.push(handler)\n    return () => {\n        const idx = globalState.globalReactionErrorHandlers.indexOf(handler)\n        if (idx >= 0) {\n            globalState.globalReactionErrorHandlers.splice(idx, 1)\n        }\n    }\n}\n\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\nconst MAX_REACTION_ITERATIONS = 100\n\nlet reactionScheduler: (fn: () => void) => void = f => f()\n\nexport function runReactions() {\n    // Trampolining, if runReactions are already running, new reactions will be picked up\n    if (globalState.inBatch > 0 || globalState.isRunningReactions) {\n        return\n    }\n    reactionScheduler(runReactionsHelper)\n}\n\nfunction runReactionsHelper() {\n    globalState.isRunningReactions = true\n    const allReactions = globalState.pendingReactions\n    let iterations = 0\n\n    // While running reactions, new reactions might be triggered.\n    // Hence we work with two variables and check whether\n    // we converge to no remaining reactions after a while.\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS) {\n            console.error(\n                __DEV__\n                    ? `Reaction doesn't converge to a stable state after ${MAX_REACTION_ITERATIONS} iterations.` +\n                          ` Probably there is a cycle in the reactive function: ${allReactions[0]}`\n                    : `[mobx] cycle in reaction: ${allReactions[0]}`\n            )\n            allReactions.splice(0) // clear reactions\n        }\n        let remainingReactions = allReactions.splice(0)\n        for (let i = 0, l = remainingReactions.length; i < l; i++) {\n            remainingReactions[i].runReaction_()\n        }\n    }\n    globalState.isRunningReactions = false\n}\n\nexport const isReaction = createInstanceofPredicate(\"Reaction\", Reaction)\n\nexport function setReactionScheduler(fn: (f: () => void) => void) {\n    const baseScheduler = reactionScheduler\n    reactionScheduler = f => fn(() => baseScheduler(f))\n}\n","import { TraceMode, die, getAtom, globalState } from \"../internal\"\n\nexport function trace(thing?: any, prop?: string, enterBreakPoint?: boolean): void\nexport function trace(thing?: any, enterBreakPoint?: boolean): void\nexport function trace(enterBreakPoint?: boolean): void\nexport function trace(...args: any[]): void {\n    if (!__DEV__) {\n        die(`trace() is not available in production builds`)\n    }\n    let enterBreakPoint = false\n    if (typeof args[args.length - 1] === \"boolean\") {\n        enterBreakPoint = args.pop()\n    }\n    const derivation = getAtomFromArgs(args)\n    if (!derivation) {\n        return die(\n            `'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly`\n        )\n    }\n    if (derivation.isTracing_ === TraceMode.NONE) {\n        console.log(`[mobx.trace] '${derivation.name_}' tracing enabled`)\n    }\n    derivation.isTracing_ = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG\n}\n\nfunction getAtomFromArgs(args): any {\n    switch (args.length) {\n        case 0:\n            return globalState.trackingDerivation\n        case 1:\n            return getAtom(args[0])\n        case 2:\n            return getAtom(args[0], args[1])\n    }\n}\n","import {\n    createAction,\n    executeAction,\n    Annotation,\n    storeAnnotation,\n    die,\n    isFunction,\n    isStringish,\n    createDecoratorAnnotation,\n    createActionAnnotation\n} from \"../internal\"\n\nexport const ACTION = \"action\"\nexport const ACTION_BOUND = \"action.bound\"\nexport const AUTOACTION = \"autoAction\"\nexport const AUTOACTION_BOUND = \"autoAction.bound\"\n\nconst DEFAULT_ACTION_NAME = \"<unnamed action>\"\n\nconst actionAnnotation = createActionAnnotation(ACTION)\nconst actionBoundAnnotation = createActionAnnotation(ACTION_BOUND, {\n    bound: true\n})\nconst autoActionAnnotation = createActionAnnotation(AUTOACTION, {\n    autoAction: true\n})\nconst autoActionBoundAnnotation = createActionAnnotation(AUTOACTION_BOUND, {\n    autoAction: true,\n    bound: true\n})\n\nexport interface IActionFactory extends Annotation, PropertyDecorator {\n    // nameless actions\n    <T extends Function | undefined | null>(fn: T): T\n    // named actions\n    <T extends Function | undefined | null>(name: string, fn: T): T\n\n    // named decorator\n    (customName: string): PropertyDecorator & Annotation\n\n    // decorator (name no longer supported)\n    bound: Annotation & PropertyDecorator\n}\n\nfunction createActionFactory(autoAction: boolean): IActionFactory {\n    const res: IActionFactory = function action(arg1, arg2?): any {\n        // action(fn() {})\n        if (isFunction(arg1)) {\n            return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction)\n        }\n        // action(\"name\", fn() {})\n        if (isFunction(arg2)) {\n            return createAction(arg1, arg2, autoAction)\n        }\n        // @action\n        if (isStringish(arg2)) {\n            return storeAnnotation(arg1, arg2, autoAction ? autoActionAnnotation : actionAnnotation)\n        }\n        // action(\"name\") & @action(\"name\")\n        if (isStringish(arg1)) {\n            return createDecoratorAnnotation(\n                createActionAnnotation(autoAction ? AUTOACTION : ACTION, {\n                    name: arg1,\n                    autoAction\n                })\n            )\n        }\n\n        if (__DEV__) {\n            die(\"Invalid arguments for `action`\")\n        }\n    } as IActionFactory\n    return res\n}\n\nexport const action: IActionFactory = createActionFactory(false)\nObject.assign(action, actionAnnotation)\nexport const autoAction: IActionFactory = createActionFactory(true)\nObject.assign(autoAction, autoActionAnnotation)\n\naction.bound = createDecoratorAnnotation(actionBoundAnnotation)\nautoAction.bound = createDecoratorAnnotation(autoActionBoundAnnotation)\n\nexport function runInAction<T>(fn: () => T): T {\n    return executeAction(fn.name || DEFAULT_ACTION_NAME, false, fn, this, undefined)\n}\n\nexport function isAction(thing: any) {\n    return isFunction(thing) && thing.isMobxAction === true\n}\n","import {\n    EMPTY_OBJECT,\n    IEqualsComparer,\n    IReactionDisposer,\n    IReactionPublic,\n    Lambda,\n    Reaction,\n    action,\n    comparer,\n    getNextId,\n    isAction,\n    isFunction,\n    isPlainObject,\n    die,\n    allowStateChanges\n} from \"../internal\"\n\nexport interface IAutorunOptions {\n    delay?: number\n    name?: string\n    /**\n     * Experimental.\n     * Warns if the view doesn't track observables\n     */\n    requiresObservable?: boolean\n    scheduler?: (callback: () => void) => any\n    onError?: (error: any) => void\n}\n\n/**\n * Creates a named reactive view and keeps it alive, so that the view is always\n * updated if one of the dependencies changes, even when the view is not further used by something else.\n * @param view The reactive view\n * @returns disposer function, which can be used to stop the view from being updated in the future.\n */\nexport function autorun(\n    view: (r: IReactionPublic) => any,\n    opts: IAutorunOptions = EMPTY_OBJECT\n): IReactionDisposer {\n    if (__DEV__) {\n        if (!isFunction(view)) {\n            die(\"Autorun expects a function as first argument\")\n        }\n        if (isAction(view)) {\n            die(\"Autorun does not accept actions since actions are untrackable\")\n        }\n    }\n\n    const name: string =\n        opts?.name ?? (__DEV__ ? (view as any).name || \"Autorun@\" + getNextId() : \"Autorun\")\n    const runSync = !opts.scheduler && !opts.delay\n    let reaction: Reaction\n\n    if (runSync) {\n        // normal autorun\n        reaction = new Reaction(\n            name,\n            function (this: Reaction) {\n                this.track(reactionRunner)\n            },\n            opts.onError,\n            opts.requiresObservable\n        )\n    } else {\n        const scheduler = createSchedulerFromOptions(opts)\n        // debounced autorun\n        let isScheduled = false\n\n        reaction = new Reaction(\n            name,\n            () => {\n                if (!isScheduled) {\n                    isScheduled = true\n                    scheduler(() => {\n                        isScheduled = false\n                        if (!reaction.isDisposed_) {\n                            reaction.track(reactionRunner)\n                        }\n                    })\n                }\n            },\n            opts.onError,\n            opts.requiresObservable\n        )\n    }\n\n    function reactionRunner() {\n        view(reaction)\n    }\n\n    reaction.schedule_()\n    return reaction.getDisposer_()\n}\n\nexport type IReactionOptions<T, FireImmediately extends boolean> = IAutorunOptions & {\n    fireImmediately?: FireImmediately\n    equals?: IEqualsComparer<T>\n}\n\nconst run = (f: Lambda) => f()\n\nfunction createSchedulerFromOptions(opts: IAutorunOptions) {\n    return opts.scheduler\n        ? opts.scheduler\n        : opts.delay\n        ? (f: Lambda) => setTimeout(f, opts.delay!)\n        : run\n}\n\nexport function reaction<T, FireImmediately extends boolean = false>(\n    expression: (r: IReactionPublic) => T,\n    effect: (\n        arg: T,\n        prev: FireImmediately extends true ? T | undefined : T,\n        r: IReactionPublic\n    ) => void,\n    opts: IReactionOptions<T, FireImmediately> = EMPTY_OBJECT\n): IReactionDisposer {\n    if (__DEV__) {\n        if (!isFunction(expression) || !isFunction(effect)) {\n            die(\"First and second argument to reaction should be functions\")\n        }\n        if (!isPlainObject(opts)) {\n            die(\"Third argument of reactions should be an object\")\n        }\n    }\n    const name = opts.name ?? (__DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\")\n    const effectAction = action(\n        name,\n        opts.onError ? wrapErrorHandler(opts.onError, effect) : effect\n    )\n    const runSync = !opts.scheduler && !opts.delay\n    const scheduler = createSchedulerFromOptions(opts)\n\n    let firstTime = true\n    let isScheduled = false\n    let value: T\n    let oldValue: T | undefined\n\n    const equals: IEqualsComparer<T> = (opts as any).compareStructural\n        ? comparer.structural\n        : opts.equals || comparer.default\n\n    const r = new Reaction(\n        name,\n        () => {\n            if (firstTime || runSync) {\n                reactionRunner()\n            } else if (!isScheduled) {\n                isScheduled = true\n                scheduler!(reactionRunner)\n            }\n        },\n        opts.onError,\n        opts.requiresObservable\n    )\n\n    function reactionRunner() {\n        isScheduled = false\n        if (r.isDisposed_) {\n            return\n        }\n        let changed: boolean = false\n        r.track(() => {\n            const nextValue = allowStateChanges(false, () => expression(r))\n            changed = firstTime || !equals(value, nextValue)\n            oldValue = value\n            value = nextValue\n        })\n\n        // This casting is nesessary as TS cannot infer proper type in current funciton implementation\n        type OldValue = FireImmediately extends true ? T | undefined : T\n        if (firstTime && opts.fireImmediately!) {\n            effectAction(value, oldValue as OldValue, r)\n        } else if (!firstTime && changed) {\n            effectAction(value, oldValue as OldValue, r)\n        }\n        firstTime = false\n    }\n\n    r.schedule_()\n    return r.getDisposer_()\n}\n\nfunction wrapErrorHandler(errorHandler, baseFn) {\n    return function () {\n        try {\n            return baseFn.apply(this, arguments)\n        } catch (e) {\n            errorHandler.call(this, e)\n        }\n    }\n}\n","import {\n    CreateObservableOptions,\n    isObservableMap,\n    AnnotationsMap,\n    startBatch,\n    endBatch,\n    asObservableObject,\n    isPlainObject,\n    ObservableObjectAdministration,\n    isObservable,\n    die,\n    getOwnPropertyDescriptors,\n    $mobx,\n    ownKeys\n} from \"../internal\"\n\nexport function extendObservable<A extends Object, B extends Object>(\n    target: A,\n    properties: B,\n    annotations?: AnnotationsMap<B, never>,\n    options?: CreateObservableOptions\n): A & B {\n    if (__DEV__) {\n        if (arguments.length > 4) {\n            die(\"'extendObservable' expected 2-4 arguments\")\n        }\n        if (typeof target !== \"object\") {\n            die(\"'extendObservable' expects an object as first argument\")\n        }\n        if (isObservableMap(target)) {\n            die(\"'extendObservable' should not be used on maps, use map.merge instead\")\n        }\n        if (!isPlainObject(properties)) {\n            die(`'extendObservable' only accepts plain objects as second argument`)\n        }\n        if (isObservable(properties) || isObservable(annotations)) {\n            die(`Extending an object with another observable (object) is not supported`)\n        }\n    }\n    // Pull descriptors first, so we don't have to deal with props added by administration ($mobx)\n    const descriptors = getOwnPropertyDescriptors(properties)\n\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n    startBatch()\n    try {\n        ownKeys(descriptors).forEach(key => {\n            adm.extend_(\n                key,\n                descriptors[key as any],\n                // must pass \"undefined\" for { key: undefined }\n                !annotations ? true : key in annotations ? annotations[key] : true\n            )\n        })\n    } finally {\n        endBatch()\n    }\n    return target as any\n}\n","import {\n    action,\n    noop,\n    die,\n    isFunction,\n    Annotation,\n    isStringish,\n    storeAnnotation,\n    createFlowAnnotation,\n    createDecoratorAnnotation\n} from \"../internal\"\n\nexport const FLOW = \"flow\"\n\nlet generatorId = 0\n\nexport function FlowCancellationError() {\n    this.message = \"FLOW_CANCELLED\"\n}\nFlowCancellationError.prototype = Object.create(Error.prototype)\n\nexport function isFlowCancellationError(error: Error) {\n    return error instanceof FlowCancellationError\n}\n\nexport type CancellablePromise<T> = Promise<T> & { cancel(): void }\n\ninterface Flow extends Annotation, PropertyDecorator {\n    <R, Args extends any[]>(\n        generator: (...args: Args) => Generator<any, R, any> | AsyncGenerator<any, R, any>\n    ): (...args: Args) => CancellablePromise<R>\n    bound: Annotation & PropertyDecorator\n}\n\nconst flowAnnotation = createFlowAnnotation(\"flow\")\nconst flowBoundAnnotation = createFlowAnnotation(\"flow.bound\", { bound: true })\n\nexport const flow: Flow = Object.assign(\n    function flow(arg1, arg2?) {\n        // @flow\n        if (isStringish(arg2)) {\n            return storeAnnotation(arg1, arg2, flowAnnotation)\n        }\n        // flow(fn)\n        if (__DEV__ && arguments.length !== 1) {\n            die(`Flow expects single argument with generator function`)\n        }\n        const generator = arg1\n        const name = generator.name || \"<unnamed flow>\"\n\n        // Implementation based on https://github.com/tj/co/blob/master/index.js\n        const res = function () {\n            const ctx = this\n            const args = arguments\n            const runId = ++generatorId\n            const gen = action(`${name} - runid: ${runId} - init`, generator).apply(ctx, args)\n            let rejector: (error: any) => void\n            let pendingPromise: CancellablePromise<any> | undefined = undefined\n\n            const promise = new Promise(function (resolve, reject) {\n                let stepId = 0\n                rejector = reject\n\n                function onFulfilled(res: any) {\n                    pendingPromise = undefined\n                    let ret\n                    try {\n                        ret = action(\n                            `${name} - runid: ${runId} - yield ${stepId++}`,\n                            gen.next\n                        ).call(gen, res)\n                    } catch (e) {\n                        return reject(e)\n                    }\n\n                    next(ret)\n                }\n\n                function onRejected(err: any) {\n                    pendingPromise = undefined\n                    let ret\n                    try {\n                        ret = action(\n                            `${name} - runid: ${runId} - yield ${stepId++}`,\n                            gen.throw!\n                        ).call(gen, err)\n                    } catch (e) {\n                        return reject(e)\n                    }\n                    next(ret)\n                }\n\n                function next(ret: any) {\n                    if (isFunction(ret?.then)) {\n                        // an async iterator\n                        ret.then(next, reject)\n                        return\n                    }\n                    if (ret.done) {\n                        return resolve(ret.value)\n                    }\n                    pendingPromise = Promise.resolve(ret.value) as any\n                    return pendingPromise!.then(onFulfilled, onRejected)\n                }\n\n                onFulfilled(undefined) // kick off the process\n            }) as any\n\n            promise.cancel = action(`${name} - runid: ${runId} - cancel`, function () {\n                try {\n                    if (pendingPromise) {\n                        cancelPromise(pendingPromise)\n                    }\n                    // Finally block can return (or yield) stuff..\n                    const res = gen.return!(undefined as any)\n                    // eat anything that promise would do, it's cancelled!\n                    const yieldedPromise = Promise.resolve(res.value)\n                    yieldedPromise.then(noop, noop)\n                    cancelPromise(yieldedPromise) // maybe it can be cancelled :)\n                    // reject our original promise\n                    rejector(new FlowCancellationError())\n                } catch (e) {\n                    rejector(e) // there could be a throwing finally block\n                }\n            })\n            return promise\n        }\n        res.isMobXFlow = true\n        return res\n    } as any,\n    flowAnnotation\n)\n\nflow.bound = createDecoratorAnnotation(flowBoundAnnotation)\n\nfunction cancelPromise(promise) {\n    if (isFunction(promise.cancel)) {\n        promise.cancel()\n    }\n}\n\nexport function flowResult<T>(\n    result: T\n): T extends Generator<any, infer R, any>\n    ? CancellablePromise<R>\n    : T extends CancellablePromise<any>\n    ? T\n    : never {\n    return result as any // just tricking TypeScript :)\n}\n\nexport function isFlow(fn: any): boolean {\n    return fn?.isMobXFlow === true\n}\n","import {\n    IObservableArray,\n    IObservableValue,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isObservableValue,\n    ObservableSet,\n    die,\n    isStringish\n} from \"../internal\"\n\nexport type ReadInterceptor<T> = (value: any) => T\n\n/** Experimental feature right now, tested indirectly via Mobx-State-Tree */\nexport function interceptReads<T>(value: IObservableValue<T>, handler: ReadInterceptor<T>): Lambda\nexport function interceptReads<T>(\n    observableArray: IObservableArray<T>,\n    handler: ReadInterceptor<T>\n): Lambda\nexport function interceptReads<K, V>(\n    observableMap: ObservableMap<K, V>,\n    handler: ReadInterceptor<V>\n): Lambda\nexport function interceptReads<V>(\n    observableSet: ObservableSet<V>,\n    handler: ReadInterceptor<V>\n): Lambda\nexport function interceptReads(\n    object: Object,\n    property: string,\n    handler: ReadInterceptor<any>\n): Lambda\nexport function interceptReads(thing, propOrHandler?, handler?): Lambda {\n    let target\n    if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {\n        target = getAdministration(thing)\n    } else if (isObservableObject(thing)) {\n        if (__DEV__ && !isStringish(propOrHandler)) {\n            return die(\n                `InterceptReads can only be used with a specific property, not with an object in general`\n            )\n        }\n        target = getAdministration(thing, propOrHandler)\n    } else if (__DEV__) {\n        return die(`Expected observable map, object or array as first array`)\n    }\n    if (__DEV__ && target.dehancer !== undefined) {\n        return die(`An intercept reader was already established`)\n    }\n    target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler\n    return () => {\n        target.dehancer = undefined\n    }\n}\n","import {\n    IArrayWillChange,\n    IArrayWillSplice,\n    IInterceptor,\n    IMapWillChange,\n    IObjectWillChange,\n    IObservableArray,\n    IObservableValue,\n    IValueWillChange,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    ObservableSet,\n    ISetWillChange,\n    isFunction\n} from \"../internal\"\n\nexport function intercept<T>(\n    value: IObservableValue<T>,\n    handler: IInterceptor<IValueWillChange<T>>\n): Lambda\nexport function intercept<T>(\n    observableArray: IObservableArray<T> | Array<T>,\n    handler: IInterceptor<IArrayWillChange<T> | IArrayWillSplice<T>>\n): Lambda\nexport function intercept<K, V>(\n    observableMap: ObservableMap<K, V> | Map<K, V>,\n    handler: IInterceptor<IMapWillChange<K, V>>\n): Lambda\nexport function intercept<V>(\n    observableSet: ObservableSet<V> | Set<V>,\n    handler: IInterceptor<ISetWillChange<V>>\n): Lambda\nexport function intercept<K, V>(\n    observableMap: ObservableMap<K, V> | Map<K, V>,\n    property: K,\n    handler: IInterceptor<IValueWillChange<V>>\n): Lambda\nexport function intercept(object: object, handler: IInterceptor<IObjectWillChange>): Lambda\nexport function intercept<T extends object, K extends keyof T>(\n    object: T,\n    property: K,\n    handler: IInterceptor<IValueWillChange<T[K]>>\n): Lambda\nexport function intercept(thing, propOrHandler?, handler?): Lambda {\n    if (isFunction(handler)) {\n        return interceptProperty(thing, propOrHandler, handler)\n    } else {\n        return interceptInterceptable(thing, propOrHandler)\n    }\n}\n\nfunction interceptInterceptable(thing, handler) {\n    return getAdministration(thing).intercept_(handler)\n}\n\nfunction interceptProperty(thing, property, handler) {\n    return getAdministration(thing, property).intercept_(handler)\n}\n","import { $mobx, getAtom, isComputedValue, isObservableObject, die, isStringish } from \"../internal\"\n\nexport function _isComputed(value, property?: PropertyKey): boolean {\n    if (property === undefined) {\n        return isComputedValue(value)\n    }\n    if (isObservableObject(value) === false) {\n        return false\n    }\n    if (!value[$mobx].values_.has(property)) {\n        return false\n    }\n    const atom = getAtom(value, property)\n    return isComputedValue(atom)\n}\n\nexport function isComputed(value: any): boolean {\n    if (__DEV__ && arguments.length > 1) {\n        return die(\n            `isComputed expects only 1 argument. Use isComputedProp to inspect the observability of a property`\n        )\n    }\n    return _isComputed(value)\n}\n\nexport function isComputedProp(value: any, propName: PropertyKey): boolean {\n    if (__DEV__ && !isStringish(propName)) {\n        return die(`isComputed expected a property name as second argument`)\n    }\n    return _isComputed(value, propName)\n}\n","import {\n    $mobx,\n    isAtom,\n    isComputedValue,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isReaction,\n    die,\n    isStringish\n} from \"../internal\"\n\nfunction _isObservable(value, property?: PropertyKey): boolean {\n    if (!value) {\n        return false\n    }\n    if (property !== undefined) {\n        if (__DEV__ && (isObservableMap(value) || isObservableArray(value))) {\n            return die(\n                \"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\"\n            )\n        }\n        if (isObservableObject(value)) {\n            return value[$mobx].values_.has(property)\n        }\n        return false\n    }\n    // For first check, see #701\n    return (\n        isObservableObject(value) ||\n        !!value[$mobx] ||\n        isAtom(value) ||\n        isReaction(value) ||\n        isComputedValue(value)\n    )\n}\n\nexport function isObservable(value: any): boolean {\n    if (__DEV__ && arguments.length !== 1) {\n        die(\n            `isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property`\n        )\n    }\n    return _isObservable(value)\n}\n\nexport function isObservableProp(value: any, propName: PropertyKey): boolean {\n    if (__DEV__ && !isStringish(propName)) {\n        return die(`expected a property name as second argument`)\n    }\n    return _isObservable(value, propName)\n}\n","import {\n    $mobx,\n    IIsObservableObject,\n    IObservableArray,\n    ObservableMap,\n    ObservableSet,\n    ObservableObjectAdministration,\n    endBatch,\n    isObservableArray,\n    isObservableMap,\n    isObservableSet,\n    isObservableObject,\n    startBatch,\n    die\n} from \"../internal\"\n\nexport function keys<K>(map: ObservableMap<K, any>): ReadonlyArray<K>\nexport function keys<T>(ar: IObservableArray<T>): ReadonlyArray<number>\nexport function keys<T>(set: ObservableSet<T>): ReadonlyArray<T>\nexport function keys<T extends Object>(obj: T): ReadonlyArray<PropertyKey>\nexport function keys(obj: any): any {\n    if (isObservableObject(obj)) {\n        return (\n            (obj as any as IIsObservableObject)[$mobx] as ObservableObjectAdministration\n        ).keys_()\n    }\n    if (isObservableMap(obj) || isObservableSet(obj)) {\n        return Array.from(obj.keys())\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((_, index) => index)\n    }\n    die(5)\n}\n\nexport function values<K, T>(map: ObservableMap<K, T>): ReadonlyArray<T>\nexport function values<T>(set: ObservableSet<T>): ReadonlyArray<T>\nexport function values<T>(ar: IObservableArray<T>): ReadonlyArray<T>\nexport function values<T = any>(obj: T): ReadonlyArray<T extends object ? T[keyof T] : any>\nexport function values(obj: any): string[] {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => obj[key])\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => obj.get(key))\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.values())\n    }\n    if (isObservableArray(obj)) {\n        return obj.slice()\n    }\n    die(6)\n}\n\nexport function entries<K, T>(map: ObservableMap<K, T>): ReadonlyArray<[K, T]>\nexport function entries<T>(set: ObservableSet<T>): ReadonlyArray<[T, T]>\nexport function entries<T>(ar: IObservableArray<T>): ReadonlyArray<[number, T]>\nexport function entries<T = any>(\n    obj: T\n): ReadonlyArray<[string, T extends object ? T[keyof T] : any]>\nexport function entries(obj: any): any {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => [key, obj[key]])\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => [key, obj.get(key)])\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.entries())\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((key, index) => [index, key])\n    }\n    die(7)\n}\n\nexport function set<V>(obj: ObservableMap<PropertyKey, V>, values: { [key: string]: V })\nexport function set<K, V>(obj: ObservableMap<K, V>, key: K, value: V)\nexport function set<T>(obj: ObservableSet<T>, value: T)\nexport function set<T>(obj: IObservableArray<T>, index: number, value: T)\nexport function set<T extends Object>(obj: T, values: { [key: string]: any })\nexport function set<T extends Object>(obj: T, key: PropertyKey, value: any)\nexport function set(obj: any, key: any, value?: any): void {\n    if (arguments.length === 2 && !isObservableSet(obj)) {\n        startBatch()\n        const values = key\n        try {\n            for (let key in values) {\n                set(obj, key, values[key])\n            }\n        } finally {\n            endBatch()\n        }\n        return\n    }\n    if (isObservableObject(obj)) {\n        ;(obj as any as IIsObservableObject)[$mobx].set_(key, value)\n    } else if (isObservableMap(obj)) {\n        obj.set(key, value)\n    } else if (isObservableSet(obj)) {\n        obj.add(key)\n    } else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\") {\n            key = parseInt(key, 10)\n        }\n        if (key < 0) {\n            die(`Invalid index: '${key}'`)\n        }\n        startBatch()\n        if (key >= obj.length) {\n            obj.length = key + 1\n        }\n        obj[key] = value\n        endBatch()\n    } else {\n        die(8)\n    }\n}\n\nexport function remove<K, V>(obj: ObservableMap<K, V>, key: K)\nexport function remove<T>(obj: ObservableSet<T>, key: T)\nexport function remove<T>(obj: IObservableArray<T>, index: number)\nexport function remove<T extends Object>(obj: T, key: string)\nexport function remove(obj: any, key: any): void {\n    if (isObservableObject(obj)) {\n        ;(obj as any as IIsObservableObject)[$mobx].delete_(key)\n    } else if (isObservableMap(obj)) {\n        obj.delete(key)\n    } else if (isObservableSet(obj)) {\n        obj.delete(key)\n    } else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\") {\n            key = parseInt(key, 10)\n        }\n        obj.splice(key, 1)\n    } else {\n        die(9)\n    }\n}\n\nexport function has<K>(obj: ObservableMap<K, any>, key: K): boolean\nexport function has<T>(obj: ObservableSet<T>, key: T): boolean\nexport function has<T>(obj: IObservableArray<T>, index: number): boolean\nexport function has<T extends Object>(obj: T, key: string): boolean\nexport function has(obj: any, key: any): boolean {\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].has_(key)\n    } else if (isObservableMap(obj)) {\n        return obj.has(key)\n    } else if (isObservableSet(obj)) {\n        return obj.has(key)\n    } else if (isObservableArray(obj)) {\n        return key >= 0 && key < obj.length\n    }\n    die(10)\n}\n\nexport function get<K, V>(obj: ObservableMap<K, V>, key: K): V | undefined\nexport function get<T>(obj: IObservableArray<T>, index: number): T | undefined\nexport function get<T extends Object>(obj: T, key: string): any\nexport function get(obj: any, key: any): any {\n    if (!has(obj, key)) {\n        return undefined\n    }\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].get_(key)\n    } else if (isObservableMap(obj)) {\n        return obj.get(key)\n    } else if (isObservableArray(obj)) {\n        return obj[key]\n    }\n    die(11)\n}\n\nexport function apiDefineProperty(obj: Object, key: PropertyKey, descriptor: PropertyDescriptor) {\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].defineProperty_(key, descriptor)\n    }\n    die(39)\n}\n\nexport function apiOwnKeys(obj: Object) {\n    if (isObservableObject(obj)) {\n        return (obj as any as IIsObservableObject)[$mobx].ownKeys_()\n    }\n    die(38)\n}\n","import {\n    IArrayDidChange,\n    IComputedValue,\n    IMapDidChange,\n    IObjectDidChange,\n    IObservableArray,\n    IObservableValue,\n    IValueDidChange,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    ObservableSet,\n    ISetDidChange,\n    isFunction\n} from \"../internal\"\n\nexport function observe<T>(\n    value: IObservableValue<T> | IComputedValue<T>,\n    listener: (change: IValueDidChange<T>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<T>(\n    observableArray: IObservableArray<T> | Array<T>,\n    listener: (change: IArrayDidChange<T>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<V>(\n    // ObservableSet/ObservableMap are required despite they implement Set/Map: https://github.com/mobxjs/mobx/pull/3180#discussion_r746542929\n    observableSet: ObservableSet<V> | Set<V>,\n    listener: (change: ISetDidChange<V>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<K, V>(\n    observableMap: ObservableMap<K, V> | Map<K, V>,\n    listener: (change: IMapDidChange<K, V>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<K, V>(\n    observableMap: ObservableMap<K, V> | Map<K, V>,\n    property: K,\n    listener: (change: IValueDidChange<V>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe(\n    object: Object,\n    listener: (change: IObjectDidChange) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<T, K extends keyof T>(\n    object: T,\n    property: K,\n    listener: (change: IValueDidChange<T[K]>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe(thing, propOrCb?, cbOrFire?, fireImmediately?): Lambda {\n    if (isFunction(cbOrFire)) {\n        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately)\n    } else {\n        return observeObservable(thing, propOrCb, cbOrFire)\n    }\n}\n\nfunction observeObservable(thing, listener, fireImmediately: boolean) {\n    return getAdministration(thing).observe_(listener, fireImmediately)\n}\n\nfunction observeObservableProperty(thing, property, listener, fireImmediately: boolean) {\n    return getAdministration(thing, property).observe_(listener, fireImmediately)\n}\n","import { endBatch, startBatch } from \"../internal\"\n\n/**\n * During a transaction no views are updated until the end of the transaction.\n * The transaction will be run synchronously nonetheless.\n *\n * @param action a function that updates some reactive state\n * @returns any value that was returned by the 'action' parameter.\n */\nexport function transaction<T>(action: () => T, thisArg = undefined): T {\n    startBatch()\n    try {\n        return action.apply(thisArg)\n    } finally {\n        endBatch()\n    }\n}\n","import { Lambda, once, untrackedEnd, untrackedStart, die } from \"../internal\"\n\nexport type IInterceptor<T> = (change: T) => T | null\n\nexport interface IInterceptable<T> {\n    interceptors_: IInterceptor<T>[] | undefined\n}\n\nexport function hasInterceptors(interceptable: IInterceptable<any>) {\n    return interceptable.interceptors_ !== undefined && interceptable.interceptors_.length > 0\n}\n\nexport function registerInterceptor<T>(\n    interceptable: IInterceptable<T>,\n    handler: IInterceptor<T>\n): Lambda {\n    const interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = [])\n    interceptors.push(handler)\n    return once(() => {\n        const idx = interceptors.indexOf(handler)\n        if (idx !== -1) {\n            interceptors.splice(idx, 1)\n        }\n    })\n}\n\nexport function interceptChange<T>(\n    interceptable: IInterceptable<T | null>,\n    change: T | null\n): T | null {\n    const prevU = untrackedStart()\n    try {\n        // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950\n        const interceptors = [...(interceptable.interceptors_ || [])]\n        for (let i = 0, l = interceptors.length; i < l; i++) {\n            change = interceptors[i](change)\n            if (change && !(change as any).type) {\n                die(14)\n            }\n            if (!change) {\n                break\n            }\n        }\n        return change\n    } finally {\n        untrackedEnd(prevU)\n    }\n}\n","import { Lambda, once, untrackedEnd, untrackedStart } from \"../internal\"\n\nexport interface IListenable {\n    changeListeners_: Function[] | undefined\n}\n\nexport function hasListeners(listenable: IListenable) {\n    return listenable.changeListeners_ !== undefined && listenable.changeListeners_.length > 0\n}\n\nexport function registerListener(listenable: IListenable, handler: Function): Lambda {\n    const listeners = listenable.changeListeners_ || (listenable.changeListeners_ = [])\n    listeners.push(handler)\n    return once(() => {\n        const idx = listeners.indexOf(handler)\n        if (idx !== -1) {\n            listeners.splice(idx, 1)\n        }\n    })\n}\n\nexport function notifyListeners<T>(listenable: IListenable, change: T) {\n    const prevU = untrackedStart()\n    let listeners = listenable.changeListeners_\n    if (!listeners) {\n        return\n    }\n    listeners = listeners.slice()\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](change)\n    }\n    untrackedEnd(prevU)\n}\n","import {\n    $mobx,\n    asObservableObject,\n    AnnotationsMap,\n    endBatch,\n    startBatch,\n    CreateObservableOptions,\n    ObservableObjectAdministration,\n    collectStoredAnnotations,\n    isPlainObject,\n    isObservableObject,\n    die,\n    ownKeys,\n    extendObservable,\n    addHiddenProp,\n    storedAnnotationsSymbol\n} from \"../internal\"\n\n// Hack based on https://github.com/Microsoft/TypeScript/issues/14829#issuecomment-322267089\n// We need this, because otherwise, AdditionalKeys is going to be inferred to be any\n// set of superfluous keys. But, we rather want to get a compile error unless AdditionalKeys is\n// _explicity_ passed as generic argument\n// Fixes: https://github.com/mobxjs/mobx/issues/2325#issuecomment-691070022\ntype NoInfer<T> = [T][T extends any ? 0 : never]\n\nexport function makeObservable<T extends object, AdditionalKeys extends PropertyKey = never>(\n    target: T,\n    annotations?: AnnotationsMap<T, NoInfer<AdditionalKeys>>,\n    options?: CreateObservableOptions\n): T {\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n    startBatch()\n    try {\n        if (__DEV__ && annotations && target[storedAnnotationsSymbol]) {\n            die(\n                `makeObservable second arg must be nullish when using decorators. Mixing @decorator syntax with annotations is not supported.`\n            )\n        }\n        // Default to decorators\n        annotations ??= collectStoredAnnotations(target)\n\n        // Annotate\n        ownKeys(annotations).forEach(key => adm.make_(key, annotations![key]))\n    } finally {\n        endBatch()\n    }\n    return target\n}\n\n// proto[keysSymbol] = new Set<PropertyKey>()\nconst keysSymbol = Symbol(\"mobx-keys\")\n\nexport function makeAutoObservable<T extends object, AdditionalKeys extends PropertyKey = never>(\n    target: T,\n    overrides?: AnnotationsMap<T, NoInfer<AdditionalKeys>>,\n    options?: CreateObservableOptions\n): T {\n    if (__DEV__) {\n        if (!isPlainObject(target) && !isPlainObject(Object.getPrototypeOf(target))) {\n            die(`'makeAutoObservable' can only be used for classes that don't have a superclass`)\n        }\n        if (isObservableObject(target)) {\n            die(`makeAutoObservable can only be used on objects not already made observable`)\n        }\n    }\n\n    // Optimization: avoid visiting protos\n    // Assumes that annotation.make_/.extend_ works the same for plain objects\n    if (isPlainObject(target)) {\n        return extendObservable(target, target, overrides, options)\n    }\n\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n\n    // Optimization: cache keys on proto\n    // Assumes makeAutoObservable can be called only once per object and can't be used in subclass\n    if (!target[keysSymbol]) {\n        const proto = Object.getPrototypeOf(target)\n        const keys = new Set([...ownKeys(target), ...ownKeys(proto)])\n        keys.delete(\"constructor\")\n        keys.delete($mobx)\n        addHiddenProp(proto, keysSymbol, keys)\n    }\n\n    startBatch()\n    try {\n        target[keysSymbol].forEach(key =>\n            adm.make_(\n                key,\n                // must pass \"undefined\" for { key: undefined }\n                !overrides ? true : key in overrides ? overrides[key] : true\n            )\n        )\n    } finally {\n        endBatch()\n    }\n    return target\n}\n","import {\n    $mobx,\n    Atom,\n    EMPTY_ARRAY,\n    IAtom,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    addHiddenFinalProp,\n    checkIfStateModificationsAreAllowed,\n    createInstanceofPredicate,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isObject,\n    isSpyEnabled,\n    notifyListeners,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    allowStateChangesStart,\n    allowStateChangesEnd,\n    assertProxies,\n    reserveArrayBuffer,\n    hasProp,\n    die,\n    globalState\n} from \"../internal\"\n\nconst SPLICE = \"splice\"\nexport const UPDATE = \"update\"\nexport const MAX_SPLICE_SIZE = 10000 // See e.g. https://github.com/mobxjs/mobx/issues/859\n\nexport interface IObservableArray<T = any> extends Array<T> {\n    spliceWithArray(index: number, deleteCount?: number, newItems?: T[]): T[]\n    clear(): T[]\n    replace(newItems: T[]): T[]\n    remove(value: T): boolean\n    toJSON(): T[]\n}\n\ninterface IArrayBaseChange<T> {\n    object: IObservableArray<T>\n    observableKind: \"array\"\n    debugObjectName: string\n    index: number\n}\n\nexport type IArrayDidChange<T = any> = IArrayUpdate<T> | IArraySplice<T>\n\nexport interface IArrayUpdate<T = any> extends IArrayBaseChange<T> {\n    type: \"update\"\n    newValue: T\n    oldValue: T\n}\n\nexport interface IArraySplice<T = any> extends IArrayBaseChange<T> {\n    type: \"splice\"\n    added: T[]\n    addedCount: number\n    removed: T[]\n    removedCount: number\n}\n\nexport interface IArrayWillChange<T = any> {\n    object: IObservableArray<T>\n    index: number\n    type: \"update\"\n    newValue: T\n}\n\nexport interface IArrayWillSplice<T = any> {\n    object: IObservableArray<T>\n    index: number\n    type: \"splice\"\n    added: T[]\n    removedCount: number\n}\n\nconst arrayTraps = {\n    get(target, name) {\n        const adm: ObservableArrayAdministration = target[$mobx]\n        if (name === $mobx) {\n            return adm\n        }\n        if (name === \"length\") {\n            return adm.getArrayLength_()\n        }\n        if (typeof name === \"string\" && !isNaN(name as any)) {\n            return adm.get_(parseInt(name))\n        }\n        if (hasProp(arrayExtensions, name)) {\n            return arrayExtensions[name]\n        }\n        return target[name]\n    },\n    set(target, name, value): boolean {\n        const adm: ObservableArrayAdministration = target[$mobx]\n        if (name === \"length\") {\n            adm.setArrayLength_(value)\n        }\n        if (typeof name === \"symbol\" || isNaN(name)) {\n            target[name] = value\n        } else {\n            // numeric string\n            adm.set_(parseInt(name), value)\n        }\n        return true\n    },\n    preventExtensions() {\n        die(15)\n    }\n}\n\nexport class ObservableArrayAdministration\n    implements IInterceptable<IArrayWillChange<any> | IArrayWillSplice<any>>, IListenable\n{\n    atom_: IAtom\n    readonly values_: any[] = [] // this is the prop that gets proxied, so can't replace it!\n    interceptors_\n    changeListeners_\n    enhancer_: (newV: any, oldV: any | undefined) => any\n    dehancer: any\n    proxy_!: IObservableArray<any>\n    lastKnownLength_ = 0\n\n    constructor(\n        name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n        enhancer: IEnhancer<any>,\n        public owned_: boolean,\n        public legacyMode_: boolean\n    ) {\n        this.atom_ = new Atom(name)\n        this.enhancer_ = (newV, oldV) =>\n            enhancer(newV, oldV, __DEV__ ? name + \"[..]\" : \"ObservableArray[..]\")\n    }\n\n    dehanceValue_(value: any): any {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    dehanceValues_(values: any[]): any[] {\n        if (this.dehancer !== undefined && values.length > 0) {\n            return values.map(this.dehancer) as any\n        }\n        return values\n    }\n\n    intercept_(handler: IInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>): Lambda {\n        return registerInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>(this, handler)\n    }\n\n    observe_(\n        listener: (changeData: IArrayDidChange<any>) => void,\n        fireImmediately = false\n    ): Lambda {\n        if (fireImmediately) {\n            listener(<IArraySplice<any>>{\n                observableKind: \"array\",\n                object: this.proxy_ as any,\n                debugObjectName: this.atom_.name_,\n                type: \"splice\",\n                index: 0,\n                added: this.values_.slice(),\n                addedCount: this.values_.length,\n                removed: [],\n                removedCount: 0\n            })\n        }\n        return registerListener(this, listener)\n    }\n\n    getArrayLength_(): number {\n        this.atom_.reportObserved()\n        return this.values_.length\n    }\n\n    setArrayLength_(newLength: number) {\n        if (typeof newLength !== \"number\" || isNaN(newLength) || newLength < 0) {\n            die(\"Out of range: \" + newLength)\n        }\n        let currentLength = this.values_.length\n        if (newLength === currentLength) {\n            return\n        } else if (newLength > currentLength) {\n            const newItems = new Array(newLength - currentLength)\n            for (let i = 0; i < newLength - currentLength; i++) {\n                newItems[i] = undefined\n            } // No Array.fill everywhere...\n            this.spliceWithArray_(currentLength, 0, newItems)\n        } else {\n            this.spliceWithArray_(newLength, currentLength - newLength)\n        }\n    }\n\n    updateArrayLength_(oldLength: number, delta: number) {\n        if (oldLength !== this.lastKnownLength_) {\n            die(16)\n        }\n        this.lastKnownLength_ += delta\n        if (this.legacyMode_ && delta > 0) {\n            reserveArrayBuffer(oldLength + delta + 1)\n        }\n    }\n\n    spliceWithArray_(index: number, deleteCount?: number, newItems?: any[]): any[] {\n        checkIfStateModificationsAreAllowed(this.atom_)\n        const length = this.values_.length\n\n        if (index === undefined) {\n            index = 0\n        } else if (index > length) {\n            index = length\n        } else if (index < 0) {\n            index = Math.max(0, length + index)\n        }\n\n        if (arguments.length === 1) {\n            deleteCount = length - index\n        } else if (deleteCount === undefined || deleteCount === null) {\n            deleteCount = 0\n        } else {\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index))\n        }\n\n        if (newItems === undefined) {\n            newItems = EMPTY_ARRAY\n        }\n\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IArrayWillSplice<any>>(this as any, {\n                object: this.proxy_ as any,\n                type: SPLICE,\n                index,\n                removedCount: deleteCount,\n                added: newItems\n            })\n            if (!change) {\n                return EMPTY_ARRAY\n            }\n            deleteCount = change.removedCount\n            newItems = change.added\n        }\n\n        newItems =\n            newItems.length === 0 ? newItems : newItems.map(v => this.enhancer_(v, undefined))\n        if (this.legacyMode_ || __DEV__) {\n            const lengthDelta = newItems.length - deleteCount\n            this.updateArrayLength_(length, lengthDelta) // checks if internal array wasn't modified\n        }\n        const res = this.spliceItemsIntoValues_(index, deleteCount, newItems)\n\n        if (deleteCount !== 0 || newItems.length !== 0) {\n            this.notifyArraySplice_(index, newItems, res)\n        }\n        return this.dehanceValues_(res)\n    }\n\n    spliceItemsIntoValues_(index: number, deleteCount: number, newItems: any[]): any[] {\n        if (newItems.length < MAX_SPLICE_SIZE) {\n            return this.values_.splice(index, deleteCount, ...newItems)\n        } else {\n            // The items removed by the splice\n            const res = this.values_.slice(index, index + deleteCount)\n            // The items that that should remain at the end of the array\n            let oldItems = this.values_.slice(index + deleteCount)\n            // New length is the previous length + addition count - deletion count\n            this.values_.length += newItems.length - deleteCount\n            for (let i = 0; i < newItems.length; i++) {\n                this.values_[index + i] = newItems[i]\n            }\n            for (let i = 0; i < oldItems.length; i++) {\n                this.values_[index + newItems.length + i] = oldItems[i]\n            }\n            return res\n        }\n    }\n\n    notifyArrayChildUpdate_(index: number, newValue: any, oldValue: any) {\n        const notifySpy = !this.owned_ && isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IArrayDidChange | null =\n            notify || notifySpy\n                ? ({\n                      observableKind: \"array\",\n                      object: this.proxy_,\n                      type: UPDATE,\n                      debugObjectName: this.atom_.name_,\n                      index,\n                      newValue,\n                      oldValue\n                  } as const)\n                : null\n\n        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\n        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change!)\n        }\n        this.atom_.reportChanged()\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    notifyArraySplice_(index: number, added: any[], removed: any[]) {\n        const notifySpy = !this.owned_ && isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IArraySplice | null =\n            notify || notifySpy\n                ? ({\n                      observableKind: \"array\",\n                      object: this.proxy_,\n                      debugObjectName: this.atom_.name_,\n                      type: SPLICE,\n                      index,\n                      removed,\n                      added,\n                      removedCount: removed.length,\n                      addedCount: added.length\n                  } as const)\n                : null\n\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change!)\n        }\n        this.atom_.reportChanged()\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    get_(index: number): any | undefined {\n        if (index < this.values_.length) {\n            this.atom_.reportObserved()\n            return this.dehanceValue_(this.values_[index])\n        }\n        console.warn(\n            __DEV__\n                ? `[mobx] Out of bounds read: ${index}`\n                : `[mobx.array] Attempt to read an array index (${index}) that is out of bounds (${this.values_.length}). Please check length first. Out of bound indices will not be tracked by MobX`\n        )\n    }\n\n    set_(index: number, newValue: any) {\n        const values = this.values_\n        if (index < values.length) {\n            // update at index in range\n            checkIfStateModificationsAreAllowed(this.atom_)\n            const oldValue = values[index]\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IArrayWillChange<any>>(this as any, {\n                    type: UPDATE,\n                    object: this.proxy_ as any, // since \"this\" is the real array we need to pass its proxy\n                    index,\n                    newValue\n                })\n                if (!change) {\n                    return\n                }\n                newValue = change.newValue\n            }\n            newValue = this.enhancer_(newValue, oldValue)\n            const changed = newValue !== oldValue\n            if (changed) {\n                values[index] = newValue\n                this.notifyArrayChildUpdate_(index, newValue, oldValue)\n            }\n        } else if (index === values.length) {\n            // add a new item\n            this.spliceWithArray_(index, 0, [newValue])\n        } else {\n            // out of bounds\n            die(17, index, values.length)\n        }\n    }\n}\n\nexport function createObservableArray<T>(\n    initialValues: T[] | undefined,\n    enhancer: IEnhancer<T>,\n    name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n    owned = false\n): IObservableArray<T> {\n    assertProxies()\n    const adm = new ObservableArrayAdministration(name, enhancer, owned, false)\n    addHiddenFinalProp(adm.values_, $mobx, adm)\n    const proxy = new Proxy(adm.values_, arrayTraps) as any\n    adm.proxy_ = proxy\n    if (initialValues && initialValues.length) {\n        const prev = allowStateChangesStart(true)\n        adm.spliceWithArray_(0, 0, initialValues)\n        allowStateChangesEnd(prev)\n    }\n    return proxy\n}\n\n// eslint-disable-next-line\nexport var arrayExtensions = {\n    clear(): any[] {\n        return this.splice(0)\n    },\n\n    replace(newItems: any[]) {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        return adm.spliceWithArray_(0, adm.values_.length, newItems)\n    },\n\n    // Used by JSON.stringify\n    toJSON(): any[] {\n        return this.slice()\n    },\n\n    /*\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n     * since these functions alter the inner structure of the array, the have side effects.\n     * Because the have side effects, they should not be used in computed function,\n     * and for that reason the do not call dependencyState.notifyObserved\n     */\n    splice(index: number, deleteCount?: number, ...newItems: any[]): any[] {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        switch (arguments.length) {\n            case 0:\n                return []\n            case 1:\n                return adm.spliceWithArray_(index)\n            case 2:\n                return adm.spliceWithArray_(index, deleteCount)\n        }\n        return adm.spliceWithArray_(index, deleteCount, newItems)\n    },\n\n    spliceWithArray(index: number, deleteCount?: number, newItems?: any[]): any[] {\n        return (this[$mobx] as ObservableArrayAdministration).spliceWithArray_(\n            index,\n            deleteCount,\n            newItems\n        )\n    },\n\n    push(...items: any[]): number {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.spliceWithArray_(adm.values_.length, 0, items)\n        return adm.values_.length\n    },\n\n    pop() {\n        return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0]\n    },\n\n    shift() {\n        return this.splice(0, 1)[0]\n    },\n\n    unshift(...items: any[]): number {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.spliceWithArray_(0, 0, items)\n        return adm.values_.length\n    },\n\n    reverse(): any[] {\n        // reverse by default mutates in place before returning the result\n        // which makes it both a 'derivation' and a 'mutation'.\n        if (globalState.trackingDerivation) {\n            die(37, \"reverse\")\n        }\n        this.replace(this.slice().reverse())\n        return this\n    },\n\n    sort(): any[] {\n        // sort by default mutates in place before returning the result\n        // which goes against all good practices. Let's not change the array in place!\n        if (globalState.trackingDerivation) {\n            die(37, \"sort\")\n        }\n        const copy = this.slice()\n        copy.sort.apply(copy, arguments)\n        this.replace(copy)\n        return this\n    },\n\n    remove(value: any): boolean {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        const idx = adm.dehanceValues_(adm.values_).indexOf(value)\n        if (idx > -1) {\n            this.splice(idx, 1)\n            return true\n        }\n        return false\n    }\n}\n\n/**\n * Wrap function from prototype\n * Without this, everything works as well, but this works\n * faster as everything works on unproxied values\n */\naddArrayExtension(\"concat\", simpleFunc)\naddArrayExtension(\"flat\", simpleFunc)\naddArrayExtension(\"includes\", simpleFunc)\naddArrayExtension(\"indexOf\", simpleFunc)\naddArrayExtension(\"join\", simpleFunc)\naddArrayExtension(\"lastIndexOf\", simpleFunc)\naddArrayExtension(\"slice\", simpleFunc)\naddArrayExtension(\"toString\", simpleFunc)\naddArrayExtension(\"toLocaleString\", simpleFunc)\n// map\naddArrayExtension(\"every\", mapLikeFunc)\naddArrayExtension(\"filter\", mapLikeFunc)\naddArrayExtension(\"find\", mapLikeFunc)\naddArrayExtension(\"findIndex\", mapLikeFunc)\naddArrayExtension(\"flatMap\", mapLikeFunc)\naddArrayExtension(\"forEach\", mapLikeFunc)\naddArrayExtension(\"map\", mapLikeFunc)\naddArrayExtension(\"some\", mapLikeFunc)\n// reduce\naddArrayExtension(\"reduce\", reduceLikeFunc)\naddArrayExtension(\"reduceRight\", reduceLikeFunc)\n\nfunction addArrayExtension(funcName, funcFactory) {\n    if (typeof Array.prototype[funcName] === \"function\") {\n        arrayExtensions[funcName] = funcFactory(funcName)\n    }\n}\n\n// Report and delegate to dehanced array\nfunction simpleFunc(funcName) {\n    return function () {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        return dehancedValues[funcName].apply(dehancedValues, arguments)\n    }\n}\n\n// Make sure callbacks recieve correct array arg #2326\nfunction mapLikeFunc(funcName) {\n    return function (callback, thisArg) {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        return dehancedValues[funcName]((element, index) => {\n            return callback.call(thisArg, element, index, this)\n        })\n    }\n}\n\n// Make sure callbacks recieve correct array arg #2326\nfunction reduceLikeFunc(funcName) {\n    return function () {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        // #2432 - reduce behavior depends on arguments.length\n        const callback = arguments[0]\n        arguments[0] = (accumulator, currentValue, index) => {\n            return callback(accumulator, currentValue, index, this)\n        }\n        return dehancedValues[funcName].apply(dehancedValues, arguments)\n    }\n}\n\nconst isObservableArrayAdministration = createInstanceofPredicate(\n    \"ObservableArrayAdministration\",\n    ObservableArrayAdministration\n)\n\nexport function isObservableArray(thing): thing is IObservableArray<any> {\n    return isObject(thing) && isObservableArrayAdministration(thing[$mobx])\n}\n","import { IComputedDidChange } from \"./computedvalue\"\nimport { IValueDidChange, IBoxDidChange } from \"./../types/observablevalue\"\nimport { IObjectDidChange } from \"./../types/observableobject\"\nimport { IArrayDidChange } from \"./../types/observablearray\"\nimport { Lambda, globalState, once, ISetDidChange, IMapDidChange } from \"../internal\"\n\nexport function isSpyEnabled() {\n    return __DEV__ && !!globalState.spyListeners.length\n}\n\nexport type PureSpyEvent =\n    | { type: \"action\"; name: string; object: unknown; arguments: unknown[] }\n    | { type: \"scheduled-reaction\"; name: string }\n    | { type: \"reaction\"; name: string }\n    | { type: \"error\"; name: string; message: string; error: string }\n    | IComputedDidChange<unknown>\n    | IObjectDidChange<unknown>\n    | IArrayDidChange<unknown>\n    | IMapDidChange<unknown, unknown>\n    | ISetDidChange<unknown>\n    | IValueDidChange<unknown>\n    | IBoxDidChange<unknown>\n    | { type: \"report-end\"; spyReportEnd: true; time?: number }\n\ntype SpyEvent = PureSpyEvent & { spyReportStart?: true }\n\nexport function spyReport(event: SpyEvent) {\n    if (!__DEV__) {\n        return\n    } // dead code elimination can do the rest\n    if (!globalState.spyListeners.length) {\n        return\n    }\n    const listeners = globalState.spyListeners\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](event)\n    }\n}\n\nexport function spyReportStart(event: PureSpyEvent) {\n    if (!__DEV__) {\n        return\n    }\n    const change = { ...event, spyReportStart: true as const }\n    spyReport(change)\n}\n\nconst END_EVENT: SpyEvent = { type: \"report-end\", spyReportEnd: true }\n\nexport function spyReportEnd(change?: { time?: number }) {\n    if (!__DEV__) {\n        return\n    }\n    if (change) {\n        spyReport({ ...change, type: \"report-end\", spyReportEnd: true })\n    } else {\n        spyReport(END_EVENT)\n    }\n}\n\nexport function spy(listener: (change: SpyEvent) => void): Lambda {\n    if (!__DEV__) {\n        console.warn(`[mobx.spy] Is a no-op in production builds`)\n        return function () {}\n    } else {\n        globalState.spyListeners.push(listener)\n        return once(() => {\n            globalState.spyListeners = globalState.spyListeners.filter(l => l !== listener)\n        })\n    }\n}\n","import {\n    $mobx,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    ObservableValue,\n    checkIfStateModificationsAreAllowed,\n    createAtom,\n    createInstanceofPredicate,\n    deepEnhancer,\n    getNextId,\n    getPlainObjectKeys,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isES6Map,\n    isPlainObject,\n    isSpyEnabled,\n    makeIterable,\n    notifyListeners,\n    referenceEnhancer,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    stringifyKey,\n    transaction,\n    untracked,\n    onBecomeUnobserved,\n    globalState,\n    die,\n    isFunction,\n    UPDATE,\n    IAtom,\n    PureSpyEvent,\n    allowStateChanges\n} from \"../internal\"\n\nexport interface IKeyValueMap<V = any> {\n    [key: string]: V\n}\n\nexport type IMapEntry<K = any, V = any> = [K, V]\nexport type IMapEntries<K = any, V = any> = IMapEntry<K, V>[]\n\nexport type IMapDidChange<K = any, V = any> = { observableKind: \"map\"; debugObjectName: string } & (\n    | {\n          object: ObservableMap<K, V>\n          name: K // actual the key or index, but this is based on the ancient .observe proposal for consistency\n          type: \"update\"\n          newValue: V\n          oldValue: V\n      }\n    | {\n          object: ObservableMap<K, V>\n          name: K\n          type: \"add\"\n          newValue: V\n      }\n    | {\n          object: ObservableMap<K, V>\n          name: K\n          type: \"delete\"\n          oldValue: V\n      }\n)\n\nexport interface IMapWillChange<K = any, V = any> {\n    object: ObservableMap<K, V>\n    type: \"update\" | \"add\" | \"delete\"\n    name: K\n    newValue?: V\n}\n\nconst ObservableMapMarker = {}\n\nexport const ADD = \"add\"\nexport const DELETE = \"delete\"\n\nexport type IObservableMapInitialValues<K = any, V = any> =\n    | IMapEntries<K, V>\n    | IKeyValueMap<V>\n    | Map<K, V>\n\n// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54\n// But: https://github.com/mobxjs/mobx/issues/1556\nexport class ObservableMap<K = any, V = any>\n    implements Map<K, V>, IInterceptable<IMapWillChange<K, V>>, IListenable\n{\n    [$mobx] = ObservableMapMarker\n    data_: Map<K, ObservableValue<V>>\n    hasMap_: Map<K, ObservableValue<boolean>> // hasMap, not hashMap >-).\n    keysAtom_: IAtom\n    interceptors_\n    changeListeners_\n    dehancer: any\n\n    constructor(\n        initialData?: IObservableMapInitialValues<K, V>,\n        public enhancer_: IEnhancer<V> = deepEnhancer,\n        public name_ = __DEV__ ? \"ObservableMap@\" + getNextId() : \"ObservableMap\"\n    ) {\n        if (!isFunction(Map)) {\n            die(18)\n        }\n        this.keysAtom_ = createAtom(__DEV__ ? `${this.name_}.keys()` : \"ObservableMap.keys()\")\n        this.data_ = new Map()\n        this.hasMap_ = new Map()\n        allowStateChanges(true, () => {\n            this.merge(initialData)\n        })\n    }\n\n    private has_(key: K): boolean {\n        return this.data_.has(key)\n    }\n\n    has(key: K): boolean {\n        if (!globalState.trackingDerivation) {\n            return this.has_(key)\n        }\n\n        let entry = this.hasMap_.get(key)\n        if (!entry) {\n            const newEntry = (entry = new ObservableValue(\n                this.has_(key),\n                referenceEnhancer,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}?` : \"ObservableMap.key?\",\n                false\n            ))\n            this.hasMap_.set(key, newEntry)\n            onBecomeUnobserved(newEntry, () => this.hasMap_.delete(key))\n        }\n\n        return entry.get()\n    }\n\n    set(key: K, value: V) {\n        const hasKey = this.has_(key)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IMapWillChange<K, V>>(this, {\n                type: hasKey ? UPDATE : ADD,\n                object: this,\n                newValue: value,\n                name: key\n            })\n            if (!change) {\n                return this\n            }\n            value = change.newValue!\n        }\n        if (hasKey) {\n            this.updateValue_(key, value)\n        } else {\n            this.addValue_(key, value)\n        }\n        return this\n    }\n\n    delete(key: K): boolean {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IMapWillChange<K, V>>(this, {\n                type: DELETE,\n                object: this,\n                name: key\n            })\n            if (!change) {\n                return false\n            }\n        }\n        if (this.has_(key)) {\n            const notifySpy = isSpyEnabled()\n            const notify = hasListeners(this)\n            const change: IMapDidChange<K, V> | null =\n                notify || notifySpy\n                    ? {\n                          observableKind: \"map\",\n                          debugObjectName: this.name_,\n                          type: DELETE,\n                          object: this,\n                          oldValue: (<any>this.data_.get(key)).value_,\n                          name: key\n                      }\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change! as PureSpyEvent)\n            } // TODO fix type\n            transaction(() => {\n                this.keysAtom_.reportChanged()\n                this.hasMap_.get(key)?.setNewValue_(false)\n                const observable = this.data_.get(key)!\n                observable.setNewValue_(undefined as any)\n                this.data_.delete(key)\n            })\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n            return true\n        }\n        return false\n    }\n\n    private updateValue_(key: K, newValue: V | undefined) {\n        const observable = this.data_.get(key)!\n        newValue = (observable as any).prepareNewValue_(newValue) as V\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled()\n            const notify = hasListeners(this)\n            const change: IMapDidChange<K, V> | null =\n                notify || notifySpy\n                    ? {\n                          observableKind: \"map\",\n                          debugObjectName: this.name_,\n                          type: UPDATE,\n                          object: this,\n                          oldValue: (observable as any).value_,\n                          name: key,\n                          newValue\n                      }\n                    : null\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change! as PureSpyEvent)\n            } // TODO fix type\n            observable.setNewValue_(newValue as V)\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n    }\n\n    private addValue_(key: K, newValue: V) {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        transaction(() => {\n            const observable = new ObservableValue(\n                newValue,\n                this.enhancer_,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}` : \"ObservableMap.key\",\n                false\n            )\n            this.data_.set(key, observable)\n            newValue = (observable as any).value_ // value might have been changed\n            this.hasMap_.get(key)?.setNewValue_(true)\n            this.keysAtom_.reportChanged()\n        })\n        const notifySpy = isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IMapDidChange<K, V> | null =\n            notify || notifySpy\n                ? {\n                      observableKind: \"map\",\n                      debugObjectName: this.name_,\n                      type: ADD,\n                      object: this,\n                      name: key,\n                      newValue\n                  }\n                : null\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change! as PureSpyEvent)\n        } // TODO fix type\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    get(key: K): V | undefined {\n        if (this.has(key)) {\n            return this.dehanceValue_(this.data_.get(key)!.get())\n        }\n        return this.dehanceValue_(undefined)\n    }\n\n    private dehanceValue_<X extends V | undefined>(value: X): X {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    keys(): IterableIterator<K> {\n        this.keysAtom_.reportObserved()\n        return this.data_.keys()\n    }\n\n    values(): IterableIterator<V> {\n        const self = this\n        const keys = this.keys()\n        return makeIterable({\n            next() {\n                const { done, value } = keys.next()\n                return {\n                    done,\n                    value: done ? (undefined as any) : self.get(value)\n                }\n            }\n        })\n    }\n\n    entries(): IterableIterator<IMapEntry<K, V>> {\n        const self = this\n        const keys = this.keys()\n        return makeIterable({\n            next() {\n                const { done, value } = keys.next()\n                return {\n                    done,\n                    value: done ? (undefined as any) : ([value, self.get(value)!] as [K, V])\n                }\n            }\n        })\n    }\n\n    [Symbol.iterator]() {\n        return this.entries()\n    }\n\n    forEach(callback: (value: V, key: K, object: Map<K, V>) => void, thisArg?) {\n        for (const [key, value] of this) {\n            callback.call(thisArg, value, key, this)\n        }\n    }\n\n    /** Merge another object into this object, returns this. */\n    merge(other?: IObservableMapInitialValues<K, V>): ObservableMap<K, V> {\n        if (isObservableMap(other)) {\n            other = new Map(other)\n        }\n        transaction(() => {\n            if (isPlainObject(other)) {\n                getPlainObjectKeys(other).forEach((key: any) =>\n                    this.set(key as K, (other as IKeyValueMap)[key])\n                )\n            } else if (Array.isArray(other)) {\n                other.forEach(([key, value]) => this.set(key, value))\n            } else if (isES6Map(other)) {\n                if (other.constructor !== Map) {\n                    die(19, other)\n                }\n                other.forEach((value, key) => this.set(key, value))\n            } else if (other !== null && other !== undefined) {\n                die(20, other)\n            }\n        })\n        return this\n    }\n\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const key of this.keys()) {\n                    this.delete(key)\n                }\n            })\n        })\n    }\n\n    replace(values: IObservableMapInitialValues<K, V>): ObservableMap<K, V> {\n        // Implementation requirements:\n        // - respect ordering of replacement map\n        // - allow interceptors to run and potentially prevent individual operations\n        // - don't recreate observables that already exist in original map (so we don't destroy existing subscriptions)\n        // - don't _keysAtom.reportChanged if the keys of resulting map are indentical (order matters!)\n        // - note that result map may differ from replacement map due to the interceptors\n        transaction(() => {\n            // Convert to map so we can do quick key lookups\n            const replacementMap = convertToMap(values)\n            const orderedData = new Map()\n            // Used for optimization\n            let keysReportChangedCalled = false\n            // Delete keys that don't exist in replacement map\n            // if the key deletion is prevented by interceptor\n            // add entry at the beginning of the result map\n            for (const key of this.data_.keys()) {\n                // Concurrently iterating/deleting keys\n                // iterator should handle this correctly\n                if (!replacementMap.has(key)) {\n                    const deleted = this.delete(key)\n                    // Was the key removed?\n                    if (deleted) {\n                        // _keysAtom.reportChanged() was already called\n                        keysReportChangedCalled = true\n                    } else {\n                        // Delete prevented by interceptor\n                        const value = this.data_.get(key)\n                        orderedData.set(key, value)\n                    }\n                }\n            }\n            // Merge entries\n            for (const [key, value] of replacementMap.entries()) {\n                // We will want to know whether a new key is added\n                const keyExisted = this.data_.has(key)\n                // Add or update value\n                this.set(key, value)\n                // The addition could have been prevent by interceptor\n                if (this.data_.has(key)) {\n                    // The update could have been prevented by interceptor\n                    // and also we want to preserve existing values\n                    // so use value from _data map (instead of replacement map)\n                    const value = this.data_.get(key)\n                    orderedData.set(key, value)\n                    // Was a new key added?\n                    if (!keyExisted) {\n                        // _keysAtom.reportChanged() was already called\n                        keysReportChangedCalled = true\n                    }\n                }\n            }\n            // Check for possible key order change\n            if (!keysReportChangedCalled) {\n                if (this.data_.size !== orderedData.size) {\n                    // If size differs, keys are definitely modified\n                    this.keysAtom_.reportChanged()\n                } else {\n                    const iter1 = this.data_.keys()\n                    const iter2 = orderedData.keys()\n                    let next1 = iter1.next()\n                    let next2 = iter2.next()\n                    while (!next1.done) {\n                        if (next1.value !== next2.value) {\n                            this.keysAtom_.reportChanged()\n                            break\n                        }\n                        next1 = iter1.next()\n                        next2 = iter2.next()\n                    }\n                }\n            }\n            // Use correctly ordered map\n            this.data_ = orderedData\n        })\n        return this\n    }\n\n    get size(): number {\n        this.keysAtom_.reportObserved()\n        return this.data_.size\n    }\n\n    toString(): string {\n        return \"[object ObservableMap]\"\n    }\n\n    toJSON(): [K, V][] {\n        return Array.from(this)\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Map\"\n    }\n\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe_(listener: (changes: IMapDidChange<K, V>) => void, fireImmediately?: boolean): Lambda {\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support fireImmediately=true in combination with maps.\")\n        }\n        return registerListener(this, listener)\n    }\n\n    intercept_(handler: IInterceptor<IMapWillChange<K, V>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n}\n\n// eslint-disable-next-line\nexport var isObservableMap = createInstanceofPredicate(\"ObservableMap\", ObservableMap) as (\n    thing: any\n) => thing is ObservableMap<any, any>\n\nfunction convertToMap(dataStructure: any): Map<any, any> {\n    if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {\n        return dataStructure\n    } else if (Array.isArray(dataStructure)) {\n        return new Map(dataStructure)\n    } else if (isPlainObject(dataStructure)) {\n        const map = new Map()\n        for (const key in dataStructure) {\n            map.set(key, dataStructure[key])\n        }\n        return map\n    } else {\n        return die(21, dataStructure)\n    }\n}\n","import {\n    $mobx,\n    createAtom,\n    deepEnhancer,\n    getNextId,\n    IEnhancer,\n    isSpyEnabled,\n    hasListeners,\n    IListenable,\n    registerListener,\n    Lambda,\n    spyReportStart,\n    notifyListeners,\n    spyReportEnd,\n    createInstanceofPredicate,\n    hasInterceptors,\n    interceptChange,\n    IInterceptable,\n    IInterceptor,\n    registerInterceptor,\n    checkIfStateModificationsAreAllowed,\n    untracked,\n    makeIterable,\n    transaction,\n    isES6Set,\n    IAtom,\n    DELETE,\n    ADD,\n    die,\n    isFunction\n} from \"../internal\"\n\nconst ObservableSetMarker = {}\n\nexport type IObservableSetInitialValues<T> = Set<T> | readonly T[]\n\nexport type ISetDidChange<T = any> =\n    | {\n          object: ObservableSet<T>\n          observableKind: \"set\"\n          debugObjectName: string\n          type: \"add\"\n          newValue: T\n      }\n    | {\n          object: ObservableSet<T>\n          observableKind: \"set\"\n          debugObjectName: string\n          type: \"delete\"\n          oldValue: T\n      }\n\nexport type ISetWillChange<T = any> =\n    | {\n          type: \"delete\"\n          object: ObservableSet<T>\n          oldValue: T\n      }\n    | {\n          type: \"add\"\n          object: ObservableSet<T>\n          newValue: T\n      }\n\nexport class ObservableSet<T = any> implements Set<T>, IInterceptable<ISetWillChange>, IListenable {\n    [$mobx] = ObservableSetMarker\n    private data_: Set<any> = new Set()\n    private atom_: IAtom\n    changeListeners_\n    interceptors_\n    dehancer: any\n    enhancer_: (newV: any, oldV: any | undefined) => any\n\n    constructor(\n        initialData?: IObservableSetInitialValues<T>,\n        enhancer: IEnhancer<T> = deepEnhancer,\n        public name_ = __DEV__ ? \"ObservableSet@\" + getNextId() : \"ObservableSet\"\n    ) {\n        if (!isFunction(Set)) {\n            die(22)\n        }\n        this.atom_ = createAtom(this.name_)\n        this.enhancer_ = (newV, oldV) => enhancer(newV, oldV, name_)\n        if (initialData) {\n            this.replace(initialData)\n        }\n    }\n\n    private dehanceValue_<X extends T | undefined>(value: X): X {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const value of this.data_.values()) {\n                    this.delete(value)\n                }\n            })\n        })\n    }\n\n    forEach(callbackFn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any) {\n        for (const value of this) {\n            callbackFn.call(thisArg, value, value, this)\n        }\n    }\n\n    get size() {\n        this.atom_.reportObserved()\n        return this.data_.size\n    }\n\n    add(value: T) {\n        checkIfStateModificationsAreAllowed(this.atom_)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<ISetWillChange<T>>(this, {\n                type: ADD,\n                object: this,\n                newValue: value\n            })\n            if (!change) {\n                return this\n            }\n            // ideally, value = change.value would be done here, so that values can be\n            // changed by interceptor. Same applies for other Set and Map api's.\n        }\n        if (!this.has(value)) {\n            transaction(() => {\n                this.data_.add(this.enhancer_(value, undefined))\n                this.atom_.reportChanged()\n            })\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const notify = hasListeners(this)\n            const change =\n                notify || notifySpy\n                    ? <ISetDidChange<T>>{\n                          observableKind: \"set\",\n                          debugObjectName: this.name_,\n                          type: ADD,\n                          object: this,\n                          newValue: value\n                      }\n                    : null\n            if (notifySpy && __DEV__) {\n                spyReportStart(change!)\n            }\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (notifySpy && __DEV__) {\n                spyReportEnd()\n            }\n        }\n\n        return this\n    }\n\n    delete(value: any) {\n        if (hasInterceptors(this)) {\n            const change = interceptChange<ISetWillChange<T>>(this, {\n                type: DELETE,\n                object: this,\n                oldValue: value\n            })\n            if (!change) {\n                return false\n            }\n        }\n        if (this.has(value)) {\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const notify = hasListeners(this)\n            const change =\n                notify || notifySpy\n                    ? <ISetDidChange<T>>{\n                          observableKind: \"set\",\n                          debugObjectName: this.name_,\n                          type: DELETE,\n                          object: this,\n                          oldValue: value\n                      }\n                    : null\n\n            if (notifySpy && __DEV__) {\n                spyReportStart(change!)\n            }\n            transaction(() => {\n                this.atom_.reportChanged()\n                this.data_.delete(value)\n            })\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (notifySpy && __DEV__) {\n                spyReportEnd()\n            }\n            return true\n        }\n        return false\n    }\n\n    has(value: any) {\n        this.atom_.reportObserved()\n        return this.data_.has(this.dehanceValue_(value))\n    }\n\n    entries() {\n        let nextIndex = 0\n        const keys = Array.from(this.keys())\n        const values = Array.from(this.values())\n        return makeIterable<[T, T]>({\n            next() {\n                const index = nextIndex\n                nextIndex += 1\n                return index < values.length\n                    ? { value: [keys[index], values[index]], done: false }\n                    : { done: true }\n            }\n        } as any)\n    }\n\n    keys(): IterableIterator<T> {\n        return this.values()\n    }\n\n    values(): IterableIterator<T> {\n        this.atom_.reportObserved()\n        const self = this\n        let nextIndex = 0\n        const observableValues = Array.from(this.data_.values())\n        return makeIterable<T>({\n            next() {\n                return nextIndex < observableValues.length\n                    ? { value: self.dehanceValue_(observableValues[nextIndex++]), done: false }\n                    : { done: true }\n            }\n        } as any)\n    }\n\n    replace(other: ObservableSet<T> | IObservableSetInitialValues<T>): ObservableSet<T> {\n        if (isObservableSet(other)) {\n            other = new Set(other)\n        }\n\n        transaction(() => {\n            if (Array.isArray(other)) {\n                this.clear()\n                other.forEach(value => this.add(value))\n            } else if (isES6Set(other)) {\n                this.clear()\n                other.forEach(value => this.add(value))\n            } else if (other !== null && other !== undefined) {\n                die(\"Cannot initialize set from \" + other)\n            }\n        })\n\n        return this\n    }\n    observe_(listener: (changes: ISetDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        // ... 'fireImmediately' could also be true?\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support fireImmediately=true in combination with sets.\")\n        }\n        return registerListener(this, listener)\n    }\n\n    intercept_(handler: IInterceptor<ISetWillChange<T>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    toJSON(): T[] {\n        return Array.from(this)\n    }\n\n    toString(): string {\n        return \"[object ObservableSet]\"\n    }\n\n    [Symbol.iterator]() {\n        return this.values()\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Set\"\n    }\n}\n\n// eslint-disable-next-line\nexport var isObservableSet = createInstanceofPredicate(\"ObservableSet\", ObservableSet) as (\n    thing: any\n) => thing is ObservableSet<any>\n","import {\n    CreateObservableOptions,\n    getAnnotationFromOptions,\n    propagateChanged,\n    isAnnotation,\n    $mobx,\n    Atom,\n    Annotation,\n    ComputedValue,\n    IAtom,\n    IComputedValueOptions,\n    IEnhancer,\n    IInterceptable,\n    IListenable,\n    Lambda,\n    ObservableValue,\n    addHiddenProp,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isObject,\n    isPlainObject,\n    isSpyEnabled,\n    notifyListeners,\n    referenceEnhancer,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    stringifyKey,\n    globalState,\n    ADD,\n    UPDATE,\n    die,\n    hasProp,\n    getDescriptor,\n    storedAnnotationsSymbol,\n    ownKeys,\n    isOverride,\n    defineProperty,\n    autoAnnotation,\n    getAdministration,\n    getDebugName,\n    objectPrototype,\n    MakeResult\n} from \"../internal\"\n\nconst descriptorCache = Object.create(null)\n\nexport type IObjectDidChange<T = any> = {\n    observableKind: \"object\"\n    name: PropertyKey\n    object: T\n    debugObjectName: string\n} & (\n    | {\n          type: \"add\"\n          newValue: any\n      }\n    | {\n          type: \"update\"\n          oldValue: any\n          newValue: any\n      }\n    | {\n          type: \"remove\"\n          oldValue: any\n      }\n)\n\nexport type IObjectWillChange<T = any> =\n    | {\n          object: T\n          type: \"update\" | \"add\"\n          name: PropertyKey\n          newValue: any\n      }\n    | {\n          object: T\n          type: \"remove\"\n          name: PropertyKey\n      }\n\nconst REMOVE = \"remove\"\n\nexport class ObservableObjectAdministration\n    implements IInterceptable<IObjectWillChange>, IListenable\n{\n    keysAtom_: IAtom\n    changeListeners_\n    interceptors_\n    proxy_: any\n    isPlainObject_: boolean\n    appliedAnnotations_?: object\n    private pendingKeys_: undefined | Map<PropertyKey, ObservableValue<boolean>>\n\n    constructor(\n        public target_: any,\n        public values_ = new Map<PropertyKey, ObservableValue<any> | ComputedValue<any>>(),\n        public name_: string,\n        // Used anytime annotation is not explicitely provided\n        public defaultAnnotation_: Annotation = autoAnnotation\n    ) {\n        this.keysAtom_ = new Atom(__DEV__ ? `${this.name_}.keys` : \"ObservableObject.keys\")\n        // Optimization: we use this frequently\n        this.isPlainObject_ = isPlainObject(this.target_)\n        if (__DEV__ && !isAnnotation(this.defaultAnnotation_)) {\n            die(`defaultAnnotation must be valid annotation`)\n        }\n        if (__DEV__) {\n            // Prepare structure for tracking which fields were already annotated\n            this.appliedAnnotations_ = {}\n        }\n    }\n\n    getObservablePropValue_(key: PropertyKey): any {\n        return this.values_.get(key)!.get()\n    }\n\n    setObservablePropValue_(key: PropertyKey, newValue): boolean | null {\n        const observable = this.values_.get(key)\n        if (observable instanceof ComputedValue) {\n            observable.set(newValue)\n            return true\n        }\n\n        // intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IObjectWillChange>(this, {\n                type: UPDATE,\n                object: this.proxy_ || this.target_,\n                name: key,\n                newValue\n            })\n            if (!change) {\n                return null\n            }\n            newValue = (change as any).newValue\n        }\n        newValue = (observable as any).prepareNewValue_(newValue)\n\n        // notify spy & observers\n        if (newValue !== globalState.UNCHANGED) {\n            const notify = hasListeners(this)\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const change: IObjectDidChange | null =\n                notify || notifySpy\n                    ? {\n                          type: UPDATE,\n                          observableKind: \"object\",\n                          debugObjectName: this.name_,\n                          object: this.proxy_ || this.target_,\n                          oldValue: (observable as any).value_,\n                          name: key,\n                          newValue\n                      }\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change!)\n            }\n            ;(observable as ObservableValue<any>).setNewValue_(newValue)\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n        return true\n    }\n\n    get_(key: PropertyKey): any {\n        if (globalState.trackingDerivation && !hasProp(this.target_, key)) {\n            // Key doesn't exist yet, subscribe for it in case it's added later\n            this.has_(key)\n        }\n        return this.target_[key]\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {any} value\n     * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    set_(key: PropertyKey, value: any, proxyTrap: boolean = false): boolean | null {\n        // Don't use .has(key) - we care about own\n        if (hasProp(this.target_, key)) {\n            // Existing prop\n            if (this.values_.has(key)) {\n                // Observable (can be intercepted)\n                return this.setObservablePropValue_(key, value)\n            } else if (proxyTrap) {\n                // Non-observable - proxy\n                return Reflect.set(this.target_, key, value)\n            } else {\n                // Non-observable\n                this.target_[key] = value\n                return true\n            }\n        } else {\n            // New prop\n            return this.extend_(\n                key,\n                { value, enumerable: true, writable: true, configurable: true },\n                this.defaultAnnotation_,\n                proxyTrap\n            )\n        }\n    }\n\n    // Trap for \"in\"\n    has_(key: PropertyKey): boolean {\n        if (!globalState.trackingDerivation) {\n            // Skip key subscription outside derivation\n            return key in this.target_\n        }\n        this.pendingKeys_ ||= new Map()\n        let entry = this.pendingKeys_.get(key)\n        if (!entry) {\n            entry = new ObservableValue(\n                key in this.target_,\n                referenceEnhancer,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}?` : \"ObservableObject.key?\",\n                false\n            )\n            this.pendingKeys_.set(key, entry)\n        }\n        return entry.get()\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {Annotation|boolean} annotation true - use default annotation, false - ignore prop\n     */\n    make_(key: PropertyKey, annotation: Annotation | boolean): void {\n        if (annotation === true) {\n            annotation = this.defaultAnnotation_\n        }\n        if (annotation === false) {\n            return\n        }\n        assertAnnotable(this, annotation, key)\n        if (!(key in this.target_)) {\n            // Throw on missing key, except for decorators:\n            // Decorator annotations are collected from whole prototype chain.\n            // When called from super() some props may not exist yet.\n            // However we don't have to worry about missing prop,\n            // because the decorator must have been applied to something.\n            if (this.target_[storedAnnotationsSymbol]?.[key]) {\n                return // will be annotated by subclass constructor\n            } else {\n                die(1, annotation.annotationType_, `${this.name_}.${key.toString()}`)\n            }\n        }\n        let source = this.target_\n        while (source && source !== objectPrototype) {\n            const descriptor = getDescriptor(source, key)\n            if (descriptor) {\n                const outcome = annotation.make_(this, key, descriptor, source)\n                if (outcome === MakeResult.Cancel) {\n                    return\n                }\n                if (outcome === MakeResult.Break) {\n                    break\n                }\n            }\n            source = Object.getPrototypeOf(source)\n        }\n        recordAnnotationApplied(this, annotation, key)\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    extend_(\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        annotation: Annotation | boolean,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        if (annotation === true) {\n            annotation = this.defaultAnnotation_\n        }\n        if (annotation === false) {\n            return this.defineProperty_(key, descriptor, proxyTrap)\n        }\n        assertAnnotable(this, annotation, key)\n        const outcome = annotation.extend_(this, key, descriptor, proxyTrap)\n        if (outcome) {\n            recordAnnotationApplied(this, annotation, key)\n        }\n        return outcome\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    defineProperty_(\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: descriptor.value\n                })\n                if (!change) {\n                    return null\n                }\n                const { newValue } = change as any\n                if (descriptor.value !== newValue) {\n                    descriptor = {\n                        ...descriptor,\n                        value: newValue\n                    }\n                }\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            // Notify\n            this.notifyPropertyAddition_(key, descriptor.value)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    // If original descriptor becomes relevant, move this to annotation directly\n    defineObservableProperty_(\n        key: PropertyKey,\n        value: any,\n        enhancer: IEnhancer<any>,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: value\n                })\n                if (!change) {\n                    return null\n                }\n                value = (change as any).newValue\n            }\n\n            const cachedDescriptor = getCachedObservablePropDescriptor(key)\n            const descriptor = {\n                configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n                enumerable: true,\n                get: cachedDescriptor.get,\n                set: cachedDescriptor.set\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            const observable = new ObservableValue(\n                value,\n                enhancer,\n                __DEV__ ? `${this.name_}.${key.toString()}` : \"ObservableObject.key\",\n                false\n            )\n\n            this.values_.set(key, observable)\n\n            // Notify (value possibly changed by ObservableValue)\n            this.notifyPropertyAddition_(key, observable.value_)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    // If original descriptor becomes relevant, move this to annotation directly\n    defineComputedProperty_(\n        key: PropertyKey,\n        options: IComputedValueOptions<any>,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: undefined\n                })\n                if (!change) {\n                    return null\n                }\n            }\n            options.name ||= __DEV__ ? `${this.name_}.${key.toString()}` : \"ObservableObject.key\"\n            options.context = this.proxy_ || this.target_\n            const cachedDescriptor = getCachedObservablePropDescriptor(key)\n            const descriptor = {\n                configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n                enumerable: false,\n                get: cachedDescriptor.get,\n                set: cachedDescriptor.set\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            this.values_.set(key, new ComputedValue(options))\n\n            // Notify\n            this.notifyPropertyAddition_(key, undefined)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    delete_(key: PropertyKey, proxyTrap: boolean = false): boolean | null {\n        // No such prop\n        if (!hasProp(this.target_, key)) {\n            return true\n        }\n\n        // Intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IObjectWillChange>(this, {\n                object: this.proxy_ || this.target_,\n                name: key,\n                type: REMOVE\n            })\n            // Cancelled\n            if (!change) {\n                return null\n            }\n        }\n\n        // Delete\n        try {\n            startBatch()\n            const notify = hasListeners(this)\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const observable = this.values_.get(key)\n            // Value needed for spies/listeners\n            let value = undefined\n            // Optimization: don't pull the value unless we will need it\n            if (!observable && (notify || notifySpy)) {\n                value = getDescriptor(this.target_, key)?.value\n            }\n            // delete prop (do first, may fail)\n            if (proxyTrap) {\n                if (!Reflect.deleteProperty(this.target_, key)) {\n                    return false\n                }\n            } else {\n                delete this.target_[key]\n            }\n            // Allow re-annotating this field\n            if (__DEV__) {\n                delete this.appliedAnnotations_![key]\n            }\n            // Clear observable\n            if (observable) {\n                this.values_.delete(key)\n                // for computed, value is undefined\n                if (observable instanceof ObservableValue) {\n                    value = observable.value_\n                }\n                // Notify: autorun(() => obj[key]), see #1796\n                propagateChanged(observable)\n            }\n            // Notify \"keys/entries/values\" observers\n            this.keysAtom_.reportChanged()\n\n            // Notify \"has\" observers\n            // \"in\" as it may still exist in proto\n            this.pendingKeys_?.get(key)?.set(key in this.target_)\n\n            // Notify spies/listeners\n            if (notify || notifySpy) {\n                const change: IObjectDidChange = {\n                    type: REMOVE,\n                    observableKind: \"object\",\n                    object: this.proxy_ || this.target_,\n                    debugObjectName: this.name_,\n                    oldValue: value,\n                    name: key\n                }\n                if (__DEV__ && notifySpy) {\n                    spyReportStart(change!)\n                }\n                if (notify) {\n                    notifyListeners(this, change)\n                }\n                if (__DEV__ && notifySpy) {\n                    spyReportEnd()\n                }\n            }\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe_(callback: (changes: IObjectDidChange) => void, fireImmediately?: boolean): Lambda {\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support the fire immediately property for observable objects.\")\n        }\n        return registerListener(this, callback)\n    }\n\n    intercept_(handler): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    notifyPropertyAddition_(key: PropertyKey, value: any) {\n        const notify = hasListeners(this)\n        const notifySpy = __DEV__ && isSpyEnabled()\n        if (notify || notifySpy) {\n            const change: IObjectDidChange | null =\n                notify || notifySpy\n                    ? ({\n                          type: ADD,\n                          observableKind: \"object\",\n                          debugObjectName: this.name_,\n                          object: this.proxy_ || this.target_,\n                          name: key,\n                          newValue: value\n                      } as const)\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change!)\n            }\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n\n        this.pendingKeys_?.get(key)?.set(true)\n\n        // Notify \"keys/entries/values\" observers\n        this.keysAtom_.reportChanged()\n    }\n\n    ownKeys_(): ArrayLike<string | symbol> {\n        this.keysAtom_.reportObserved()\n        return ownKeys(this.target_)\n    }\n\n    keys_(): PropertyKey[] {\n        // Returns enumerable && own, but unfortunately keysAtom will report on ANY key change.\n        // There is no way to distinguish between Object.keys(object) and Reflect.ownKeys(object) - both are handled by ownKeys trap.\n        // We can either over-report in Object.keys(object) or under-report in Reflect.ownKeys(object)\n        // We choose to over-report in Object.keys(object), because:\n        // - typically it's used with simple data objects\n        // - when symbolic/non-enumerable keys are relevant Reflect.ownKeys works as expected\n        this.keysAtom_.reportObserved()\n        return Object.keys(this.target_)\n    }\n}\n\nexport interface IIsObservableObject {\n    $mobx: ObservableObjectAdministration\n}\n\nexport function asObservableObject(\n    target: any,\n    options?: CreateObservableOptions\n): IIsObservableObject {\n    if (__DEV__ && options && isObservableObject(target)) {\n        die(`Options can't be provided for already observable objects.`)\n    }\n\n    if (hasProp(target, $mobx)) {\n        if (__DEV__ && !(getAdministration(target) instanceof ObservableObjectAdministration)) {\n            die(\n                `Cannot convert '${getDebugName(target)}' into observable object:` +\n                    `\\nThe target is already observable of different type.` +\n                    `\\nExtending builtins is not supported.`\n            )\n        }\n        return target\n    }\n\n    if (__DEV__ && !Object.isExtensible(target)) {\n        die(\"Cannot make the designated object observable; it is not extensible\")\n    }\n\n    const name =\n        options?.name ??\n        (__DEV__\n            ? `${\n                  isPlainObject(target) ? \"ObservableObject\" : target.constructor.name\n              }@${getNextId()}`\n            : \"ObservableObject\")\n\n    const adm = new ObservableObjectAdministration(\n        target,\n        new Map(),\n        String(name),\n        getAnnotationFromOptions(options)\n    )\n\n    addHiddenProp(target, $mobx, adm)\n\n    return target\n}\n\nconst isObservableObjectAdministration = createInstanceofPredicate(\n    \"ObservableObjectAdministration\",\n    ObservableObjectAdministration\n)\n\nfunction getCachedObservablePropDescriptor(key) {\n    return (\n        descriptorCache[key] ||\n        (descriptorCache[key] = {\n            get() {\n                return this[$mobx].getObservablePropValue_(key)\n            },\n            set(value) {\n                return this[$mobx].setObservablePropValue_(key, value)\n            }\n        })\n    )\n}\n\nexport function isObservableObject(thing: any): boolean {\n    if (isObject(thing)) {\n        return isObservableObjectAdministration((thing as any)[$mobx])\n    }\n    return false\n}\n\nexport function recordAnnotationApplied(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey\n) {\n    if (__DEV__) {\n        adm.appliedAnnotations_![key] = annotation\n    }\n    // Remove applied decorator annotation so we don't try to apply it again in subclass constructor\n    delete adm.target_[storedAnnotationsSymbol]?.[key]\n}\n\nfunction assertAnnotable(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey\n) {\n    // Valid annotation\n    if (__DEV__ && !isAnnotation(annotation)) {\n        die(`Cannot annotate '${adm.name_}.${key.toString()}': Invalid annotation.`)\n    }\n\n    /*\n    // Configurable, not sealed, not frozen\n    // Possibly not needed, just a little better error then the one thrown by engine.\n    // Cases where this would be useful the most (subclass field initializer) are not interceptable by this.\n    if (__DEV__) {\n        const configurable = getDescriptor(adm.target_, key)?.configurable\n        const frozen = Object.isFrozen(adm.target_)\n        const sealed = Object.isSealed(adm.target_)\n        if (!configurable || frozen || sealed) {\n            const fieldName = `${adm.name_}.${key.toString()}`\n            const requestedAnnotationType = annotation.annotationType_\n            let error = `Cannot apply '${requestedAnnotationType}' to '${fieldName}':`\n            if (frozen) {\n                error += `\\nObject is frozen.`\n            }\n            if (sealed) {\n                error += `\\nObject is sealed.`\n            }\n            if (!configurable) {\n                error += `\\nproperty is not configurable.`\n                // Mention only if caused by us to avoid confusion\n                if (hasProp(adm.appliedAnnotations!, key)) {\n                    error += `\\nTo prevent accidental re-definition of a field by a subclass, `\n                    error += `all annotated fields of non-plain objects (classes) are not configurable.`\n                }\n            }\n            die(error)\n        }\n    }\n    */\n\n    // Not annotated\n    if (__DEV__ && !isOverride(annotation) && hasProp(adm.appliedAnnotations_!, key)) {\n        const fieldName = `${adm.name_}.${key.toString()}`\n        const currentAnnotationType = adm.appliedAnnotations_![key].annotationType_\n        const requestedAnnotationType = annotation.annotationType_\n        die(\n            `Cannot apply '${requestedAnnotationType}' to '${fieldName}':` +\n                `\\nThe field is already annotated with '${currentAnnotationType}'.` +\n                `\\nRe-annotating fields is not allowed.` +\n                `\\nUse 'override' annotation for methods overriden by subclass.`\n        )\n    }\n}\n","import {\n    getNextId,\n    addHiddenFinalProp,\n    allowStateChangesStart,\n    allowStateChangesEnd,\n    makeIterable,\n    addHiddenProp,\n    ObservableArrayAdministration,\n    $mobx,\n    arrayExtensions,\n    IEnhancer,\n    isObservableArray,\n    IObservableArray,\n    defineProperty\n} from \"../internal\"\n\n/**\n * This array buffer contains two lists of properties, so that all arrays\n * can recycle their property definitions, which significantly improves performance of creating\n * properties on the fly.\n */\nlet OBSERVABLE_ARRAY_BUFFER_SIZE = 0\n\n// Typescript workaround to make sure ObservableArray extends Array\nclass StubArray {}\nfunction inherit(ctor, proto) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ctor.prototype, proto)\n    } else if (ctor.prototype.__proto__ !== undefined) {\n        ctor.prototype.__proto__ = proto\n    } else {\n        ctor.prototype = proto\n    }\n}\ninherit(StubArray, Array.prototype)\n\n// Weex proto freeze protection was here,\n// but it is unclear why the hack is need as MobX never changed the prototype\n// anyway, so removed it in V6\n\nclass LegacyObservableArray<T> extends StubArray {\n    constructor(\n        initialValues: T[] | undefined,\n        enhancer: IEnhancer<T>,\n        name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n        owned = false\n    ) {\n        super()\n\n        const adm = new ObservableArrayAdministration(name, enhancer, owned, true)\n        adm.proxy_ = this as any\n        addHiddenFinalProp(this, $mobx, adm)\n\n        if (initialValues && initialValues.length) {\n            const prev = allowStateChangesStart(true)\n            // @ts-ignore\n            this.spliceWithArray(0, 0, initialValues)\n            allowStateChangesEnd(prev)\n        }\n    }\n\n    concat(...arrays: T[][]): T[] {\n        ;(this[$mobx] as ObservableArrayAdministration).atom_.reportObserved()\n        return Array.prototype.concat.apply(\n            (this as any).slice(),\n            //@ts-ignore\n            arrays.map(a => (isObservableArray(a) ? a.slice() : a))\n        )\n    }\n\n    get length(): number {\n        return (this[$mobx] as ObservableArrayAdministration).getArrayLength_()\n    }\n\n    set length(newLength: number) {\n        ;(this[$mobx] as ObservableArrayAdministration).setArrayLength_(newLength)\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Array\"\n    }\n\n    [Symbol.iterator]() {\n        const self = this\n        let nextIndex = 0\n        return makeIterable({\n            next() {\n                return nextIndex < self.length\n                    ? { value: self[nextIndex++], done: false }\n                    : { done: true, value: undefined }\n            }\n        })\n    }\n}\n\nObject.entries(arrayExtensions).forEach(([prop, fn]) => {\n    if (prop !== \"concat\") {\n        addHiddenProp(LegacyObservableArray.prototype, prop, fn)\n    }\n})\n\nfunction createArrayEntryDescriptor(index: number) {\n    return {\n        enumerable: false,\n        configurable: true,\n        get: function () {\n            return this[$mobx].get_(index)\n        },\n        set: function (value) {\n            this[$mobx].set_(index, value)\n        }\n    }\n}\n\nfunction createArrayBufferItem(index: number) {\n    defineProperty(LegacyObservableArray.prototype, \"\" + index, createArrayEntryDescriptor(index))\n}\n\nexport function reserveArrayBuffer(max: number) {\n    if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {\n        for (let index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max + 100; index++) {\n            createArrayBufferItem(index)\n        }\n        OBSERVABLE_ARRAY_BUFFER_SIZE = max\n    }\n}\n\nreserveArrayBuffer(1000)\n\nexport function createLegacyArray<T>(\n    initialValues: T[] | undefined,\n    enhancer: IEnhancer<T>,\n    name?: string\n): IObservableArray<T> {\n    return new LegacyObservableArray(initialValues, enhancer, name) as any\n}\n","import { isAction } from \"../api/action\"\nimport {\n    $mobx,\n    IDepTreeNode,\n    isAtom,\n    isComputedValue,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isReaction,\n    isObservableSet,\n    die,\n    isFunction\n} from \"../internal\"\n\nexport function getAtom(thing: any, property?: PropertyKey): IDepTreeNode {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray(thing)) {\n            if (property !== undefined) {\n                die(23)\n            }\n            return (thing as any)[$mobx].atom_\n        }\n        if (isObservableSet(thing)) {\n            return (thing as any)[$mobx]\n        }\n        if (isObservableMap(thing)) {\n            if (property === undefined) {\n                return thing.keysAtom_\n            }\n            const observable = thing.data_.get(property) || thing.hasMap_.get(property)\n            if (!observable) {\n                die(25, property, getDebugName(thing))\n            }\n            return observable\n        }\n        if (property && !thing[$mobx]) {\n            thing[property]\n        } // See #1072\n        if (isObservableObject(thing)) {\n            if (!property) {\n                return die(26)\n            }\n            const observable = (thing as any)[$mobx].values_.get(property)\n            if (!observable) {\n                die(27, property, getDebugName(thing))\n            }\n            return observable\n        }\n        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n            return thing\n        }\n    } else if (isFunction(thing)) {\n        if (isReaction(thing[$mobx])) {\n            // disposer function\n            return thing[$mobx]\n        }\n    }\n    die(28)\n}\n\nexport function getAdministration(thing: any, property?: string) {\n    if (!thing) {\n        die(29)\n    }\n    if (property !== undefined) {\n        return getAdministration(getAtom(thing, property))\n    }\n    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n        return thing\n    }\n    if (isObservableMap(thing) || isObservableSet(thing)) {\n        return thing\n    }\n    if (thing[$mobx]) {\n        return thing[$mobx]\n    }\n    die(24, thing)\n}\n\nexport function getDebugName(thing: any, property?: string): string {\n    let named\n    if (property !== undefined) {\n        named = getAtom(thing, property)\n    } else if (isAction(thing)) {\n        return thing.name\n    } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {\n        named = getAdministration(thing)\n    } else {\n        // valid for arrays as well\n        named = getAtom(thing)\n    }\n    return named.name_\n}\n","import {\n    isES6Map,\n    isObservableArray,\n    isObservableMap,\n    isES6Set,\n    isObservableSet,\n    hasProp,\n    isFunction,\n    objectPrototype\n} from \"../internal\"\n\ndeclare const Symbol\nconst toString = objectPrototype.toString\n\nexport function deepEqual(a: any, b: any, depth: number = -1): boolean {\n    return eq(a, b, depth)\n}\n\n// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\n// Internal recursive comparison function for `isEqual`.\nfunction eq(a: any, b: any, depth: number, aStack?: any[], bStack?: any[]) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) {\n        return a !== 0 || 1 / a === 1 / b\n    }\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) {\n        return false\n    }\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) {\n        return b !== b\n    }\n    // Exhaust primitive checks\n    const type = typeof a\n    if (type !== \"function\" && type !== \"object\" && typeof b != \"object\") {\n        return false\n    }\n\n    // Compare `[[Class]]` names.\n    const className = toString.call(a)\n    if (className !== toString.call(b)) {\n        return false\n    }\n    switch (className) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case \"[object RegExp]\":\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case \"[object String]\":\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return \"\" + a === \"\" + b\n        case \"[object Number]\":\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN.\n            if (+a !== +a) {\n                return +b !== +b\n            }\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b\n        case \"[object Date]\":\n        case \"[object Boolean]\":\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b\n        case \"[object Symbol]\":\n            return (\n                typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b)\n            )\n        case \"[object Map]\":\n        case \"[object Set]\":\n            // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.\n            // Hide this extra level by increasing the depth.\n            if (depth >= 0) {\n                depth++\n            }\n            break\n    }\n    // Unwrap any wrapped objects.\n    a = unwrap(a)\n    b = unwrap(b)\n\n    const areArrays = className === \"[object Array]\"\n    if (!areArrays) {\n        if (typeof a != \"object\" || typeof b != \"object\") {\n            return false\n        }\n\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n        // from different frames are.\n        const aCtor = a.constructor,\n            bCtor = b.constructor\n        if (\n            aCtor !== bCtor &&\n            !(\n                isFunction(aCtor) &&\n                aCtor instanceof aCtor &&\n                isFunction(bCtor) &&\n                bCtor instanceof bCtor\n            ) &&\n            \"constructor\" in a &&\n            \"constructor\" in b\n        ) {\n            return false\n        }\n    }\n\n    if (depth === 0) {\n        return false\n    } else if (depth < 0) {\n        depth = -1\n    }\n\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || []\n    bStack = bStack || []\n    let length = aStack.length\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] === a) {\n            return bStack[length] === b\n        }\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a)\n    bStack.push(b)\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        length = a.length\n        if (length !== b.length) {\n            return false\n        }\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (length--) {\n            if (!eq(a[length], b[length], depth - 1, aStack, bStack)) {\n                return false\n            }\n        }\n    } else {\n        // Deep compare objects.\n        const keys = Object.keys(a)\n        let key\n        length = keys.length\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\n        if (Object.keys(b).length !== length) {\n            return false\n        }\n        while (length--) {\n            // Deep compare each member\n            key = keys[length]\n            if (!(hasProp(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack))) {\n                return false\n            }\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop()\n    bStack.pop()\n    return true\n}\n\nfunction unwrap(a: any) {\n    if (isObservableArray(a)) {\n        return a.slice()\n    }\n    if (isES6Map(a) || isObservableMap(a)) {\n        return Array.from(a.entries())\n    }\n    if (isES6Set(a) || isObservableSet(a)) {\n        return Array.from(a.entries())\n    }\n    return a\n}\n","export function makeIterable<T>(iterator: Iterator<T>): IterableIterator<T> {\n    iterator[Symbol.iterator] = getSelf\n    return iterator as any\n}\n\nfunction getSelf() {\n    return this\n}\n","/**\n * (c) Michel Weststrate 2015 - 2020\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get an global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\nimport { die } from \"./errors\"\nimport { getGlobal } from \"./utils/global\"\n;[\"Symbol\", \"Map\", \"Set\"].forEach(m => {\n    let g = getGlobal()\n    if (typeof g[m] === \"undefined\") {\n        die(`MobX requires global '${m}' to be available or polyfilled`)\n    }\n})\n\nimport { spy, getDebugName, $mobx } from \"./internal\"\n\nexport {\n    IObservable,\n    IDepTreeNode,\n    Reaction,\n    IReactionPublic,\n    IReactionDisposer,\n    untracked,\n    IAtom,\n    createAtom,\n    spy,\n    IComputedValue,\n    IEqualsComparer,\n    comparer,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    IObjectWillChange,\n    IObjectDidChange,\n    isObservableObject,\n    IValueDidChange,\n    IValueWillChange,\n    IObservableValue,\n    isObservableValue as isBoxedObservable,\n    IObservableArray,\n    IArrayWillChange,\n    IArrayWillSplice,\n    IArraySplice,\n    IArrayUpdate,\n    IArrayDidChange,\n    isObservableArray,\n    IKeyValueMap,\n    ObservableMap,\n    IMapEntries,\n    IMapEntry,\n    IMapWillChange,\n    IMapDidChange,\n    isObservableMap,\n    IObservableMapInitialValues,\n    ObservableSet,\n    isObservableSet,\n    ISetDidChange,\n    ISetWillChange,\n    IObservableSetInitialValues,\n    transaction,\n    observable,\n    IObservableFactory,\n    CreateObservableOptions,\n    computed,\n    IComputedFactory,\n    isObservable,\n    isObservableProp,\n    isComputed,\n    isComputedProp,\n    extendObservable,\n    observe,\n    intercept,\n    autorun,\n    IAutorunOptions,\n    reaction,\n    IReactionOptions,\n    when,\n    IWhenOptions,\n    action,\n    isAction,\n    runInAction,\n    IActionFactory,\n    keys,\n    values,\n    entries,\n    set,\n    remove,\n    has,\n    get,\n    apiOwnKeys as ownKeys,\n    apiDefineProperty as defineProperty,\n    configure,\n    onBecomeObserved,\n    onBecomeUnobserved,\n    flow,\n    isFlow,\n    flowResult,\n    FlowCancellationError,\n    isFlowCancellationError,\n    toJS,\n    trace,\n    IObserverTree,\n    IDependencyTree,\n    getDependencyTree,\n    getObserverTree,\n    resetGlobalState as _resetGlobalState,\n    getGlobalState as _getGlobalState,\n    getDebugName,\n    getAtom,\n    getAdministration as _getAdministration,\n    allowStateChanges as _allowStateChanges,\n    runInAction as _allowStateChangesInsideComputed, // This has become the default behavior in Mobx 6\n    Lambda,\n    $mobx,\n    isComputingDerivation as _isComputingDerivation,\n    onReactionError,\n    interceptReads as _interceptReads,\n    IComputedValueOptions,\n    IActionRunInfo,\n    _startAction,\n    _endAction,\n    allowStateReadsStart as _allowStateReadsStart,\n    allowStateReadsEnd as _allowStateReadsEnd,\n    makeObservable,\n    makeAutoObservable,\n    autoAction as _autoAction,\n    AnnotationsMap,\n    AnnotationMapEntry,\n    override\n} from \"./internal\"\n\n// Devtools support\ndeclare const __MOBX_DEVTOOLS_GLOBAL_HOOK__: { injectMobx: (any) => void }\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n    // See: https://github.com/andykog/mobx-devtools/\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({\n        spy,\n        extras: {\n            getDebugName\n        },\n        $mobx\n    })\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.on = on;\nexports.off = off;\nfunction on(el, eventName, callback, opts) {\n  opts = opts || false;\n  if (el.addEventListener) {\n    el.addEventListener(eventName, callback, opts);\n  } else if (el.attachEvent) {\n    el.attachEvent(\"on\" + eventName, function (e) {\n      callback.call(el, e || window.event);\n    });\n  }\n}\n\nfunction off(el, eventName, callback, opts) {\n  opts = opts || false;\n  if (el.removeEventListener) {\n    el.removeEventListener(eventName, callback, opts);\n  } else if (el.detachEvent) {\n    el.detachEvent(\"on\" + eventName, callback);\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * @fileOverview Find scroll parent\n */\n\nexports.default = function (node) {\n  if (!(node instanceof HTMLElement)) {\n    return document.documentElement;\n  }\n\n  var excludeStaticParent = node.style.position === 'absolute';\n  var overflowRegex = /(scroll|auto)/;\n  var parent = node;\n\n  while (parent) {\n    if (!parent.parentNode) {\n      return node.ownerDocument || document.documentElement;\n    }\n\n    var style = window.getComputedStyle(parent);\n    var position = style.position;\n    var overflow = style.overflow;\n    var overflowX = style['overflow-x'];\n    var overflowY = style['overflow-y'];\n\n    if (position === 'static' && excludeStaticParent) {\n      parent = parent.parentNode;\n      continue;\n    }\n\n    if (overflowRegex.test(overflow) && overflowRegex.test(overflowX) && overflowRegex.test(overflowY)) {\n      return parent;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return node.ownerDocument || node.documentElement || document.documentElement;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = debounce;\nfunction debounce(func, wait, immediate) {\n  var timeout = void 0;\n  var args = void 0;\n  var context = void 0;\n  var timestamp = void 0;\n  var result = void 0;\n\n  var later = function later() {\n    var last = +new Date() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) {\n          context = null;\n          args = null;\n        }\n      }\n    }\n  };\n\n  return function debounced() {\n    context = this;\n    args = arguments;\n    timestamp = +new Date();\n\n    var callNow = immediate && !timeout;\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n\n    if (callNow) {\n      result = func.apply(context, args);\n      context = null;\n      args = null;\n    }\n\n    return result;\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = throttle;\n/*eslint-disable */\nfunction throttle(fn, threshhold, scope) {\n  threshhold || (threshhold = 250);\n  var last, deferTimer;\n  return function () {\n    var context = scope || this;\n\n    var now = +new Date(),\n        args = arguments;\n    if (last && now < last + threshhold) {\n      // hold on to it\n      clearTimeout(deferTimer);\n      deferTimer = setTimeout(function () {\n        last = now;\n        fn.apply(context, args);\n      }, threshhold);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;"],"sourceRoot":""}