{"version":3,"sources":["pages/Pages/PageDetail.js","stores/anime.js","graphql/apollo.js","constants/GraphQl.js"],"names":["PageDetail","animeStore","useAnime","animeDetail","params","useParams","useState","setModal","loading","setLoading","useHistory","useEffect","loadData","window","scrollTo","addEventListener","scrollNavigation","removeEventListener","a","getAnimeDetail","id","doc","document","documentElement","pageYOffset","scrollTop","clientTop","getElementById","classList","add","className","remove","Fragment","style","backgroundImage","bannerImage","backgroundSize","lg","md","xs","height","once","src","coverImage","width","title","type","format","episodes","duration","status","popularity","favourites","to","icon","onClick","prevState","modal","color","dangerouslySetInnerHTML","__html","description","characters","map","item","key","image","alt","name","gender","age","relations","_animeStore","makeApolloClient","token","link","HttpLink","uri","process","cache","InMemoryCache","ApolloClient","GET_ANIME_LIST","gql","GET_ANIME_DETAIL","AnimeModel","types","model","maybeNull","number","string","CharacterModel","dateOfBirth","AnimeDetailModel","optional","array","AnimeStore","anime","perPage","lastPage","currentPage","state","views","self","getQlClient","actions","getAnimeList","flow","page","genre","console","log","variables","query","response","data","Page","pageInfo","media","english","native","large","resp","Media","nodes","full","day","month","year","create","story"],"mappings":"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","file":"static/js/11.ec87caea.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  Card,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useAnime } from \"../../stores/anime\";\r\nimport LazyLoad from \"react-lazyload\";\r\n\r\n//Import Icons\r\nimport FeatherIcon from \"feather-icons-react\";\r\n\r\n\r\nconst PageDetail = () => {\r\n  const animeStore = useAnime();\r\n  const animeDetail = animeStore.animeDetail\r\n  const params = useParams()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [modal, setModal] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    loadData()\r\n    window.scrollTo(0, 0)\r\n    window.addEventListener(\"scroll\", scrollNavigation, true);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", scrollNavigation, true);\r\n    }\r\n  },[])\r\n\r\n  const loadData = async () => {\r\n    await animeStore.getAnimeDetail(params.id)\r\n    setLoading(false)\r\n  }\r\n\r\n  const scrollNavigation = () => {\r\n    var doc = document.documentElement;\r\n    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\r\n    if (top > 80) {\r\n      document.getElementById(\"topnav\").classList.add(\"nav-sticky\");\r\n      document.getElementById(\"buyButton\").className = \"btn btn-primary\";\r\n    } else {\r\n      document.getElementById(\"topnav\").classList.remove(\"nav-sticky\");\r\n      document.getElementById(\"buyButton\").className = \"btn btn-light\";\r\n    }\r\n  };\r\n\r\n  const togglemodal = () => {\r\n    setModal(prevState => !prevState.modal)\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {(!loading) ? (\r\n      <section\r\n        className=\"bg-half-260 d-table w-100\"\r\n        style={{ backgroundImage: `url(${animeDetail.bannerImage})`, backgroundSize:'cover !important' }}\r\n      >\r\n        <div className=\"bg-overlay\"></div>\r\n      </section>\r\n      ): (\r\n        <section\r\n          className=\"bg-half-260 d-table w-100\"\r\n        >\r\n          <div className=\"bg-overlay\"></div>\r\n        </section>\r\n      )\r\n      }\r\n\r\n      <section className=\"section\">\r\n        <Container>\r\n          <Row>\r\n            \r\n            <Col lg=\"4\" md=\"5\" xs=\"12\">\r\n              <Card className=\"job-profile shadow border-0\">\r\n              {!loading &&\r\n                <div className=\"text-center py-5 border-bottom rounded-top\">\r\n                  <LazyLoad height={261} once>\r\n                  <img\r\n                    src={animeDetail.coverImage}\r\n                    className=\"mx-auto shadow d-block\"\r\n                    style={{width:150}}\r\n                  />\r\n                  </LazyLoad>\r\n                  <h5 className=\"mt-3 mb-0\">{animeDetail.title}</h5>\r\n                  <p className=\"text-muted mb-0\">{animeDetail.type}</p>\r\n                </div>\r\n              }\r\n                <CardBody>\r\n                  <h5 className=\"card-title\">Details :</h5>\r\n\r\n                  <ul className=\"list-unstyled\">\r\n                    <li className=\"h6\">\r\n                      <span className=\"text-muted\">Format :</span>{\" \"}\r\n                      {animeDetail.format}\r\n                    </li>\r\n                    <li className=\"h6\">\r\n                      <span className=\"text-muted\">Episodes :</span>{\" \"}\r\n                      {animeDetail.episodes}\r\n                    </li>\r\n                    <li className=\"h6\">\r\n                      <span className=\"text-muted\">Episode Duration :</span>{\" \"}\r\n                      {animeDetail.duration}\r\n                    </li>\r\n                    <li className=\"h6\">\r\n                      <span className=\"text-muted\">Status :</span>{\" \"}\r\n                      {animeDetail.status}\r\n                    </li>\r\n                    <li className=\"h6\">\r\n                      <span className=\"text-muted\">Popularity :</span>{\" \"}\r\n                      {animeDetail.popularity}\r\n                    </li>\r\n                    <li className=\"h6\">\r\n                      <span className=\"text-muted\">Favorites :</span>{\" \"}\r\n                      {animeDetail.favourites}\r\n                    </li>\r\n\r\n                    <li>\r\n                      <ul className=\"list-unstyled social-icon mb-0 mt-4\">\r\n                        <li className=\"list-inline-item\">\r\n                          <Link to=\"#\" className=\"rounded\">\r\n                            <i>\r\n                              <FeatherIcon\r\n                                icon=\"facebook\"\r\n                                className=\"fea icon-sm fea-social\"\r\n                              />\r\n                            </i>\r\n                          </Link>\r\n                        </li>{\" \"}\r\n                        <li className=\"list-inline-item\">\r\n                          <Link to=\"#\" className=\"rounded\">\r\n                            <i>\r\n                              <FeatherIcon\r\n                                icon=\"instagram\"\r\n                                className=\"fea icon-sm fea-social\"\r\n                              />\r\n                            </i>\r\n                          </Link>\r\n                        </li>{\" \"}\r\n                        <li className=\"list-inline-item\">\r\n                          <Link to=\"#\" className=\"rounded\">\r\n                            <i>\r\n                              <FeatherIcon\r\n                                icon=\"twitter\"\r\n                                className=\"fea icon-sm fea-social\"\r\n                              />\r\n                            </i>\r\n                          </Link>\r\n                        </li>{\" \"}\r\n                        <li className=\"list-inline-item\">\r\n                          <Link to=\"#\" className=\"rounded\">\r\n                            <i>\r\n                              <FeatherIcon\r\n                                icon=\"linkedin\"\r\n                                className=\"fea icon-sm fea-social\"\r\n                              />\r\n                            </i>\r\n                          </Link>\r\n                        </li>{\" \"}\r\n                        <li className=\"list-inline-item\">\r\n                          <Link to=\"#\" className=\"rounded\">\r\n                            <i>\r\n                              <FeatherIcon\r\n                                icon=\"github\"\r\n                                className=\"fea icon-sm fea-social\"\r\n                              />\r\n                            </i>\r\n                          </Link>\r\n                        </li>{\" \"}\r\n                        <li className=\"list-inline-item\">\r\n                          <Link to=\"#\" className=\"rounded\">\r\n                            <i>\r\n                              <FeatherIcon\r\n                                icon=\"youtube\"\r\n                                className=\"fea icon-sm fea-social\"\r\n                              />\r\n                            </i>\r\n                          </Link>\r\n                        </li>{\" \"}\r\n                        <li className=\"list-inline-item\">\r\n                          <Link to=\"#\" className=\"rounded\">\r\n                            <i>\r\n                              <FeatherIcon\r\n                                icon=\"gitlab\"\r\n                                className=\"fea icon-sm fea-social\"\r\n                              />\r\n                            </i>\r\n                          </Link>\r\n                        </li>\r\n                      </ul>\r\n                    </li>\r\n                  </ul>\r\n                  <div className=\"d-grid\">\r\n                    <Link\r\n                      to=\"#\"\r\n                      onClick={togglemodal}\r\n                      className=\"btn btn-block btn-primary\"\r\n                    >\r\n                      Watch Now \r\n                  </Link>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n\r\n            {loading &&\r\n                <Col lg=\"8\" md=\"7\" xs=\"12\" className=\"mt-4 mt-sm-0 pt-2 pt-sm-0\">\r\n                <Row className=\"justify-content-center align-items-center mt-4\">\r\n                    <Spinner\r\n                    className=\"\"\r\n                    color=\"primary\" type=\"grow\"\r\n                    >.</Spinner>\r\n                </Row>\r\n                </Col>\r\n            }\r\n            \r\n            {!loading &&\r\n            <Col lg=\"8\" md=\"7\" xs=\"12\" className=\"mt-4 mt-sm-0 pt-2 pt-sm-0\">\r\n              <div className=\"ms-lg-4\">\r\n                <h4>Description :</h4>\r\n                <p className=\"text-muted\" dangerouslySetInnerHTML={ { __html: animeDetail.description } }>\r\n                </p>\r\n\r\n                \r\n                <h4 className=\"mt-lg-5 mt-4\">Characters :</h4>\r\n                <Row>\r\n                  {animeDetail.characters.map((item, key) => (\r\n                    <Col key={key} lg=\"6\" className=\"mt-4 pt-2\">\r\n                      <div className=\"d-flex\">\r\n                        <div className=\"company-logo text-muted h6 me-3 text-center\">\r\n                          <img\r\n                            src={item.image}\r\n                            className=\"avatar avatar-md-sm mx-auto d-block mb-2\"\r\n                            alt=\"experience\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"flex-1\">\r\n                          <h5 className=\"title mb-0\">{item.name}</h5>\r\n                          <small className=\"text-muted company-university\">\r\n                          {item.gender} - {item.age}\r\n                          </small>\r\n                          {/* <p className=\"text-muted mt-2 mb-0\">{item.dateOfBirth}</p> */}\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n                <h4 className=\"mt-lg-5 mt-4\">Relations :</h4>\r\n                <Row>\r\n                  {animeDetail.relations.map((item, key) => (\r\n                    <Col key={key} md={4} xs={12} className=\"mt-4 pt-2\">\r\n                      <Card className=\"border-0 work-container work-classic\">\r\n                        <CardBody className=\"p-0\">\r\n                          \r\n                            <img\r\n                              src={item.image}\r\n                              className=\"img-fluid rounded work-image\"\r\n                              alt=\"Landrick\"\r\n                            />\r\n                          <div className=\"content pt-3\">\r\n                            <h5 className=\"mb-0\">\r\n                              <span\r\n                                className=\"text-dark title\"\r\n                              >\r\n                                {item.title}\r\n                              </span>\r\n                            </h5>\r\n                            {/* <h6 className=\"text-muted tag mb-0\">\r\n                              {project.subtitle}\r\n                            </h6> */}\r\n                          </div>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n            }\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default PageDetail;\r\n","import { types, flow } from \"mobx-state-tree\";\nimport makeApolloClient from '../graphql/apollo';\nimport { GET_ANIME_LIST, GET_ANIME_DETAIL } from '../constants/GraphQl';\n\nexport const AnimeModel = types.model(\"AnimeModel\", {\n  id: types.maybeNull(types.number),\n  title: types.maybeNull(types.string, \"\"),\n  image: types.maybeNull(types.string, \"\"),\n})\n\nexport const CharacterModel = types.model(\"CharacterModel\", {\n    id: types.maybeNull(types.number),\n    name: types.maybeNull(types.string, \"\"),\n    image: types.maybeNull(types.string, \"\"),\n    gender: types.maybeNull(types.string, \"\"),\n    age: types.maybeNull(types.string, \"\"),\n    dateOfBirth: types.maybeNull(types.string, \"\")\n})\n\nexport const AnimeDetailModel = types.model(\"AnimeDetailModel\", {\n    title: types.maybeNull(types.string, \"\"),\n    type: types.maybeNull(types.string, \"\"),\n    bannerImage: types.maybeNull(types.string, \"\"),\n    coverImage: types.maybeNull(types.string, \"\"),\n    format: types.maybeNull(types.string, \"\"),\n    episodes: types.maybeNull(types.number, \"\"),\n    duration: types.maybeNull(types.number, \"\"),\n    status: types.maybeNull(types.string, \"\"),\n    popularity: types.maybeNull(types.number, \"\"),\n    favourites: types.maybeNull(types.number, \"\"),\n    description: types.maybeNull(types.string, \"\"),\n    relations: types.optional(types.array(AnimeModel), []),\n    characters: types.optional(types.array(CharacterModel), []),\n})\n\nexport const AnimeStore = types.model(\"AnimeStore\", {\n    anime: types.array(AnimeModel),\n    animeDetail: types.optional(AnimeDetailModel, {}),\n    perPage: 24,\n    lastPage: 0,\n    currentPage: 1,\n    state: 'pending'\n  })\n  .views(self => ({\n    get getQlClient() {\n        return makeApolloClient()\n    }\n  }))\n  .actions(self => {\n    const getAnimeList = flow(function* getAnimeList(page,genre) {\n      try {\n        self.state = 'pending'\n        console.log('page',page,genre)\n        const variables = {\n            page: page,\n            perPage: self.perPage,\n            genre: genre\n        }\n        const response = yield self.getQlClient.query({\n            query: GET_ANIME_LIST,\n            variables\n        })\n        console.log('data', response)\n        self.lastPage = response.data.Page.pageInfo.lastPage\n        self.currentPage = response.data.Page.pageInfo.currentPage\n        const data = response.data.Page.media.map((item) => {\n            return {\n                id: item.id,\n                title: item.title.english || item.title.native,\n                image: item.coverImage.large\n            }\n        })\n        console.log('d',data)\n        self.anime = data\n        self.state = 'done'\n        return response.data\n      } catch (error) {\n        console.log('er', error)\n        self.state = 'error'\n      }\n    })\n    const getAnimeDetail = flow(function* getAnimeDetail(id) {\n        try {\n          self.state = 'pending'\n          const variables = {\n              id\n          }\n          const response = yield self.getQlClient.query({\n              query: GET_ANIME_DETAIL,\n              variables\n          })\n          console.log('datadet', response)\n          const resp = response.data.Media;\n          const data = {\n            title: resp.title.english || resp.title.native,\n            type: resp.type,\n            bannerImage: resp.bannerImage,\n            coverImage: resp.coverImage.large,\n            description: resp.description,\n            format: resp.format,\n            episodes: resp.episodes,\n            duration: resp.duration,\n            status: resp.status,\n            popularity: resp.popularity,\n            favourites: resp.favourites,\n            relations: resp.relations.nodes.map((item) => {\n                return {\n                    id: item.id,\n                    title: item.title.english || item.title.native,\n                    image: item.coverImage.large\n                }\n            }),\n            characters: resp.characters.nodes.map((item) => {\n                return {\n                    id: item.id,\n                    name: item.name.full,\n                    image: item.image.large,\n                    gender: item.gender,\n                    age: item.age,\n                    dateOfBirth: `${item.dateOfBirth.day} - ${item.dateOfBirth.month} - ${item.dateOfBirth.year}`\n                }\n            })\n          }\n          console.log('d',data)\n          self.animeDetail = data\n          self.state = 'done'\n          return response.data\n        } catch (error) {\n          console.log('er', error)\n          self.state = 'error'\n        }\n      })\n    return {\n      getAnimeList,\n      getAnimeDetail\n    }\n  });\n\nlet _animeStore\nexport const useAnime = () => {\n  if (!_animeStore) {\n    _animeStore = AnimeStore.create({\n      anime: [],\n      story: {},\n      state: 'pending'\n    })\n  }\n\n  return _animeStore;\n}\n","import { HttpLink } from 'apollo-link-http';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nconst makeApolloClient = (token) => {\n  // create an apollo link instance, a network interface for apollo client\n  const link = new HttpLink({\n    uri: process.env.REACT_APP_PUBLIC_URL,\n  });\n\n  //console.log(GRAPHQL_ENDPOINT, token)\n  // create an inmemory cache instance for caching graphql data\n  const cache = new InMemoryCache()\n  // instantiate apollo client with apollo link instance and cache instance\n  const client = new ApolloClient({\n    link,\n    cache\n  });\n  return client;\n}\n\nexport default makeApolloClient;\n","import gql from 'graphql-tag';\n\nexport const GET_ANIME_LIST = gql`\nquery ($page: Int, $perPage: Int, $genre: String) {\n    Page(page: $page, perPage: $perPage){\n      pageInfo {\n        total\n        perPage\n        currentPage\n        lastPage\n        hasNextPage\n      }\n      media(isAdult:false,genre:$genre) {\n        id,\n        isAdult\n        coverImage {\n          large\n        },\n        title {\n          english\n          native\n        }\n      }\n    }\n  }\n`\n\nexport const GET_ANIME_DETAIL = gql`\nquery ($id: Int) {\n    Media(id: $id){\n        title {\n          romaji\n          english\n          native\n          userPreferred\n        }\n        type\n        bannerImage\n        coverImage {\n          extraLarge\n          large\n        }\n        format\n        episodes\n        duration\n        status\n        popularity\n        favourites\n        relations {\n            nodes {\n              id\n              title {\n                english\n                native\n              }\n              coverImage {\n                large\n              }\n            }\n        }\n        description(asHtml:false)\n        characters {\n          nodes {\n            id\n            gender\n            age\n            dateOfBirth {\n              year\n              month\n              day\n            }\n            name {\n              first\n              middle\n              last\n              full\n              native\n              userPreferred\n            }\n            image {\n              large\n              medium\n            }\n          }\n        } \n      }\n  }\n`"],"sourceRoot":""}